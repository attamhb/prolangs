(undo-tree-save-format-version . 1)
"138ddc81251659ab94aaa5c1952044c043662f82"
[nil nil nil nil (25732 41327 908158 951000) 0 nil]
([nil nil ((130 . 131) (129 . 130) (t 25732 40527 210113 349000) 129) nil (25732 41327 908156 665000) 0 nil])
([nil nil ((132 . 133) (131 . 132) 131) nil (25732 41327 908154 470000) 0 nil])
([nil nil ((134 . 135) (133 . 134) 133) nil (25732 41327 908152 439000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . 135) (undo-tree-id14 . 1)) nil (25732 41327 908150 213000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . 131) (undo-tree-id12 . -1) (undo-tree-id13 . -1)) nil (25732 41327 908147 746000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . 131) (undo-tree-id0 . 1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1)) nil (25732 41327 908141 55000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . 131) (undo-tree-id15 . 1) (t 25732 41327 916746 192000)) nil (25732 41634 221410 40000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . 131) (undo-tree-id16 . 1) (t 25732 41634 220735 89000)) nil (25732 42180 917836 586000) 0 nil])
([nil nil ((540 . 541) (t 25732 42180 927310 43000)) nil (25732 44344 334286 857000) 0 nil])
([nil nil ((540 . 548) (#("

(defun" 0 1 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t) 1 2 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t) 2 8 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 540) (t 25732 44344 343156 384000)) nil (25733 1798 596961 631000) 0 nil])
([nil nil ((548 . 558) (#(" factorial" 0 10 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 548)) nil (25733 1798 596959 328000) 0 nil])
([nil nil ((558 . 561) (#(" (n" 0 3 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 558)) nil (25733 1798 596957 531000) 0 nil])
([nil nil ((561 . 568) (#(")
  (if" 0 2 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t) 2 7 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 561)) nil (25733 1798 596955 545000) 0 nil])
([nil nil ((618 . 627) (#(")

(print" 0 2 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t) 2 3 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t) 3 9 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 618)) nil (25733 1798 596952 203000) 0 nil])
([nil nil ((627 . 638) (#(" (factorial" 0 11 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 627)) nil (25733 1954 540234 694000) 0 nil])
([nil nil ((134 . 136) (131 . 134) (#("s" 0 1 (wrap-prefix #(" " 0 1 (face org-indent)) line-prefix "" fontified t)) . -131) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) 132 (130 . 132) (t 25733 1798 612014 453000)) nil (25733 1985 503948 846000) 0 nil] [nil nil ((#("List Processing." 0 16 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 196) 130 (t 25733 1798 612014 453000)) ((196 . 212)) (25733 1954 539711 658000) 0 nil] [nil nil ((#("List Processing." 0 16 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 196) 186 (t 25733 1798 612014 453000)) ((196 . 212)) (25733 1950 724605 895000) 0 nil])
([nil nil ((135 . 149)) nil (25733 1985 504206 489000) 0 nil])
nil
nil
([nil nil ((#(" st ( satn eaent e )
" 0 20 (wrap-prefix #(" " 0 1 (face org-indent)) line-prefix "" fontified t) 20 21 (wrap-prefix #(" " 0 1 (face org-indent)) line-prefix "" fontified t)) . 130) (undo-tree-id45 . 2) (undo-tree-id46 . -8) (undo-tree-id47 . -21) (undo-tree-id48 . -18) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . 10) (undo-tree-id74 . -16) (undo-tree-id75 . 15) (undo-tree-id76 . -10) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 131) nil (25733 1995 822317 515000) 0 nil] [nil nil ((#("List Processing." 0 16 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 216) 131) ((216 . 232)) (25733 1985 503400 66000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . 130) (undo-tree-id43 . 1) (undo-tree-id44 . -1)) nil (25733 1995 822055 419000) 0 nil])
nil
([nil nil ((526 . 530) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 526 530 nil nil nil t #s(yas--exit 550 nil))) #s(yas--exit 550 nil) 5 nil #s(yas--field 1 526 530 nil nil nil t #s(yas--exit 550 nil)) nil nil)) (#("  " 0 2 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . -546) (undo-tree-id168 . -2) (514 . 558) (#("src" 0 3 (face (:inherit (org-block)) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 514) (undo-tree-id169 . -1) (undo-tree-id170 . -3) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3) (undo-tree-id204 . -3) (undo-tree-id205 . -3) (undo-tree-id206 . -3) (undo-tree-id207 . -3) (undo-tree-id208 . -3) 517 (514 . 517) (513 . 514) (t 25733 1995 828798 95000) 498) nil (25733 2752 287691 373000) 0 nil])
([nil nil ((apply yas--snippet-revive 514 560 #s(yas--snippet nil (#s(yas--field 1 526 530 nil nil nil t #s(yas--exit 550 nil))) #s(yas--exit 550 nil) 5 nil #s(yas--field 1 526 530 nil nil nil t #s(yas--exit 550 nil)) nil nil))) nil (25733 2752 286122 111000) 0 nil])
([nil nil ((#("#+END_SRC
" 0 9 (face (:inherit (org-block)) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 9 10 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 551) (undo-tree-id144 . -8) (undo-tree-id145 . -10) (undo-tree-id146 . -9) (undo-tree-id147 . -9) (undo-tree-id148 . -9) (undo-tree-id149 . -9) (undo-tree-id150 . -9) (undo-tree-id151 . -9) (undo-tree-id152 . -9) (undo-tree-id153 . -8) (undo-tree-id154 . -8) (undo-tree-id155 . -8) (undo-tree-id156 . -8) (undo-tree-id157 . -8) (undo-tree-id158 . -8) (undo-tree-id159 . -8) (undo-tree-id160 . -8) (undo-tree-id161 . -8) (undo-tree-id162 . -8) (undo-tree-id163 . -8) (undo-tree-id164 . -8) (undo-tree-id165 . -8) (undo-tree-id166 . -8) (undo-tree-id167 . -8) 559) nil (25733 2752 286120 318000) 0 nil])
([nil nil ((nil rear-nonsticky nil 692 . 693) (#("
" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil face (:inherit (org-block)) font-lock-multiline t font-lock-fontified t)) . -702) (692 . 703)) nil (25733 2752 286104 287000) 0 nil])
([nil nil ((#("
" 0 1 (face (:inherit (org-block)) font-lock-multiline t font-lock-fontified t rear-nonsticky t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 692) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1)) nil (25733 2752 286102 251000) 0 nil])
([nil nil ((#("  " 0 2 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . -598)) nil (25733 2752 417946 321000) 0 nil])
([nil nil ((#("
" 0 1 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 575) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1)) nil (25733 2768 242743 875000) 0 nil] [nil nil ((#("      " 0 6 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . -611) (undo-tree-id123 . 6) (undo-tree-id124 . -6) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6)) ((611 . 617)) (25733 2752 288138 124000) 0 nil])
([nil nil ((#("
" 0 1 (face (:inherit (org-block)) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 550) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1)) nil (25733 2768 242736 946000) 0 nil])
([nil nil ((#("      " 0 6 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . -613)) ((613 . 619)) (25733 2752 285546 437000) 0 nil])
([nil nil ((576 . 577) (#("D" 0 1 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 576)) nil (25733 2768 242709 946000) 0 nil])
nil
([nil nil ((597 . 598) (#("I" 0 1 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 597)) nil (25733 2891 461702 333000) 0 nil])
([nil nil ((7191 . 7195) (7190 . 7191) (7189 . 7190) (t 25733 2768 250595 724000) 7163) nil (25733 14666 199104 985000) 0 nil] [nil nil ((130 . 131) (t 25733 2768 250595 724000)) ((#("" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . 130) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1)) (25733 2891 459556 759000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7220 . 7221) (nil fontified nil 7195 . 7221) (7195 . 7221) 7194) nil (25733 14666 199096 480000) 0 nil])
nil
([nil nil ((7222 . 7223) (7221 . 7222) 7220) nil (25733 14666 199090 688000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)))) . -7254) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . -7255) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) 7256 (7252 . 7256) (#("    " 0 4 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 7251) (undo-tree-id1005 . -4) (undo-tree-id1006 . -4) (undo-tree-id1007 . -4) (undo-tree-id1008 . -4) (undo-tree-id1009 . -4) (undo-tree-id1010 . -4) (undo-tree-id1011 . -4) (undo-tree-id1012 . -4) (undo-tree-id1013 . -4) (7250 . 7256) (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . -7250) (undo-tree-id1014 . -1) (undo-tree-id1015 . 1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . -7251) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -7252) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)))) . -7253) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . -7254) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) 7255 (7250 . 7255) (7247 . 7250) (7244 . 7247) (7230 . 7244) (#("  - 
  - Local" 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent))) 2 4 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent))) 4 5 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent))) 5 14 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 7230) (undo-tree-id1130 . -14) (undo-tree-id1131 . -14) (undo-tree-id1132 . -10) (undo-tree-id1133 . -11) (undo-tree-id1134 . -11) (undo-tree-id1135 . -11) (undo-tree-id1136 . -11) (undo-tree-id1137 . -11) (undo-tree-id1138 . -11) (undo-tree-id1139 . -11) (undo-tree-id1140 . -11) (undo-tree-id1141 . -11) (undo-tree-id1142 . -11) (undo-tree-id1143 . -11) (undo-tree-id1144 . -11) (undo-tree-id1145 . -11) (undo-tree-id1146 . -11) (undo-tree-id1147 . -11) (undo-tree-id1148 . -11) (undo-tree-id1149 . -11) (undo-tree-id1150 . -11) (undo-tree-id1151 . -11) (undo-tree-id1152 . -11) (undo-tree-id1153 . -11) (undo-tree-id1154 . -11) (undo-tree-id1155 . -11) (undo-tree-id1156 . -11) (undo-tree-id1157 . -11) (undo-tree-id1158 . -11) (undo-tree-id1159 . -11) (undo-tree-id1160 . -11) (undo-tree-id1161 . -11) (undo-tree-id1162 . -11) (undo-tree-id1163 . -11) (undo-tree-id1164 . -11) (undo-tree-id1165 . -11) (undo-tree-id1166 . -11) (undo-tree-id1167 . -11) (undo-tree-id1168 . -11) (undo-tree-id1169 . -12) (undo-tree-id1170 . -12) (undo-tree-id1171 . -12) (undo-tree-id1172 . -12) (undo-tree-id1173 . -12) (undo-tree-id1174 . -12) (undo-tree-id1175 . -12) (undo-tree-id1176 . -12) (undo-tree-id1177 . -12) (undo-tree-id1178 . -12) (undo-tree-id1179 . -12) (undo-tree-id1180 . -12) (undo-tree-id1181 . -12) (undo-tree-id1182 . -12) (undo-tree-id1183 . -12) (undo-tree-id1184 . -12) (undo-tree-id1185 . -12) (undo-tree-id1186 . -12) (undo-tree-id1187 . -12) (undo-tree-id1188 . -12) (undo-tree-id1189 . -12) (undo-tree-id1190 . -12) (undo-tree-id1191 . -12) (undo-tree-id1192 . -12) (undo-tree-id1193 . -12) (undo-tree-id1194 . -12) (undo-tree-id1195 . -12) (undo-tree-id1196 . -12) (undo-tree-id1197 . 5) (undo-tree-id1198 . -12) (undo-tree-id1199 . -12) (undo-tree-id1200 . -12) (undo-tree-id1201 . -12) (undo-tree-id1202 . -12) (undo-tree-id1203 . -12) (undo-tree-id1204 . -12) (undo-tree-id1205 . -12) (undo-tree-id1206 . -12) (undo-tree-id1207 . -12) (undo-tree-id1208 . -12) (undo-tree-id1209 . -12) (undo-tree-id1210 . -12) (undo-tree-id1211 . -12) (undo-tree-id1212 . -12) (undo-tree-id1213 . -13) (undo-tree-id1214 . -13) (undo-tree-id1215 . -13) (undo-tree-id1216 . -13) (undo-tree-id1217 . -13) (undo-tree-id1218 . -13) (undo-tree-id1219 . -13) (undo-tree-id1220 . -13) (undo-tree-id1221 . -13) (undo-tree-id1222 . -13) (undo-tree-id1223 . -13) (undo-tree-id1224 . -13) (undo-tree-id1225 . -13) (undo-tree-id1226 . -13) (undo-tree-id1227 . -13) (undo-tree-id1228 . -13) (undo-tree-id1229 . -13) (undo-tree-id1230 . -13) (undo-tree-id1231 . -13) (undo-tree-id1232 . -13) (undo-tree-id1233 . -13) (undo-tree-id1234 . -13) (undo-tree-id1235 . -13) (undo-tree-id1236 . -13) (undo-tree-id1237 . -13) (undo-tree-id1238 . -13) (undo-tree-id1239 . -13) (undo-tree-id1240 . -13) (undo-tree-id1241 . -13) (undo-tree-id1242 . -14) (undo-tree-id1243 . -14) (undo-tree-id1244 . -14) (undo-tree-id1245 . -14) (undo-tree-id1246 . -14) (undo-tree-id1247 . -14) (undo-tree-id1248 . -14) (undo-tree-id1249 . -14) (undo-tree-id1250 . -14) (undo-tree-id1251 . -14) (undo-tree-id1252 . -14) (undo-tree-id1253 . -14) (undo-tree-id1254 . -14) (undo-tree-id1255 . -14) (undo-tree-id1256 . -14) (undo-tree-id1257 . -14) (undo-tree-id1258 . -14) (undo-tree-id1259 . -14) (undo-tree-id1260 . -14) (undo-tree-id1261 . -14) (undo-tree-id1262 . -14) (undo-tree-id1263 . -14) (undo-tree-id1264 . -14) (undo-tree-id1265 . -14) (undo-tree-id1266 . -14) (undo-tree-id1267 . -14) (undo-tree-id1268 . -14) (undo-tree-id1269 . -14) (undo-tree-id1270 . -14) (undo-tree-id1271 . -14) (undo-tree-id1272 . -14) (undo-tree-id1273 . -5) (7230 . 7235) 7239 (7237 . 7239) (#("o" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . -7237) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) 7238 (7232 . 7238) (#("=" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -7232) (undo-tree-id1284 . -1) 7233 (7232 . 7233) (7230 . 7232) (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 7229) (undo-tree-id1285 . -1) (7230 . 7231) (7222 . 7230) (#("a" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -7222) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) 7223 (7222 . 7223)) nil (25733 14666 199020 514000) 0 nil])
([nil nil ((#("  
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 7252) (undo-tree-id933 . -1) (undo-tree-id934 . 1) (undo-tree-id935 . 1) (undo-tree-id936 . -2) (undo-tree-id937 . -2) (undo-tree-id938 . -2) (undo-tree-id939 . -2) (undo-tree-id940 . -2) (undo-tree-id941 . -2) (undo-tree-id942 . -2) (undo-tree-id943 . -2) (undo-tree-id944 . -2) (undo-tree-id945 . -2) (undo-tree-id946 . -2) (undo-tree-id947 . -2) (undo-tree-id948 . -2) (undo-tree-id949 . -2) (undo-tree-id950 . -2) (undo-tree-id951 . -2) (undo-tree-id952 . -2) (undo-tree-id953 . -2) (undo-tree-id954 . -2) (undo-tree-id955 . -2) (undo-tree-id956 . -2) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) 7253) nil (25733 14666 197987 298000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . -7256) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) 7257 (7255 . 7257) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . -7255) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) 7256 (7255 . 7256) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . -7255) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) 7256 (7252 . 7256) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -7252) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (#("-" 0 1 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -7253) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (#(" " 0 1 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -7254) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) 7255 (7240 . 7255) (#("  - 
  - Global" 0 2 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 2 4 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent))) 4 5 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent))) 5 7 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 7 12 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 12 15 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 7240) (undo-tree-id741 . -12) (undo-tree-id742 . -11) (undo-tree-id743 . -9) (undo-tree-id744 . -9) (undo-tree-id745 . -9) (undo-tree-id746 . -9) (undo-tree-id747 . -9) (undo-tree-id748 . -9) (undo-tree-id749 . -9) (undo-tree-id750 . -9) (undo-tree-id751 . -9) (undo-tree-id752 . -9) (undo-tree-id753 . -9) (undo-tree-id754 . -9) (undo-tree-id755 . -9) (undo-tree-id756 . -9) (undo-tree-id757 . -9) (undo-tree-id758 . -10) (undo-tree-id759 . -10) (undo-tree-id760 . -10) (undo-tree-id761 . -10) (undo-tree-id762 . -10) (undo-tree-id763 . -10) (undo-tree-id764 . -10) (undo-tree-id765 . -10) (undo-tree-id766 . -10) (undo-tree-id767 . -10) (undo-tree-id768 . -10) (undo-tree-id769 . -10) (undo-tree-id770 . -10) (undo-tree-id771 . -10) (undo-tree-id772 . -10) (undo-tree-id773 . -10) (undo-tree-id774 . -10) (undo-tree-id775 . -10) (undo-tree-id776 . -10) (undo-tree-id777 . -10) (undo-tree-id778 . -10) (undo-tree-id779 . -10) (undo-tree-id780 . -10) (undo-tree-id781 . -10) (undo-tree-id782 . -10) (undo-tree-id783 . -10) (undo-tree-id784 . -10) (undo-tree-id785 . -10) (undo-tree-id786 . -10) (undo-tree-id787 . -11) (undo-tree-id788 . -11) (undo-tree-id789 . -11) (undo-tree-id790 . -11) (undo-tree-id791 . -11) (undo-tree-id792 . -11) (undo-tree-id793 . -11) (undo-tree-id794 . -11) (undo-tree-id795 . -11) (undo-tree-id796 . -11) (undo-tree-id797 . -11) (undo-tree-id798 . -11) (undo-tree-id799 . -11) (undo-tree-id800 . -12) (undo-tree-id801 . -12) (undo-tree-id802 . -12) (undo-tree-id803 . -12) (undo-tree-id804 . -12) (undo-tree-id805 . -12) (undo-tree-id806 . -12) (undo-tree-id807 . -12) (undo-tree-id808 . -12) (undo-tree-id809 . -12) (undo-tree-id810 . -12) (undo-tree-id811 . -12) (undo-tree-id812 . -12) (undo-tree-id813 . -15) (undo-tree-id814 . -15) (undo-tree-id815 . -15) (undo-tree-id816 . -15) (undo-tree-id817 . -15) (undo-tree-id818 . -15) (undo-tree-id819 . -15) (undo-tree-id820 . -15) (undo-tree-id821 . -15) (undo-tree-id822 . -15) (undo-tree-id823 . -15) (undo-tree-id824 . -15) (undo-tree-id825 . -15) (undo-tree-id826 . -15) (undo-tree-id827 . -15) (undo-tree-id828 . -15) (undo-tree-id829 . -15) (undo-tree-id830 . -15) (undo-tree-id831 . -15) (undo-tree-id832 . -15) (undo-tree-id833 . -15) (undo-tree-id834 . -15) (undo-tree-id835 . -15) (undo-tree-id836 . -15) (undo-tree-id837 . -15) (undo-tree-id838 . -15) (undo-tree-id839 . -15) (undo-tree-id840 . -15) (undo-tree-id841 . -15) (undo-tree-id842 . -15) (undo-tree-id843 . -15) (undo-tree-id844 . -15) (undo-tree-id845 . -15) (undo-tree-id846 . -15) (undo-tree-id847 . -15) (undo-tree-id848 . -15) (undo-tree-id849 . -15) (undo-tree-id850 . -15) (undo-tree-id851 . -15) (undo-tree-id852 . -15) (undo-tree-id853 . -15) (undo-tree-id854 . -15) (undo-tree-id855 . -15) (undo-tree-id856 . -15) (undo-tree-id857 . -15) (undo-tree-id858 . -15) (undo-tree-id859 . -15) (undo-tree-id860 . -15) (undo-tree-id861 . -15) (undo-tree-id862 . -15) (undo-tree-id863 . -15) (undo-tree-id864 . -15) (undo-tree-id865 . -15) (undo-tree-id866 . -15) (undo-tree-id867 . -15) (undo-tree-id868 . -15) (undo-tree-id869 . -15) (undo-tree-id870 . -5) (7240 . 7245) 7251 (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -7251) (undo-tree-id871 . -1) (undo-tree-id872 . 1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) 7252) nil (25733 14666 197831 170000) 0 nil])
([nil nil ((7252 . 7253) (7222 . 7258) (#("- 
- Scope
  - Local
  - Global
 ***" 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 2 3 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 3 11 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 11 20 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 20 21 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 21 23 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent))) 23 28 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent))) 28 31 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 31 32 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 32 33 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent))) 33 34 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t org-emphasis t) 34 35 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) face (bold) font-lock-multiline t org-emphasis t) 35 36 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t org-emphasis t)) . 7222) (undo-tree-id138 . -36) (undo-tree-id139 . -36) (undo-tree-id140 . -11) (undo-tree-id141 . -11) (undo-tree-id142 . -11) (undo-tree-id143 . -11) (undo-tree-id144 . -21) (undo-tree-id145 . -11) (undo-tree-id146 . -11) (undo-tree-id147 . -11) (undo-tree-id148 . -11) (undo-tree-id149 . -11) (undo-tree-id150 . -11) (undo-tree-id151 . -11) (undo-tree-id152 . -11) (undo-tree-id153 . -11) (undo-tree-id154 . -11) (undo-tree-id155 . -11) (undo-tree-id156 . -11) (undo-tree-id157 . -11) (undo-tree-id158 . -11) (undo-tree-id159 . -11) (undo-tree-id160 . -11) (undo-tree-id161 . -11) (undo-tree-id162 . -11) (undo-tree-id163 . -11) (undo-tree-id164 . -11) (undo-tree-id165 . -11) (undo-tree-id166 . -11) (undo-tree-id167 . -11) (undo-tree-id168 . -11) (undo-tree-id169 . -11) (undo-tree-id170 . -11) (undo-tree-id171 . -11) (undo-tree-id172 . -11) (undo-tree-id173 . -11) (undo-tree-id174 . -11) (undo-tree-id175 . -11) (undo-tree-id176 . -11) (undo-tree-id177 . -11) (undo-tree-id178 . -11) (undo-tree-id179 . -11) (undo-tree-id180 . -11) (undo-tree-id181 . -11) (undo-tree-id182 . -11) (undo-tree-id183 . -11) (undo-tree-id184 . -11) (undo-tree-id185 . -11) (undo-tree-id186 . -11) (undo-tree-id187 . -11) (undo-tree-id188 . -11) (undo-tree-id189 . -11) (undo-tree-id190 . -11) (undo-tree-id191 . -11) (undo-tree-id192 . -11) (undo-tree-id193 . -11) (undo-tree-id194 . -11) (undo-tree-id195 . -11) (undo-tree-id196 . -11) (undo-tree-id197 . -11) (undo-tree-id198 . -11) (undo-tree-id199 . -11) (undo-tree-id200 . -11) (undo-tree-id201 . -11) (undo-tree-id202 . -11) (undo-tree-id203 . -11) (undo-tree-id204 . -11) (undo-tree-id205 . -11) (undo-tree-id206 . -11) (undo-tree-id207 . -11) (undo-tree-id208 . -11) (undo-tree-id209 . -11) (undo-tree-id210 . -11) (undo-tree-id211 . -11) (undo-tree-id212 . -11) (undo-tree-id213 . -11) (undo-tree-id214 . -11) (undo-tree-id215 . -11) (undo-tree-id216 . -11) (undo-tree-id217 . -11) (undo-tree-id218 . -11) (undo-tree-id219 . -11) (undo-tree-id220 . -11) (undo-tree-id221 . -11) (undo-tree-id222 . -11) (undo-tree-id223 . -11) (undo-tree-id224 . -11) (undo-tree-id225 . -11) (undo-tree-id226 . -11) (undo-tree-id227 . -11) (undo-tree-id228 . -11) (undo-tree-id229 . -11) (undo-tree-id230 . -11) (undo-tree-id231 . -11) (undo-tree-id232 . -11) (undo-tree-id233 . -11) (undo-tree-id234 . -11) (undo-tree-id235 . -11) (undo-tree-id236 . -11) (undo-tree-id237 . -11) (undo-tree-id238 . -11) (undo-tree-id239 . -11) (undo-tree-id240 . -11) (undo-tree-id241 . -11) (undo-tree-id242 . -11) (undo-tree-id243 . -11) (undo-tree-id244 . -11) (undo-tree-id245 . -11) (undo-tree-id246 . -11) (undo-tree-id247 . -11) (undo-tree-id248 . -11) (undo-tree-id249 . -11) (undo-tree-id250 . -11) (undo-tree-id251 . -11) (undo-tree-id252 . -11) (undo-tree-id253 . -11) (undo-tree-id254 . -11) (undo-tree-id255 . -11) (undo-tree-id256 . -11) (undo-tree-id257 . -11) (undo-tree-id258 . -11) (undo-tree-id259 . -11) (undo-tree-id260 . -11) (undo-tree-id261 . -11) (undo-tree-id262 . -11) (undo-tree-id263 . -11) (undo-tree-id264 . -11) (undo-tree-id265 . -11) (undo-tree-id266 . -11) (undo-tree-id267 . -11) (undo-tree-id268 . -11) (undo-tree-id269 . -11) (undo-tree-id270 . -11) (undo-tree-id271 . -11) (undo-tree-id272 . -11) (undo-tree-id273 . -11) (undo-tree-id274 . -11) (undo-tree-id275 . -11) (undo-tree-id276 . -11) (undo-tree-id277 . -11) (undo-tree-id278 . -21) (undo-tree-id279 . -21) (undo-tree-id280 . -21) (undo-tree-id281 . -21) (undo-tree-id282 . -21) (undo-tree-id283 . -21) (undo-tree-id284 . -21) (undo-tree-id285 . -21) (undo-tree-id286 . -21) (undo-tree-id287 . -21) (undo-tree-id288 . -21) (undo-tree-id289 . -21) (undo-tree-id290 . -21) (undo-tree-id291 . -21) (undo-tree-id292 . -21) (undo-tree-id293 . -21) (undo-tree-id294 . -21) (undo-tree-id295 . -21) (undo-tree-id296 . -21) (undo-tree-id297 . -21) (undo-tree-id298 . -21) (undo-tree-id299 . -21) (undo-tree-id300 . -21) (undo-tree-id301 . -21) (undo-tree-id302 . -21) (undo-tree-id303 . -21) (undo-tree-id304 . -21) (undo-tree-id305 . -21) (undo-tree-id306 . -21) (undo-tree-id307 . -21) (undo-tree-id308 . -21) (undo-tree-id309 . -21) (undo-tree-id310 . -21) (undo-tree-id311 . -21) (undo-tree-id312 . -21) (undo-tree-id313 . -21) (undo-tree-id314 . -21) (undo-tree-id315 . -21) (undo-tree-id316 . -21) (undo-tree-id317 . -21) (undo-tree-id318 . -21) (undo-tree-id319 . -21) (undo-tree-id320 . -21) (undo-tree-id321 . -21) (undo-tree-id322 . -21) (undo-tree-id323 . -21) (undo-tree-id324 . -21) (undo-tree-id325 . -21) (undo-tree-id326 . -21) (undo-tree-id327 . -21) (undo-tree-id328 . -21) (undo-tree-id329 . -21) (undo-tree-id330 . -21) (undo-tree-id331 . -21) (undo-tree-id332 . -21) (undo-tree-id333 . -21) (undo-tree-id334 . -21) (undo-tree-id335 . -21) (undo-tree-id336 . -21) (undo-tree-id337 . -21) (undo-tree-id338 . -21) (undo-tree-id339 . -21) (undo-tree-id340 . -21) (undo-tree-id341 . -21) (undo-tree-id342 . -21) (undo-tree-id343 . -21) (undo-tree-id344 . -21) (undo-tree-id345 . -21) (undo-tree-id346 . -21) (undo-tree-id347 . -21) (undo-tree-id348 . -21) (undo-tree-id349 . -21) (undo-tree-id350 . -21) (undo-tree-id351 . -21) (undo-tree-id352 . -21) (undo-tree-id353 . -21) (undo-tree-id354 . -21) (undo-tree-id355 . -21) (undo-tree-id356 . -21) (undo-tree-id357 . -21) (undo-tree-id358 . -21) (undo-tree-id359 . -21) (undo-tree-id360 . -21) (undo-tree-id361 . -21) (undo-tree-id362 . -21) (undo-tree-id363 . -21) (undo-tree-id364 . -21) (undo-tree-id365 . -21) (undo-tree-id366 . -21) (undo-tree-id367 . -21) (undo-tree-id368 . -21) (undo-tree-id369 . -21) (undo-tree-id370 . -21) (undo-tree-id371 . -21) (undo-tree-id372 . -21) (undo-tree-id373 . -21) (undo-tree-id374 . -21) (undo-tree-id375 . -21) (undo-tree-id376 . -21) (undo-tree-id377 . -21) (undo-tree-id378 . -21) (undo-tree-id379 . -21) (undo-tree-id380 . -21) (undo-tree-id381 . -21) (undo-tree-id382 . -21) (undo-tree-id383 . -21) (undo-tree-id384 . -21) (undo-tree-id385 . -21) (undo-tree-id386 . -21) (undo-tree-id387 . -21) (undo-tree-id388 . -21) (undo-tree-id389 . -21) (undo-tree-id390 . -21) (undo-tree-id391 . -21) (undo-tree-id392 . -21) (undo-tree-id393 . -21) (undo-tree-id394 . -21) (undo-tree-id395 . -21) (undo-tree-id396 . -21) (undo-tree-id397 . -21) (undo-tree-id398 . -21) (undo-tree-id399 . -21) (undo-tree-id400 . -21) (undo-tree-id401 . -21) (undo-tree-id402 . -21) (undo-tree-id403 . -21) (undo-tree-id404 . -21) (undo-tree-id405 . -33) (undo-tree-id406 . -33) (undo-tree-id407 . -33) (undo-tree-id408 . -33) (undo-tree-id409 . -33) (undo-tree-id410 . -33) (undo-tree-id411 . -33) (undo-tree-id412 . -33) (undo-tree-id413 . -33) (undo-tree-id414 . -33) (undo-tree-id415 . -33) (undo-tree-id416 . -33) (undo-tree-id417 . -33) (undo-tree-id418 . -33) (undo-tree-id419 . -33) (undo-tree-id420 . -33) (undo-tree-id421 . -33) (undo-tree-id422 . -33) (undo-tree-id423 . -33) (undo-tree-id424 . -33) (undo-tree-id425 . -33) (undo-tree-id426 . -33) (undo-tree-id427 . -33) (undo-tree-id428 . -33) (undo-tree-id429 . -33) (undo-tree-id430 . -33) (undo-tree-id431 . -33) (undo-tree-id432 . -33) (undo-tree-id433 . -33) (undo-tree-id434 . -33) (undo-tree-id435 . -33) (undo-tree-id436 . -33) (undo-tree-id437 . -33) (undo-tree-id438 . -33) (undo-tree-id439 . -33) (undo-tree-id440 . -34) (undo-tree-id441 . -34) (undo-tree-id442 . -34) (undo-tree-id443 . -34) (undo-tree-id444 . -34) (undo-tree-id445 . -34) (undo-tree-id446 . -34) (undo-tree-id447 . -35) (undo-tree-id448 . -35) (undo-tree-id449 . -35) (undo-tree-id450 . -35) (undo-tree-id451 . -35) (undo-tree-id452 . -35) (undo-tree-id453 . -35) (undo-tree-id454 . -32) (undo-tree-id455 . -33) (undo-tree-id456 . -36) (undo-tree-id457 . -36) (undo-tree-id458 . -36) (undo-tree-id459 . -36) (undo-tree-id460 . -36) (undo-tree-id461 . -36) (undo-tree-id462 . -36) (undo-tree-id463 . -32) (undo-tree-id464 . -33) (undo-tree-id465 . -36) (undo-tree-id466 . -36) (undo-tree-id467 . -36) (undo-tree-id468 . -36) (undo-tree-id469 . -36) (undo-tree-id470 . -36) (undo-tree-id471 . -36) (undo-tree-id472 . -32) (undo-tree-id473 . -33) (undo-tree-id474 . -36) (undo-tree-id475 . -36) (undo-tree-id476 . -36) (undo-tree-id477 . -36) (undo-tree-id478 . -36) (undo-tree-id479 . -36) (undo-tree-id480 . -36) (undo-tree-id481 . -32) (undo-tree-id482 . -33) (undo-tree-id483 . -36) (undo-tree-id484 . -36) (undo-tree-id485 . -36) (undo-tree-id486 . -36) (undo-tree-id487 . -36) (undo-tree-id488 . -36) (undo-tree-id489 . -36) (undo-tree-id490 . -32) (undo-tree-id491 . -33) (undo-tree-id492 . -36) (undo-tree-id493 . -36) (undo-tree-id494 . -36) (undo-tree-id495 . -36) (undo-tree-id496 . -36) (undo-tree-id497 . -36) (undo-tree-id498 . -36) (undo-tree-id499 . -32) (undo-tree-id500 . -33) (undo-tree-id501 . -36) (undo-tree-id502 . -36) (undo-tree-id503 . -36) (undo-tree-id504 . -36) (undo-tree-id505 . -36) (undo-tree-id506 . -36) (undo-tree-id507 . -36) (undo-tree-id508 . -36) (undo-tree-id509 . -36) (undo-tree-id510 . -36) (undo-tree-id511 . -36) (undo-tree-id512 . -36) (undo-tree-id513 . -36) (undo-tree-id514 . -36) (undo-tree-id515 . -36) (undo-tree-id516 . -36) (undo-tree-id517 . -36) (undo-tree-id518 . -36) (undo-tree-id519 . -36) (undo-tree-id520 . -36) (undo-tree-id521 . -36) (undo-tree-id522 . -36) (undo-tree-id523 . -36) (undo-tree-id524 . -36) (undo-tree-id525 . -36) (undo-tree-id526 . -36) (undo-tree-id527 . -36) (undo-tree-id528 . -36) (undo-tree-id529 . -36) (undo-tree-id530 . -36) (undo-tree-id531 . -36) (undo-tree-id532 . -36) (undo-tree-id533 . -36) (undo-tree-id534 . -36) (undo-tree-id535 . -36) (undo-tree-id536 . -36) (undo-tree-id537 . -36) (undo-tree-id538 . -36) (undo-tree-id539 . -36) (undo-tree-id540 . -36) (undo-tree-id541 . -36) (undo-tree-id542 . -36) (undo-tree-id543 . -36) (undo-tree-id544 . -36) (undo-tree-id545 . -36) (undo-tree-id546 . -36) (undo-tree-id547 . -36) (undo-tree-id548 . -36) (undo-tree-id549 . -36) (undo-tree-id550 . -36) (undo-tree-id551 . -36) (undo-tree-id552 . -36) (undo-tree-id553 . -36) (undo-tree-id554 . -36) (undo-tree-id555 . -36) (undo-tree-id556 . -36) (undo-tree-id557 . -36) (undo-tree-id558 . -36) (undo-tree-id559 . -36) (undo-tree-id560 . -36) (undo-tree-id561 . -36) (undo-tree-id562 . -36) (undo-tree-id563 . -36) (undo-tree-id564 . -36) (undo-tree-id565 . -36) (undo-tree-id566 . -36) (undo-tree-id567 . -36) (undo-tree-id568 . -36) (undo-tree-id569 . -36) (undo-tree-id570 . -36) (undo-tree-id571 . -36) (undo-tree-id572 . -36) (undo-tree-id573 . -36) (undo-tree-id574 . -36) (undo-tree-id575 . -36) (undo-tree-id576 . -3) (7222 . 7225) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . 7255) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1)) nil (25733 14666 196797 982000) 0 nil])
([nil nil ((#("  ***
" 0 2 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 2 3 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-multiline t org-emphasis t invisible t) 3 4 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t) 4 5 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-multiline t org-emphasis t invisible t) 5 6 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 7251) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) 7252) nil (25733 14666 186135 154000) 0 nil])
([nil nil ((#("- 
" 0 1 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 7251) (undo-tree-id9 . -1) (undo-tree-id10 . 1) (undo-tree-id11 . 1) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -3) (undo-tree-id16 . -3) (undo-tree-id17 . -3) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -3) (undo-tree-id22 . -3) (undo-tree-id23 . -3) (undo-tree-id24 . -3) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) 7252) nil (25733 14666 186077 895000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -7255) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 7256 (7251 . 7256)) nil (25733 14666 180447 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7323 . 7324) (nil fontified nil 7298 . 7324) (nil fontified nil 7232 . 7298) (7232 . 7324) 7231 (t 25733 14666 225112 682000)) nil (25733 14750 746457 757000) 0 nil])
([nil nil ((7229 . 7230) (#("  " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 1 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 7229) (undo-tree-id1546 . -2) (undo-tree-id1547 . -2) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -2) (undo-tree-id1551 . -1) (#("
" 0 1 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -7229) (undo-tree-id1552 . -1) 7228) nil (25733 14750 746452 339000) 0 nil])
([nil nil ((7229 . 7230)) nil (25733 14750 746441 636000) 0 nil])
([nil nil ((#("Since " 0 6 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t)) . 7231) (undo-tree-id1526 . -5) (undo-tree-id1527 . -5) (undo-tree-id1528 . -5) (undo-tree-id1529 . -6) (undo-tree-id1530 . -5) (undo-tree-id1531 . -4) (undo-tree-id1532 . -4) (undo-tree-id1533 . -4) (undo-tree-id1534 . -4) (undo-tree-id1535 . -4) (undo-tree-id1536 . -4) (undo-tree-id1537 . -4) (undo-tree-id1538 . -5) (undo-tree-id1539 . -5) (undo-tree-id1540 . -5) (undo-tree-id1541 . -5) (undo-tree-id1542 . -5) (undo-tree-id1543 . -5) (undo-tree-id1544 . -5) (undo-tree-id1545 . -5) 7236) nil (25733 14750 746439 278000) 0 nil])
([nil nil ((7231 . 7232) (#("t" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t)) . 7231)) nil (25733 14750 746415 263000) 0 nil])
([nil nil ((#(", they" 0 6 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t)) . 7284)) nil (25733 14750 746413 758000) 0 nil])
([nil nil ((#("are called local variables- Local
" 0 25 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 25 26 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t) 26 33 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 33 34 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 7285) (undo-tree-id1499 . -25) (undo-tree-id1500 . -25) (undo-tree-id1501 . -26) (undo-tree-id1502 . -25) (undo-tree-id1503 . -25) (undo-tree-id1504 . -25) (undo-tree-id1505 . -25) (undo-tree-id1506 . -25) (undo-tree-id1507 . -25) (undo-tree-id1508 . -25) (undo-tree-id1509 . -25) (undo-tree-id1510 . -25) (undo-tree-id1511 . -25) (undo-tree-id1512 . -25) (undo-tree-id1513 . -25) (undo-tree-id1514 . -25) (undo-tree-id1515 . -25) (undo-tree-id1516 . -25) (undo-tree-id1517 . -25) (undo-tree-id1518 . -25) (undo-tree-id1519 . -25) (undo-tree-id1520 . -25) (undo-tree-id1521 . -25) (undo-tree-id1522 . -25) (undo-tree-id1523 . -25) (undo-tree-id1524 . -25) (undo-tree-id1525 . -25)) nil (25733 14750 746411 308000) 0 nil])
([nil nil ((7239 . 7243) (#("c" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . -7239) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) 7240 (7235 . 7240) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . -7235) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) 7236 (7233 . 7236) (7231 . 7286) (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 7230) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (7231 . 7232) (#("Their scope is restricted to the body of the function" 0 53 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t)) . 7231) (undo-tree-id1453 . 52) (undo-tree-id1454 . 53) (undo-tree-id1455 . -17) (undo-tree-id1456 . -6) (undo-tree-id1457 . -6) (undo-tree-id1458 . -6) (undo-tree-id1459 . -6) (undo-tree-id1460 . -6) (undo-tree-id1461 . -6) (undo-tree-id1462 . -6) (undo-tree-id1463 . -12) (undo-tree-id1464 . -12) (undo-tree-id1465 . -12) (undo-tree-id1466 . -12) (undo-tree-id1467 . -12) (undo-tree-id1468 . -12) (undo-tree-id1469 . -12) (undo-tree-id1470 . -15) (undo-tree-id1471 . -15) (undo-tree-id1472 . -15) (undo-tree-id1473 . -15) (undo-tree-id1474 . -15) (undo-tree-id1475 . -15) (undo-tree-id1476 . -15) (undo-tree-id1477 . -26) (undo-tree-id1478 . -26) (undo-tree-id1479 . -26) (undo-tree-id1480 . -26) (undo-tree-id1481 . -26) (undo-tree-id1482 . -26) (undo-tree-id1483 . -26) (undo-tree-id1484 . -53) (undo-tree-id1485 . -53) (undo-tree-id1486 . -53) (undo-tree-id1487 . -53) (undo-tree-id1488 . -53) (undo-tree-id1489 . -53) (undo-tree-id1490 . -53) (undo-tree-id1491 . -53) (undo-tree-id1492 . -52) (undo-tree-id1493 . -52) (undo-tree-id1494 . -52) (undo-tree-id1495 . -52) (undo-tree-id1496 . -52) (undo-tree-id1497 . -52) (undo-tree-id1498 . -52)) nil (25733 14750 746306 419000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 7237) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1)) nil (25733 14750 740569 533000) 0 nil])
([nil nil ((7306 . 7308)) nil (25733 14750 740506 351000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7346 . 7347) (nil fontified nil 7313 . 7347) (7313 . 7347) 7312 (t 25733 14750 768073 636000)) nil (25733 14806 408485 760000) 0 nil])
([nil nil ((7347 . 7352)) nil (25733 14806 408454 120000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7363 . 7364) (nil fontified nil 7352 . 7364) (7352 . 7364) 7351 (t 25733 14806 435578 626000)) nil (25733 14828 657505 81000) 0 nil])
([nil nil ((7364 . 7365)) nil (25733 14837 134750 537000) 0 nil] [nil nil ((7363 . 7369) (#("S" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3)) . 7363) (undo-tree-id1553 . -1)) ((7363 . 7364) (#("
*** S" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 1 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 4 5 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 5 6 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3)) . 7363) (undo-tree-id1554 . -5) (undo-tree-id1555 . -5) (undo-tree-id1556 . -5)) (25733 14828 656654 36000) 0 nil])
([nil nil ((7364 . 7369) (#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . 7364) (7365 . 7365) 7364) nil (25733 14837 134716 673000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 7392 . 7393) (nil fontified nil 7369 . 7393) (7369 . 7393) 7368 (t 25733 14837 203362 625000)) nil (25733 14851 840731 555000) 0 nil])
([nil nil ((7393 . 7398)) nil (25733 14851 840699 65000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7422 . 7423) (nil fontified nil 7398 . 7423) (7398 . 7423) 7397 (t 25733 14851 875273 136000)) nil (25733 14871 226397 152000) 0 nil])
([nil nil ((7423 . 7428)) nil (25733 14871 226369 150000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7454 . 7455) (nil fontified nil 7428 . 7455) (7428 . 7455) 7427 (t 25733 14871 259167 734000)) nil (25733 14889 730762 680000) 0 nil])
([nil nil ((7455 . 7460)) nil (25733 14889 730753 9000) 0 nil])
([nil nil ((7349 . 7393) (#("src" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 7349) (undo-tree-id1569 . -1) (undo-tree-id1570 . -3) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -2) (undo-tree-id1594 . -2) (undo-tree-id1595 . -2) (undo-tree-id1596 . -2) (undo-tree-id1597 . -2) (undo-tree-id1598 . -2) (undo-tree-id1599 . -2) (undo-tree-id1600 . -2) (undo-tree-id1601 . -3) (undo-tree-id1602 . -3) (undo-tree-id1603 . -3) (undo-tree-id1604 . -3) (undo-tree-id1605 . -3) (undo-tree-id1606 . -3) (undo-tree-id1607 . -3) (undo-tree-id1608 . -3) 7352 (7349 . 7352) (#("r" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -7349) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) 7350 (7349 . 7350) (7348 . 7349) (7347 . 7348) (t 25733 14889 759080 295000) 7346) nil (25733 14958 301551 711000) 0 nil])
([nil nil ((7360 . 7365)) nil (25733 14958 301165 652000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -7386) (undo-tree-id1557 . -2) (undo-tree-id1558 . -2) (undo-tree-id1559 . -2) (undo-tree-id1560 . -2) (undo-tree-id1561 . -2) (undo-tree-id1562 . -2) (undo-tree-id1563 . -2) (undo-tree-id1564 . -2) (undo-tree-id1565 . -2) (undo-tree-id1566 . -2) (undo-tree-id1567 . -2) 7388 (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 7389) (undo-tree-id1568 . -2) 7386 (7385 . 7388) 7364) nil (25733 14958 301150 234000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7411 . 7412) (nil fontified nil 7386 . 7412) (7386 . 7412)) nil (25733 14958 301001 972000) 0 nil])
([nil nil ((7399 . 7400) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 7399)) nil (25733 14958 300954 335000) 0 nil])
([nil nil ((7386 . 7388) (7412 . 7413) (t 25733 14958 390860 708000) 7411) nil (25733 15197 891233 439000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7429 . 7430) (nil fontified nil 7415 . 7430) (7415 . 7430)) nil (25733 15197 891228 912000) 0 nil])
([nil nil ((7388 . 7390) (7415 . 7417) 7386) nil (25733 15197 891224 802000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 7388) 7386) nil (25733 15197 891222 719000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -7433) (undo-tree-id1656 . -2) (undo-tree-id1657 . -2) (undo-tree-id1658 . -2) (undo-tree-id1659 . -2) (undo-tree-id1660 . -2) (undo-tree-id1661 . -2) (undo-tree-id1662 . -2) (undo-tree-id1663 . -2) (undo-tree-id1664 . -2) (undo-tree-id1665 . -2) (undo-tree-id1666 . -2) 7435 (7432 . 7435) 7429) nil (25733 15197 891219 357000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7445 . 7446) (nil fontified nil 7433 . 7446) (7433 . 7446)) nil (25733 15197 891178 637000) 0 nil])
([nil nil ((7388 . 7390) (7415 . 7416) (7417 . 7418) (7433 . 7435) 7386) nil (25733 15197 891175 600000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -7454) (undo-tree-id1645 . -2) (undo-tree-id1646 . -2) (undo-tree-id1647 . -2) (undo-tree-id1648 . -2) (undo-tree-id1649 . -2) (undo-tree-id1650 . -2) (undo-tree-id1651 . -2) (undo-tree-id1652 . -2) (undo-tree-id1653 . -2) (undo-tree-id1654 . -2) (undo-tree-id1655 . -2) 7456 (7453 . 7456) 7453) nil (25733 15197 891169 629000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7494 . 7495) (nil fontified nil 7466 . 7495) (nil fontified nil 7453 . 7466) (7453 . 7495)) nil (25733 15197 891136 374000) 0 nil])
([nil nil ((7390 . 7392) (7417 . 7418) (7421 . 7422) (7437 . 7438) (7439 . 7440) (7453 . 7455) (7466 . 7468) 7386 (7495 . 7498)) nil (25733 15197 891132 152000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7527 . 7528) (nil fontified nil 7508 . 7528) (7508 . 7528) 7507) nil (25733 15197 891121 197000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7388) 7386) nil (25733 15197 891116 916000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7417) 7386) nil (25733 15197 891112 348000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7435) 7386) nil (25733 15197 891104 841000) 0 nil])
([nil nil ((7466 . 7472) 7386) nil (25733 15197 891099 806000) 0 nil])
([nil nil ((7472 . 7473) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7472)) nil (25733 15197 891093 138000) 0 nil])
([nil nil ((7526 . 7528) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 7525) (undo-tree-id1634 . -2) (undo-tree-id1635 . -2) (undo-tree-id1636 . -2) (undo-tree-id1637 . -2) (undo-tree-id1638 . -2) (undo-tree-id1639 . -2) (undo-tree-id1640 . -2) (undo-tree-id1641 . -2) (undo-tree-id1642 . -2) (undo-tree-id1643 . -2) (undo-tree-id1644 . -2) (7527 . 7528) (7524 . 7527) 7510) nil (25733 15197 891071 268000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7564 . 7565) (nil fontified nil 7528 . 7565) (7528 . 7565) 7527 (t 25733 15197 987147 989000)) nil (25733 15232 644306 75000) 0 nil])
([nil nil ((7544 . 7545) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 7544) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1)) nil (25733 15232 644291 877000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7593 . 7594) (nil fontified nil 7566 . 7594) (7566 . 7594) (t 25733 15232 675298 66000)) nil (25733 15309 524487 506000) 0 nil])
([nil nil ((7388 . 7390) (7415 . 7417) (7435 . 7437) (7449 . 7451) (7472 . 7474) (7502 . 7504) (7528 . 7530) (7566 . 7568) 7386) nil (25733 15309 524485 598000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 7540) 7386) nil (25733 15309 524482 617000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7388) 7386) nil (25733 15309 524481 313000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7417) 7386) nil (25733 15309 524479 610000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7435) 7386) nil (25733 15309 524477 877000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7451) 7386) nil (25733 15309 524475 739000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7472) 7386) nil (25733 15309 524474 531000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 7504) (undo-tree-id1707 . -2) (undo-tree-id1708 . -2) (undo-tree-id1709 . -2) (undo-tree-id1710 . -2) 7386) nil (25733 15309 524471 860000) 0 nil])
([nil nil ((7525 . 7527)) nil (25733 15309 524464 684000) 0 nil])
([nil nil ((7598 . 7600) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 7597) (undo-tree-id1681 . -2) (undo-tree-id1682 . -2) (undo-tree-id1683 . -2) (undo-tree-id1684 . -2) (undo-tree-id1685 . -2) (undo-tree-id1686 . -2) (undo-tree-id1687 . -2) (undo-tree-id1688 . -2) (undo-tree-id1689 . -2) (undo-tree-id1690 . -2) (undo-tree-id1691 . -2) (7599 . 7600) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 7525) (undo-tree-id1692 . -2) (undo-tree-id1693 . -2) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) 7386 (7598 . 7601) 7569) nil (25733 15309 524455 724000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7627 . 7628) (nil fontified nil 7600 . 7628) (7600 . 7628) 7599 (t 25733 15309 559708 18000)) nil (25733 15346 787812 677000) 0 nil])
([nil nil ((7630 . 7632) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 7629) (undo-tree-id1711 . -2) (undo-tree-id1712 . -2) (undo-tree-id1713 . -2) (undo-tree-id1714 . -2) (undo-tree-id1715 . -2) (undo-tree-id1716 . -2) (undo-tree-id1717 . -2) (undo-tree-id1718 . -2) (undo-tree-id1719 . -2) (undo-tree-id1720 . -2) (undo-tree-id1721 . -2) (7628 . 7632)) nil (25733 15346 787800 944000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -7630) (undo-tree-id1722 . -2) (undo-tree-id1723 . -2) (undo-tree-id1724 . -2) (undo-tree-id1725 . -2) (undo-tree-id1726 . -2) (undo-tree-id1727 . -2) (undo-tree-id1728 . -2) (undo-tree-id1729 . -2) (undo-tree-id1730 . -2) (undo-tree-id1731 . -2) (undo-tree-id1732 . -2) (undo-tree-id1733 . -2) (undo-tree-id1734 . -2) (undo-tree-id1735 . -2) (undo-tree-id1736 . -2) (undo-tree-id1737 . -2) (undo-tree-id1738 . -2) (undo-tree-id1739 . -2) (undo-tree-id1740 . -2) (undo-tree-id1741 . -2) (undo-tree-id1742 . -2) (undo-tree-id1743 . -2) (undo-tree-id1744 . -2) (undo-tree-id1745 . -2) 7632 (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 7633) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) 7386 (7629 . 7632) (t 25733 15346 863941 776000) 7629) nil (25733 15354 911477 131000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7645 . 7646) (nil fontified nil 7630 . 7646) (7630 . 7646) (t 25733 15354 951995 227000)) nil (25733 15401 48375 747000) 0 nil])
([nil nil ((7668 . 7670) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 7667) (undo-tree-id1773 . -2) (undo-tree-id1774 . -2) (undo-tree-id1775 . -2) (undo-tree-id1776 . -2) (undo-tree-id1777 . -2) (undo-tree-id1778 . -2) (undo-tree-id1779 . -2) (undo-tree-id1780 . -2) (undo-tree-id1781 . -2) (undo-tree-id1782 . -2) (undo-tree-id1783 . -2) (7669 . 7670) (7388 . 7390) (7415 . 7416) (7417 . 7418) (7433 . 7434) (7435 . 7436) (7449 . 7451) (7464 . 7466) (7504 . 7506) (7526 . 7527) (7528 . 7529) (7566 . 7567) (7568 . 7569) (7598 . 7600) (7630 . 7632) 7386 (7646 . 7649)) nil (25733 15401 48371 807000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7682 . 7683) (nil fontified nil 7667 . 7683) (7667 . 7683)) nil (25733 15401 48323 339000) 0 nil])
([nil nil ((7390 . 7392) (7417 . 7418) (7421 . 7422) (7437 . 7438) (7441 . 7442) (7455 . 7457) (7472 . 7474) (7516 . 7518) (7538 . 7539) (7542 . 7543) (7580 . 7581) (7584 . 7585) (7614 . 7616) (7667 . 7669) 7386 (t 25733 15401 80317 861000)) nil (25733 15437 862368 99000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 7552) (undo-tree-id1797 . -2) (undo-tree-id1798 . -2) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 7704) 7386) nil (25733 15437 862358 368000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7592) 7386) nil (25733 15437 862348 93000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7388) 7386) nil (25733 15437 862342 698000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7417) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7437) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7441) (#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7457) (undo-tree-id1795 . -3) (#("    " 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7484) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7518) (undo-tree-id1796 . -2) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7522) (#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7618) 7386) nil (25733 15457 912688 647000) 0 nil])
([nil nil ((7574 . 7578) (#("tail" 0 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7574) (undo-tree-id1823 . -3) (undo-tree-id1824 . -3) (undo-tree-id1825 . -3) (undo-tree-id1826 . -4) (undo-tree-id1827 . -3) (undo-tree-id1828 . -3) (undo-tree-id1829 . -3) (undo-tree-id1830 . -3) (undo-tree-id1831 . -3) (undo-tree-id1832 . -3) (undo-tree-id1833 . -3) (undo-tree-id1834 . -3) (undo-tree-id1835 . -3) 7577 (t 25733 15437 940596 176000)) nil (25733 15682 596390 858000) 0 nil] [nil nil ((#("(setf long-list '(a b c d e f g h i))" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 1 16 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16 17 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17 18 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 18 35 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 35 36 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 36 37 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block))) . 7528) (undo-tree-id1799 . -35) (undo-tree-id1800 . -15) (undo-tree-id1801 . -15) (undo-tree-id1802 . -15) (undo-tree-id1803 . -15) (undo-tree-id1804 . -15) (undo-tree-id1805 . -15) (undo-tree-id1806 . -15) (undo-tree-id1807 . -15) (undo-tree-id1808 . 37) (undo-tree-id1809 . -1) (undo-tree-id1810 . 1) (undo-tree-id1811 . -37) (t 25733 15437 940596 176000)) ((7528 . 7565)) (25733 15457 909723 187000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 7597)) nil (25733 15682 596337 991000) 0 nil])
nil
([nil nil ((#("*** SIDE EFFECTS
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 15 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 15 16 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 16 17 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 7679) (undo-tree-id1812 . -4) (undo-tree-id1813 . -4) (undo-tree-id1814 . -4) (undo-tree-id1815 . -4) (undo-tree-id1816 . -4) (undo-tree-id1817 . -4) (undo-tree-id1818 . -4) (undo-tree-id1819 . -4) (undo-tree-id1820 . -4) (undo-tree-id1821 . -4) (undo-tree-id1822 . -4) 7683) nil (25733 15682 596317 742000) 0 nil])
([nil nil ((7707 . 7708) (t 25733 15682 646819 388000) 7683) nil (25733 15790 44342 698000) 0 nil])
([nil nil ((7708 . 7752) (#("src" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 7708) (undo-tree-id2375 . -1) (undo-tree-id2376 . -3) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -2) (undo-tree-id2407 . -2) (undo-tree-id2408 . -2) (undo-tree-id2409 . -2) (undo-tree-id2410 . -2) (undo-tree-id2411 . -2) (undo-tree-id2412 . -2) (undo-tree-id2413 . -2) (undo-tree-id2414 . -3) (undo-tree-id2415 . -3) (undo-tree-id2416 . -3) (undo-tree-id2417 . -3) (undo-tree-id2418 . -3) (undo-tree-id2419 . -3) (undo-tree-id2420 . -3) (undo-tree-id2421 . -3) 7711 (7708 . 7711)) nil (25733 15790 44337 102000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t src-block t)) . -7743) (undo-tree-id2365 . -2) (undo-tree-id2366 . -2) (undo-tree-id2367 . -2) (undo-tree-id2368 . -2) (undo-tree-id2369 . -2) (undo-tree-id2370 . -2) (undo-tree-id2371 . -2) (undo-tree-id2372 . -2) (undo-tree-id2373 . -2) (undo-tree-id2374 . -2) 7745 (7742 . 7745) 7740) nil (25733 15790 44272 37000) 0 nil])
([nil nil ((7707 . 7708) 7706) nil (25733 15790 44254 473000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8148 . 8149) (nil fontified nil 8113 . 8149) (nil fontified nil 8092 . 8113) (nil fontified nil 8071 . 8092) (nil fontified nil 8026 . 8071) (nil fontified nil 7942 . 8026) (nil fontified nil 7875 . 7942) (nil fontified nil 7800 . 7875) (nil fontified nil 7723 . 7800) (nil fontified nil 7708 . 7723) (7708 . 8149)) nil (25733 15790 44251 627000) 0 nil])
([nil nil ((#("(defun average (x y)
(let ((sum (+ x y)))
(list x y ’average ’is (/ sum 2.0)))
" 0 21 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 21 42 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 42 77 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 77 78 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t) 78 79 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8071) (undo-tree-id2139 . -61) (undo-tree-id2140 . -19) (undo-tree-id2141 . -61) (undo-tree-id2142 . 1) (undo-tree-id2143 . -77) (undo-tree-id2144 . -61) (undo-tree-id2145 . -79) (undo-tree-id2146 . -79) (undo-tree-id2147 . -79) (undo-tree-id2148 . -79) (undo-tree-id2149 . -79) (undo-tree-id2150 . -79) (undo-tree-id2151 . -79) (undo-tree-id2152 . -79) (undo-tree-id2153 . -79) (undo-tree-id2154 . -79) (undo-tree-id2155 . -79) (undo-tree-id2156 . -79) (undo-tree-id2157 . -79) (undo-tree-id2158 . -79) (undo-tree-id2159 . -79) (undo-tree-id2160 . -79) (undo-tree-id2161 . -79) (undo-tree-id2162 . -79) (undo-tree-id2163 . -79) (undo-tree-id2164 . -79) (undo-tree-id2165 . -79) (undo-tree-id2166 . -79) (undo-tree-id2167 . -79) (undo-tree-id2168 . -79) (undo-tree-id2169 . -79) (undo-tree-id2170 . -79) (undo-tree-id2171 . -79) (undo-tree-id2172 . -79) (undo-tree-id2173 . -79) (undo-tree-id2174 . -79) (undo-tree-id2175 . -79) (undo-tree-id2176 . -79) (undo-tree-id2177 . -79) (undo-tree-id2178 . -79) (undo-tree-id2179 . -79) (undo-tree-id2180 . -79) (undo-tree-id2181 . -79) (undo-tree-id2182 . -79) (undo-tree-id2183 . -79) (undo-tree-id2184 . -79) (undo-tree-id2185 . -79) (undo-tree-id2186 . -79) (undo-tree-id2187 . -79) (undo-tree-id2188 . -79) (undo-tree-id2189 . -79) (undo-tree-id2190 . -79) (undo-tree-id2191 . -79) (undo-tree-id2192 . -79) (undo-tree-id2193 . -79) (undo-tree-id2194 . -79) (undo-tree-id2195 . -79) (undo-tree-id2196 . -79) (undo-tree-id2197 . -79) (undo-tree-id2198 . -79) (undo-tree-id2199 . -79) (undo-tree-id2200 . -79) (undo-tree-id2201 . -79) (undo-tree-id2202 . -79) (undo-tree-id2203 . -79) (undo-tree-id2204 . -79) (undo-tree-id2205 . -79) (undo-tree-id2206 . -79) (undo-tree-id2207 . -79) (undo-tree-id2208 . -79) (undo-tree-id2209 . -79) (undo-tree-id2210 . -79) (undo-tree-id2211 . -79) (undo-tree-id2212 . -79) (undo-tree-id2213 . -79) (undo-tree-id2214 . -79) (undo-tree-id2215 . -79) (undo-tree-id2216 . -79) (undo-tree-id2217 . -79) (undo-tree-id2218 . -79) (undo-tree-id2219 . -79) (undo-tree-id2220 . -79) (undo-tree-id2221 . -79) (undo-tree-id2222 . -79) (undo-tree-id2223 . -79) (undo-tree-id2224 . -79) (undo-tree-id2225 . -79) (undo-tree-id2226 . -79) (undo-tree-id2227 . -79) (undo-tree-id2228 . -79) (undo-tree-id2229 . -79) (undo-tree-id2230 . -79) (undo-tree-id2231 . -79) (undo-tree-id2232 . -79) (undo-tree-id2233 . -79) (undo-tree-id2234 . -79) (undo-tree-id2235 . -79) (undo-tree-id2236 . -79) (undo-tree-id2237 . -79) (undo-tree-id2238 . -79) (undo-tree-id2239 . -79) (undo-tree-id2240 . -79) (undo-tree-id2241 . -79) (undo-tree-id2242 . -79) (undo-tree-id2243 . -79) (undo-tree-id2244 . -79) (undo-tree-id2245 . -79) (undo-tree-id2246 . -79) (undo-tree-id2247 . -79) (undo-tree-id2248 . -79) (undo-tree-id2249 . -79) (undo-tree-id2250 . -79) (undo-tree-id2251 . -79) (undo-tree-id2252 . -79) (undo-tree-id2253 . -79) (undo-tree-id2254 . -79) (undo-tree-id2255 . -79) (undo-tree-id2256 . -79) (undo-tree-id2257 . -79) (undo-tree-id2258 . -79) (undo-tree-id2259 . -79) (undo-tree-id2260 . -79) (undo-tree-id2261 . -79) (undo-tree-id2262 . -79) (undo-tree-id2263 . -79) (undo-tree-id2264 . -79) (undo-tree-id2265 . -79) (undo-tree-id2266 . -79) (undo-tree-id2267 . -79) (undo-tree-id2268 . -79) (undo-tree-id2269 . -79) (undo-tree-id2270 . -79) (undo-tree-id2271 . -79) (undo-tree-id2272 . -79) (undo-tree-id2273 . -79) (undo-tree-id2274 . -79) (undo-tree-id2275 . -79) (undo-tree-id2276 . -79) (undo-tree-id2277 . -79) (undo-tree-id2278 . -79) (undo-tree-id2279 . -79) (undo-tree-id2280 . -79) (undo-tree-id2281 . -79) (undo-tree-id2282 . -79) (undo-tree-id2283 . -79) (undo-tree-id2284 . -79) (undo-tree-id2285 . -79) (undo-tree-id2286 . -79) (undo-tree-id2287 . -79) (undo-tree-id2288 . -79) (undo-tree-id2289 . -79) (undo-tree-id2290 . -79) (undo-tree-id2291 . -79) (undo-tree-id2292 . -79) (undo-tree-id2293 . -79) (undo-tree-id2294 . -79) (undo-tree-id2295 . -79) (undo-tree-id2296 . -79) (undo-tree-id2297 . -79) (undo-tree-id2298 . -79) (undo-tree-id2299 . -79) (undo-tree-id2300 . -79) (undo-tree-id2301 . -79) (undo-tree-id2302 . -79) (undo-tree-id2303 . -79) (undo-tree-id2304 . -79) (undo-tree-id2305 . -79) (undo-tree-id2306 . -79) (undo-tree-id2307 . -79) (undo-tree-id2308 . -79) (undo-tree-id2309 . -79) (undo-tree-id2310 . -79) (undo-tree-id2311 . -79) (undo-tree-id2312 . -79) (undo-tree-id2313 . -79) (undo-tree-id2314 . -79) (undo-tree-id2315 . -79) (undo-tree-id2316 . -79) (undo-tree-id2317 . -79) (undo-tree-id2318 . -79) (undo-tree-id2319 . -79) (undo-tree-id2320 . -79) (undo-tree-id2321 . -79) (undo-tree-id2322 . -79) (undo-tree-id2323 . -79) (undo-tree-id2324 . -42) (undo-tree-id2325 . -78) (undo-tree-id2326 . -77) (undo-tree-id2327 . -77) (undo-tree-id2328 . -77) (undo-tree-id2329 . -77) (undo-tree-id2330 . -77) (undo-tree-id2331 . -77) (undo-tree-id2332 . -77) (undo-tree-id2333 . -77) (undo-tree-id2334 . -77) (undo-tree-id2335 . -77) (undo-tree-id2336 . -77) (undo-tree-id2337 . -77) (undo-tree-id2338 . -40) (undo-tree-id2339 . -40) (undo-tree-id2340 . -40) (undo-tree-id2341 . -40) (undo-tree-id2342 . -40) (undo-tree-id2343 . -40) (undo-tree-id2344 . -40) (undo-tree-id2345 . -19) (undo-tree-id2346 . -79) (undo-tree-id2347 . -19) (undo-tree-id2348 . -61) (undo-tree-id2349 . -19) (undo-tree-id2350 . -19) (undo-tree-id2351 . -19) (undo-tree-id2352 . -19) (undo-tree-id2353 . -19) (undo-tree-id2354 . -19) (undo-tree-id2355 . -19) (undo-tree-id2356 . -19) (undo-tree-id2357 . -19) (undo-tree-id2358 . -19) (undo-tree-id2359 . -19) (undo-tree-id2360 . -19) (undo-tree-id2361 . -19) (undo-tree-id2362 . -40) (undo-tree-id2363 . -61) (undo-tree-id2364 . -61) 8132) nil (25733 15790 44223 118000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8105 . 8106) (#("
" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8184) (8105 . 8185) 8104) nil (25733 15790 36690 331000) 0 nil])
([nil nil ((#("Another way to
create a local variable is with the LET special function. For example, since
the average of two numbers is half their sum, we might want to use a local
variable called SUM inside our AVERAGE function. " 0 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 15 92 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 92 167 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 167 216 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . 7708) (undo-tree-id1839 . -215) (undo-tree-id1840 . -215) (undo-tree-id1841 . -215) (undo-tree-id1842 . -167) (undo-tree-id1843 . -92) (undo-tree-id1844 . -15) (undo-tree-id1845 . -216) (undo-tree-id1846 . -215) (undo-tree-id1847 . -6) (undo-tree-id1848 . -6) (undo-tree-id1849 . -6) (undo-tree-id1850 . -6) (undo-tree-id1851 . -6) (undo-tree-id1852 . -6) (undo-tree-id1853 . -6) (undo-tree-id1854 . -10) (undo-tree-id1855 . -10) (undo-tree-id1856 . -10) (undo-tree-id1857 . -10) (undo-tree-id1858 . -10) (undo-tree-id1859 . -10) (undo-tree-id1860 . -10) (undo-tree-id1861 . -13) (undo-tree-id1862 . -13) (undo-tree-id1863 . -13) (undo-tree-id1864 . -13) (undo-tree-id1865 . -13) (undo-tree-id1866 . -13) (undo-tree-id1867 . -13) (undo-tree-id1868 . -20) (undo-tree-id1869 . -20) (undo-tree-id1870 . -20) (undo-tree-id1871 . -20) (undo-tree-id1872 . -20) (undo-tree-id1873 . -20) (undo-tree-id1874 . -20) (undo-tree-id1875 . -22) (undo-tree-id1876 . -22) (undo-tree-id1877 . -22) (undo-tree-id1878 . -22) (undo-tree-id1879 . -22) (undo-tree-id1880 . -22) (undo-tree-id1881 . -22) (undo-tree-id1882 . -28) (undo-tree-id1883 . -28) (undo-tree-id1884 . -28) (undo-tree-id1885 . -28) (undo-tree-id1886 . -28) (undo-tree-id1887 . -28) (undo-tree-id1888 . -28) (undo-tree-id1889 . -37) (undo-tree-id1890 . -37) (undo-tree-id1891 . -37) (undo-tree-id1892 . -37) (undo-tree-id1893 . -37) (undo-tree-id1894 . -37) (undo-tree-id1895 . -37) (undo-tree-id1896 . -40) (undo-tree-id1897 . -45) (undo-tree-id1898 . -49) (undo-tree-id1899 . -49) (undo-tree-id1900 . -49) (undo-tree-id1901 . -49) (undo-tree-id1902 . -49) (undo-tree-id1903 . -49) (undo-tree-id1904 . -49) (undo-tree-id1905 . -53) (undo-tree-id1906 . -53) (undo-tree-id1907 . -53) (undo-tree-id1908 . -53) (undo-tree-id1909 . -53) (undo-tree-id1910 . -53) (undo-tree-id1911 . -53) (undo-tree-id1912 . -61) (undo-tree-id1913 . -61) (undo-tree-id1914 . -61) (undo-tree-id1915 . -61) (undo-tree-id1916 . -61) (undo-tree-id1917 . -61) (undo-tree-id1918 . -61) (undo-tree-id1919 . -70) (undo-tree-id1920 . -70) (undo-tree-id1921 . -70) (undo-tree-id1922 . -70) (undo-tree-id1923 . -70) (undo-tree-id1924 . -70) (undo-tree-id1925 . -70) (undo-tree-id1926 . -71) (undo-tree-id1927 . -71) (undo-tree-id1928 . -71) (undo-tree-id1929 . -71) (undo-tree-id1930 . -71) (undo-tree-id1931 . -71) (undo-tree-id1932 . -71) (undo-tree-id1933 . -75) (undo-tree-id1934 . -83) (undo-tree-id1935 . -83) (undo-tree-id1936 . -83) (undo-tree-id1937 . -83) (undo-tree-id1938 . -83) (undo-tree-id1939 . -83) (undo-tree-id1940 . -83) (undo-tree-id1941 . -84) (undo-tree-id1942 . -84) (undo-tree-id1943 . -84) (undo-tree-id1944 . -84) (undo-tree-id1945 . -84) (undo-tree-id1946 . -84) (undo-tree-id1947 . -84) (undo-tree-id1948 . -90) (undo-tree-id1949 . -90) (undo-tree-id1950 . -90) (undo-tree-id1951 . -90) (undo-tree-id1952 . -90) (undo-tree-id1953 . -90) (undo-tree-id1954 . -90) (undo-tree-id1955 . -94) (undo-tree-id1956 . -94) (undo-tree-id1957 . -94) (undo-tree-id1958 . -94) (undo-tree-id1959 . -94) (undo-tree-id1960 . -94) (undo-tree-id1961 . -94) (undo-tree-id1962 . -102) (undo-tree-id1963 . -102) (undo-tree-id1964 . -102) (undo-tree-id1965 . -102) (undo-tree-id1966 . -102) (undo-tree-id1967 . -102) (undo-tree-id1968 . -102) (undo-tree-id1969 . -105) (undo-tree-id1970 . -105) (undo-tree-id1971 . -105) (undo-tree-id1972 . -105) (undo-tree-id1973 . -105) (undo-tree-id1974 . -105) (undo-tree-id1975 . -105) (undo-tree-id1976 . -109) (undo-tree-id1977 . -109) (undo-tree-id1978 . -109) (undo-tree-id1979 . -109) (undo-tree-id1980 . -109) (undo-tree-id1981 . -109) (undo-tree-id1982 . -109) (undo-tree-id1983 . -117) (undo-tree-id1984 . -117) (undo-tree-id1985 . -117) (undo-tree-id1986 . -117) (undo-tree-id1987 . -117) (undo-tree-id1988 . -117) (undo-tree-id1989 . -117) (undo-tree-id1990 . -120) (undo-tree-id1991 . -120) (undo-tree-id1992 . -120) (undo-tree-id1993 . -120) (undo-tree-id1994 . -120) (undo-tree-id1995 . -120) (undo-tree-id1996 . -120) (undo-tree-id1997 . -125) (undo-tree-id1998 . -131) (undo-tree-id1999 . -131) (undo-tree-id2000 . -131) (undo-tree-id2001 . -131) (undo-tree-id2002 . -131) (undo-tree-id2003 . -131) (undo-tree-id2004 . -131) (undo-tree-id2005 . -135) (undo-tree-id2006 . -135) (undo-tree-id2007 . -135) (undo-tree-id2008 . -135) (undo-tree-id2009 . -135) (undo-tree-id2010 . -135) (undo-tree-id2011 . -135) (undo-tree-id2012 . -136) (undo-tree-id2013 . -136) (undo-tree-id2014 . -136) (undo-tree-id2015 . -136) (undo-tree-id2016 . -136) (undo-tree-id2017 . -136) (undo-tree-id2018 . -136) (undo-tree-id2019 . -139) (undo-tree-id2020 . -139) (undo-tree-id2021 . -139) (undo-tree-id2022 . -139) (undo-tree-id2023 . -139) (undo-tree-id2024 . -139) (undo-tree-id2025 . -139) (undo-tree-id2026 . -145) (undo-tree-id2027 . -145) (undo-tree-id2028 . -145) (undo-tree-id2029 . -145) (undo-tree-id2030 . -145) (undo-tree-id2031 . -145) (undo-tree-id2032 . -145) (undo-tree-id2033 . -150) (undo-tree-id2034 . -150) (undo-tree-id2035 . -150) (undo-tree-id2036 . -150) (undo-tree-id2037 . -150) (undo-tree-id2038 . -150) (undo-tree-id2039 . -150) (undo-tree-id2040 . -153) (undo-tree-id2041 . -153) (undo-tree-id2042 . -153) (undo-tree-id2043 . -153) (undo-tree-id2044 . -153) (undo-tree-id2045 . -153) (undo-tree-id2046 . -153) (undo-tree-id2047 . -157) (undo-tree-id2048 . -157) (undo-tree-id2049 . -157) (undo-tree-id2050 . -157) (undo-tree-id2051 . -157) (undo-tree-id2052 . -157) (undo-tree-id2053 . -157) (undo-tree-id2054 . -159) (undo-tree-id2055 . -159) (undo-tree-id2056 . -159) (undo-tree-id2057 . -159) (undo-tree-id2058 . -159) (undo-tree-id2059 . -159) (undo-tree-id2060 . -159) (undo-tree-id2061 . -165) (undo-tree-id2062 . -165) (undo-tree-id2063 . -165) (undo-tree-id2064 . -165) (undo-tree-id2065 . -165) (undo-tree-id2066 . -165) (undo-tree-id2067 . -165) (undo-tree-id2068 . -174) (undo-tree-id2069 . -174) (undo-tree-id2070 . -174) (undo-tree-id2071 . -174) (undo-tree-id2072 . -174) (undo-tree-id2073 . -174) (undo-tree-id2074 . -174) (undo-tree-id2075 . -181) (undo-tree-id2076 . -181) (undo-tree-id2077 . -181) (undo-tree-id2078 . -181) (undo-tree-id2079 . -181) (undo-tree-id2080 . -181) (undo-tree-id2081 . -181) (undo-tree-id2082 . -185) (undo-tree-id2083 . -185) (undo-tree-id2084 . -185) (undo-tree-id2085 . -185) (undo-tree-id2086 . -185) (undo-tree-id2087 . -185) (undo-tree-id2088 . -185) (undo-tree-id2089 . -192) (undo-tree-id2090 . -192) (undo-tree-id2091 . -192) (undo-tree-id2092 . -192) (undo-tree-id2093 . -192) (undo-tree-id2094 . -192) (undo-tree-id2095 . -192) (undo-tree-id2096 . -196) (undo-tree-id2097 . -196) (undo-tree-id2098 . -196) (undo-tree-id2099 . -196) (undo-tree-id2100 . -196) (undo-tree-id2101 . -196) (undo-tree-id2102 . -196) (undo-tree-id2103 . -204) (undo-tree-id2104 . -204) (undo-tree-id2105 . -204) (undo-tree-id2106 . -204) (undo-tree-id2107 . -204) (undo-tree-id2108 . -204) (undo-tree-id2109 . -204) (undo-tree-id2110 . -213) (undo-tree-id2111 . -213) (undo-tree-id2112 . -213) (undo-tree-id2113 . -213) (undo-tree-id2114 . -213) (undo-tree-id2115 . -213) (undo-tree-id2116 . -213) (undo-tree-id2117 . -214) (undo-tree-id2118 . -214) (undo-tree-id2119 . -214) (undo-tree-id2120 . -214) (undo-tree-id2121 . -214) (undo-tree-id2122 . -214) (undo-tree-id2123 . -214) (undo-tree-id2124 . -216) (undo-tree-id2125 . -216) (undo-tree-id2126 . -216) (undo-tree-id2127 . -216) (undo-tree-id2128 . -216) (undo-tree-id2129 . -216) (undo-tree-id2130 . -216) (undo-tree-id2131 . -215) (undo-tree-id2132 . -215) (undo-tree-id2133 . -215) (undo-tree-id2134 . -215) (undo-tree-id2135 . -215) (undo-tree-id2136 . -215) (undo-tree-id2137 . -215) (undo-tree-id2138 . -215) 7923) nil (25733 15790 36661 987000) 0 nil])
([nil nil ((7725 . 7726) (#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . -7725) (undo-tree-id1838 . -1) 7708) nil (25733 15790 21821 109000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t)) . -7785) (nil fontified nil 7784 . 7785) (nil wrap-prefix #("      " 0 6 (face org-indent)) 7784 . 7785) (7784 . 7785) 7725) nil (25733 15790 21817 172000) 0 nil])
([nil nil ((7809 . 7810) (#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . -7809) (undo-tree-id1836 . -1) (undo-tree-id1837 . 1) 7785) nil (25733 15790 21809 211000) 0 nil])
([nil nil ((7854 . 7855) (t 25733 15790 67955 862000) 7809) nil (25733 15801 582728 136000) 0 nil])
([nil nil ((7867 . 7872)) nil (25733 15801 582722 403000) 0 nil])
([nil nil ((7896 . 7898) (7917 . 7919) (7938 . 7940) 7893) nil (25733 15801 582716 410000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 7893) (undo-tree-id2422 . -2) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (7919 . 7921) 7893) nil (25733 15801 582699 731000) 0 nil])
([nil nil ((7944 . 7948) 7893) nil (25733 15801 582523 990000) 0 nil])
([nil nil ((7958 . 7959) (#("’" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 7958) (t 25733 15801 628082 727000)) nil (25733 15806 437366 18000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8092 . 8093) (nil fontified nil 8055 . 8093) (nil fontified nil 8034 . 8055) (nil fontified nil 8011 . 8034) (nil fontified nil 7985 . 8011) (7985 . 8093) (t 25733 15806 468136 86000)) nil (25733 15872 168628 949000) 0 nil])
([nil nil ((7985 . 7989) (8011 . 8017) (8034 . 8046) (8055 . 8063) 7893) nil (25733 15872 168616 347000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -8124) (undo-tree-id2432 . -4) (undo-tree-id2433 . -4) (undo-tree-id2434 . -2) (undo-tree-id2435 . -4) (undo-tree-id2436 . -4) (undo-tree-id2437 . -4) (undo-tree-id2438 . -4) (undo-tree-id2439 . -4) (undo-tree-id2440 . -4) (undo-tree-id2441 . -4) (undo-tree-id2442 . -4) (undo-tree-id2443 . -4) (undo-tree-id2444 . -4) (undo-tree-id2445 . -4) (undo-tree-id2446 . -4) (undo-tree-id2447 . -4) (undo-tree-id2448 . -4) (undo-tree-id2449 . -4) (undo-tree-id2450 . -4) (undo-tree-id2451 . -4) (undo-tree-id2452 . -4) (undo-tree-id2453 . -4) (undo-tree-id2454 . -4) (undo-tree-id2455 . -4) 8128 (8126 . 8128) 7893 (8123 . 8126) (t 25733 15872 204874 246000) 8094) nil (25733 15885 386807 852000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -7985) (undo-tree-id2529 . -4) (undo-tree-id2530 . -4) (undo-tree-id2531 . -2) (undo-tree-id2532 . -4) (undo-tree-id2533 . -4) (undo-tree-id2534 . -4) (undo-tree-id2535 . -4) (undo-tree-id2536 . -4) (undo-tree-id2537 . -4) (undo-tree-id2538 . -4) (undo-tree-id2539 . -4) (undo-tree-id2540 . -4) (undo-tree-id2541 . -4) (undo-tree-id2542 . -4) (undo-tree-id2543 . -4) (undo-tree-id2544 . -4) (undo-tree-id2545 . -4) (undo-tree-id2546 . -4) (undo-tree-id2547 . -4) (undo-tree-id2548 . -4) (undo-tree-id2549 . -4) (undo-tree-id2550 . -4) (undo-tree-id2551 . -4) (undo-tree-id2552 . -4) 7989 (7987 . 7989) 7893 (7984 . 7987) (t 25733 15885 429025 607000) 7942) nil (25733 15909 969502 803000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7986) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1)) nil (25733 15909 969458 642000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7986) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1)) nil (25733 15909 969441 749000) 0 nil])
([nil nil ((7988 . 7990) 7893) nil (25733 15909 969425 976000) 0 nil])
([nil nil ((7984 . 7985)) nil (25733 15909 969423 351000) 0 nil])
([nil nil ((7986 . 7988)) nil (25733 15909 969420 254000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7986) (undo-tree-id2470 . -2) (undo-tree-id2471 . -2) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7989) (undo-tree-id2485 . -1) (undo-tree-id2486 . -2) (undo-tree-id2487 . -2) (undo-tree-id2488 . -2) (undo-tree-id2489 . -2) (undo-tree-id2490 . -2) (undo-tree-id2491 . -2) (undo-tree-id2492 . -2) (undo-tree-id2493 . -2) (undo-tree-id2494 . -2) (undo-tree-id2495 . -2) (undo-tree-id2496 . -2) (undo-tree-id2497 . -2) (undo-tree-id2498 . -2) (undo-tree-id2499 . -2) (undo-tree-id2500 . -2) (undo-tree-id2501 . -2) (undo-tree-id2502 . -2) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) 7893) nil (25733 15909 969409 974000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8019) (undo-tree-id2456 . -2) (undo-tree-id2457 . -2) (undo-tree-id2458 . -2) (undo-tree-id2459 . -2) (undo-tree-id2460 . -2) (undo-tree-id2461 . -2) (undo-tree-id2462 . -2) (undo-tree-id2463 . -2) (undo-tree-id2464 . -2) (undo-tree-id2465 . -2) (undo-tree-id2466 . -2) (undo-tree-id2467 . -2) (undo-tree-id2468 . -2) (undo-tree-id2469 . -2) 7893) nil (25733 15909 969326 780000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8052) 7893) nil (25733 15909 969280 342000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8079) 7893) nil (25733 15909 969267 264000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -8118) (undo-tree-id2553 . -2) (undo-tree-id2554 . -2) (undo-tree-id2555 . -2) (undo-tree-id2556 . -2) (undo-tree-id2557 . -2) (undo-tree-id2558 . -2) (undo-tree-id2559 . -2) (undo-tree-id2560 . -2) (undo-tree-id2561 . -2) (undo-tree-id2562 . -2) (undo-tree-id2563 . -2) (undo-tree-id2564 . -2) (undo-tree-id2565 . -2) (undo-tree-id2566 . -2) (undo-tree-id2567 . -2) (undo-tree-id2568 . -2) (undo-tree-id2569 . -2) (undo-tree-id2570 . -2) (undo-tree-id2571 . -2) (undo-tree-id2572 . -2) (undo-tree-id2573 . -2) (undo-tree-id2574 . -2) (undo-tree-id2575 . -2) (undo-tree-id2576 . -2) 8120 (8117 . 8120) (t 25733 15910 9309 329000) 8081) nil (25733 15914 165450 811000) 0 nil])
([nil nil ((8160 . 8163) (8159 . 8160) (t 25733 15914 197357 971000) 8157) nil (25733 16283 931851 491000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9099 . 9100) (nil fontified nil 9056 . 9100) (nil fontified nil 8983 . 9056) (nil fontified nil 8919 . 8983) (nil fontified nil 8844 . 8919) (nil fontified nil 8766 . 8844) (nil fontified nil 8697 . 8766) (nil fontified nil 8621 . 8697) (nil fontified nil 8548 . 8621) (nil fontified nil 8473 . 8548) (nil fontified nil 8396 . 8473) (nil fontified nil 8317 . 8396) (nil fontified nil 8233 . 8317) (nil fontified nil 8160 . 8233) (8160 . 9100)) nil (25733 16283 931849 30000) 0 nil])
([nil nil ((9101 . 9102) (9100 . 9101) 9099) nil (25733 16283 931838 846000) 0 nil])
([nil nil ((8159 . 8160) 8158) nil (25733 16283 931835 864000) 0 nil])
([nil nil ((#("Therefore, the first local variable
forms part of the lexical context in which the value of the second variable is
computed, and so on. This way of creating local variables is useful when one
wants to assign names to several intermediate steps in a long computation.
For example, suppose we want a function that computes the percent change
in the price of widgets given the old and new prices as input. Our function
must compute the difference between the two prices, then divide this
difference by the old price to get the proportional change in price, and then
multiply that by 100 to get the percent change. We can use local variables
named DIFF, PROPORTION, and PERCENTAGE to hold these values. We
use LET* instead of LET because these variables must be created one at a
time, since each depends on its predecessor.
" 0 36 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 36 115 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 115 192 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 192 267 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 267 340 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 340 379 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 379 416 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 416 485 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 485 563 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 563 638 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 638 702 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 702 775 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 775 818 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 818 819 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t) 819 820 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8282) (undo-tree-id2693 . -819) (undo-tree-id2694 . -819) (undo-tree-id2695 . -818) (undo-tree-id2696 . -819) (undo-tree-id2697 . -775) (undo-tree-id2698 . -819) (undo-tree-id2699 . -818) (undo-tree-id2700 . -818) (undo-tree-id2701 . -818) (undo-tree-id2702 . -818) (undo-tree-id2703 . -818) (undo-tree-id2704 . -818) (undo-tree-id2705 . -818) (undo-tree-id2706 . -820) (undo-tree-id2707 . -820) (undo-tree-id2708 . -820) (undo-tree-id2709 . -820) (undo-tree-id2710 . -820) (undo-tree-id2711 . -820) (undo-tree-id2712 . -820) (undo-tree-id2713 . -820) (undo-tree-id2714 . -820) (undo-tree-id2715 . -819) (undo-tree-id2716 . -8) (undo-tree-id2717 . -8) (undo-tree-id2718 . -8) (undo-tree-id2719 . -8) (undo-tree-id2720 . -8) (undo-tree-id2721 . -8) (undo-tree-id2722 . -8) (undo-tree-id2723 . -9) (undo-tree-id2724 . -9) (undo-tree-id2725 . -9) (undo-tree-id2726 . -9) (undo-tree-id2727 . -9) (undo-tree-id2728 . -9) (undo-tree-id2729 . -9) (undo-tree-id2730 . -13) (undo-tree-id2731 . -13) (undo-tree-id2732 . -13) (undo-tree-id2733 . -13) (undo-tree-id2734 . -13) (undo-tree-id2735 . -13) (undo-tree-id2736 . -13) (undo-tree-id2737 . -19) (undo-tree-id2738 . -19) (undo-tree-id2739 . -19) (undo-tree-id2740 . -19) (undo-tree-id2741 . -19) (undo-tree-id2742 . -19) (undo-tree-id2743 . -19) (undo-tree-id2744 . -25) (undo-tree-id2745 . -25) (undo-tree-id2746 . -25) (undo-tree-id2747 . -25) (undo-tree-id2748 . -25) (undo-tree-id2749 . -25) (undo-tree-id2750 . -25) (undo-tree-id2751 . -34) (undo-tree-id2752 . -34) (undo-tree-id2753 . -34) (undo-tree-id2754 . -34) (undo-tree-id2755 . -34) (undo-tree-id2756 . -34) (undo-tree-id2757 . -34) (undo-tree-id2758 . -40) (undo-tree-id2759 . -40) (undo-tree-id2760 . -40) (undo-tree-id2761 . -40) (undo-tree-id2762 . -40) (undo-tree-id2763 . -40) (undo-tree-id2764 . -40) (undo-tree-id2765 . -45) (undo-tree-id2766 . -45) (undo-tree-id2767 . -45) (undo-tree-id2768 . -45) (undo-tree-id2769 . -45) (undo-tree-id2770 . -45) (undo-tree-id2771 . -45) (undo-tree-id2772 . -48) (undo-tree-id2773 . -48) (undo-tree-id2774 . -48) (undo-tree-id2775 . -48) (undo-tree-id2776 . -48) (undo-tree-id2777 . -48) (undo-tree-id2778 . -48) (undo-tree-id2779 . -52) (undo-tree-id2780 . -52) (undo-tree-id2781 . -52) (undo-tree-id2782 . -52) (undo-tree-id2783 . -52) (undo-tree-id2784 . -52) (undo-tree-id2785 . -52) (undo-tree-id2786 . -60) (undo-tree-id2787 . -60) (undo-tree-id2788 . -60) (undo-tree-id2789 . -60) (undo-tree-id2790 . -60) (undo-tree-id2791 . -60) (undo-tree-id2792 . -60) (undo-tree-id2793 . -68) (undo-tree-id2794 . -68) (undo-tree-id2795 . -68) (undo-tree-id2796 . -68) (undo-tree-id2797 . -68) (undo-tree-id2798 . -68) (undo-tree-id2799 . -68) (undo-tree-id2800 . -71) (undo-tree-id2801 . -71) (undo-tree-id2802 . -71) (undo-tree-id2803 . -71) (undo-tree-id2804 . -71) (undo-tree-id2805 . -71) (undo-tree-id2806 . -71) (undo-tree-id2807 . -77) (undo-tree-id2808 . -77) (undo-tree-id2809 . -77) (undo-tree-id2810 . -77) (undo-tree-id2811 . -77) (undo-tree-id2812 . -77) (undo-tree-id2813 . -77) (undo-tree-id2814 . -81) (undo-tree-id2815 . -81) (undo-tree-id2816 . -81) (undo-tree-id2817 . -81) (undo-tree-id2818 . -81) (undo-tree-id2819 . -81) (undo-tree-id2820 . -81) (undo-tree-id2821 . -87) (undo-tree-id2822 . -87) (undo-tree-id2823 . -87) (undo-tree-id2824 . -87) (undo-tree-id2825 . -87) (undo-tree-id2826 . -87) (undo-tree-id2827 . -87) (undo-tree-id2828 . -90) (undo-tree-id2829 . -90) (undo-tree-id2830 . -90) (undo-tree-id2831 . -90) (undo-tree-id2832 . -90) (undo-tree-id2833 . -90) (undo-tree-id2834 . -90) (undo-tree-id2835 . -94) (undo-tree-id2836 . -94) (undo-tree-id2837 . -94) (undo-tree-id2838 . -94) (undo-tree-id2839 . -94) (undo-tree-id2840 . -94) (undo-tree-id2841 . -94) (undo-tree-id2842 . -101) (undo-tree-id2843 . -101) (undo-tree-id2844 . -101) (undo-tree-id2845 . -101) (undo-tree-id2846 . -101) (undo-tree-id2847 . -101) (undo-tree-id2848 . -101) (undo-tree-id2849 . -110) (undo-tree-id2850 . -110) (undo-tree-id2851 . -110) (undo-tree-id2852 . -110) (undo-tree-id2853 . -110) (undo-tree-id2854 . -110) (undo-tree-id2855 . -110) (undo-tree-id2856 . -113) (undo-tree-id2857 . -113) (undo-tree-id2858 . -113) (undo-tree-id2859 . -113) (undo-tree-id2860 . -113) (undo-tree-id2861 . -113) (undo-tree-id2862 . -113) (undo-tree-id2863 . -122) (undo-tree-id2864 . -122) (undo-tree-id2865 . -122) (undo-tree-id2866 . -122) (undo-tree-id2867 . -122) (undo-tree-id2868 . -122) (undo-tree-id2869 . -122) (undo-tree-id2870 . -123) (undo-tree-id2871 . -123) (undo-tree-id2872 . -123) (undo-tree-id2873 . -123) (undo-tree-id2874 . -123) (undo-tree-id2875 . -123) (undo-tree-id2876 . -123) (undo-tree-id2877 . -127) (undo-tree-id2878 . -127) (undo-tree-id2879 . -127) (undo-tree-id2880 . -127) (undo-tree-id2881 . -127) (undo-tree-id2882 . -127) (undo-tree-id2883 . -127) (undo-tree-id2884 . -130) (undo-tree-id2885 . -130) (undo-tree-id2886 . -130) (undo-tree-id2887 . -130) (undo-tree-id2888 . -130) (undo-tree-id2889 . -130) (undo-tree-id2890 . -130) (undo-tree-id2891 . -133) (undo-tree-id2892 . -133) (undo-tree-id2893 . -133) (undo-tree-id2894 . -133) (undo-tree-id2895 . -133) (undo-tree-id2896 . -133) (undo-tree-id2897 . -133) (undo-tree-id2898 . -134) (undo-tree-id2899 . -134) (undo-tree-id2900 . -134) (undo-tree-id2901 . -134) (undo-tree-id2902 . -134) (undo-tree-id2903 . -134) (undo-tree-id2904 . -134) (undo-tree-id2905 . -139) (undo-tree-id2906 . -139) (undo-tree-id2907 . -139) (undo-tree-id2908 . -139) (undo-tree-id2909 . -139) (undo-tree-id2910 . -139) (undo-tree-id2911 . -139) (undo-tree-id2912 . -143) (undo-tree-id2913 . -143) (undo-tree-id2914 . -143) (undo-tree-id2915 . -143) (undo-tree-id2916 . -143) (undo-tree-id2917 . -143) (undo-tree-id2918 . -143) (undo-tree-id2919 . -146) (undo-tree-id2920 . -146) (undo-tree-id2921 . -146) (undo-tree-id2922 . -146) (undo-tree-id2923 . -146) (undo-tree-id2924 . -146) (undo-tree-id2925 . -146) (undo-tree-id2926 . -155) (undo-tree-id2927 . -155) (undo-tree-id2928 . -155) (undo-tree-id2929 . -155) (undo-tree-id2930 . -155) (undo-tree-id2931 . -155) (undo-tree-id2932 . -155) (undo-tree-id2933 . -161) (undo-tree-id2934 . -161) (undo-tree-id2935 . -161) (undo-tree-id2936 . -161) (undo-tree-id2937 . -161) (undo-tree-id2938 . -161) (undo-tree-id2939 . -161) (undo-tree-id2940 . -171) (undo-tree-id2941 . -171) (undo-tree-id2942 . -171) (undo-tree-id2943 . -171) (undo-tree-id2944 . -171) (undo-tree-id2945 . -171) (undo-tree-id2946 . -171) (undo-tree-id2947 . -174) (undo-tree-id2948 . -174) (undo-tree-id2949 . -174) (undo-tree-id2950 . -174) (undo-tree-id2951 . -174) (undo-tree-id2952 . -174) (undo-tree-id2953 . -174) (undo-tree-id2954 . -181) (undo-tree-id2955 . -181) (undo-tree-id2956 . -181) (undo-tree-id2957 . -181) (undo-tree-id2958 . -181) (undo-tree-id2959 . -181) (undo-tree-id2960 . -181) (undo-tree-id2961 . -186) (undo-tree-id2962 . -186) (undo-tree-id2963 . -186) (undo-tree-id2964 . -186) (undo-tree-id2965 . -186) (undo-tree-id2966 . -186) (undo-tree-id2967 . -186) (undo-tree-id2968 . -190) (undo-tree-id2969 . -190) (undo-tree-id2970 . -190) (undo-tree-id2971 . -190) (undo-tree-id2972 . -190) (undo-tree-id2973 . -190) (undo-tree-id2974 . -190) (undo-tree-id2975 . -196) (undo-tree-id2976 . -196) (undo-tree-id2977 . -196) (undo-tree-id2978 . -196) (undo-tree-id2979 . -196) (undo-tree-id2980 . -196) (undo-tree-id2981 . -196) (undo-tree-id2982 . -199) (undo-tree-id2983 . -199) (undo-tree-id2984 . -199) (undo-tree-id2985 . -199) (undo-tree-id2986 . -199) (undo-tree-id2987 . -199) (undo-tree-id2988 . -199) (undo-tree-id2989 . -206) (undo-tree-id2990 . -206) (undo-tree-id2991 . -206) (undo-tree-id2992 . -206) (undo-tree-id2993 . -206) (undo-tree-id2994 . -206) (undo-tree-id2995 . -206) (undo-tree-id2996 . -212) (undo-tree-id2997 . -212) (undo-tree-id2998 . -212) (undo-tree-id2999 . -212) (undo-tree-id3000 . -212) (undo-tree-id3001 . -212) (undo-tree-id3002 . -212) (undo-tree-id3003 . -215) (undo-tree-id3004 . -215) (undo-tree-id3005 . -215) (undo-tree-id3006 . -215) (undo-tree-id3007 . -215) (undo-tree-id3008 . -215) (undo-tree-id3009 . -215) (undo-tree-id3010 . -223) (undo-tree-id3011 . -223) (undo-tree-id3012 . -223) (undo-tree-id3013 . -223) (undo-tree-id3014 . -223) (undo-tree-id3015 . -223) (undo-tree-id3016 . -223) (undo-tree-id3017 . -236) (undo-tree-id3018 . -236) (undo-tree-id3019 . -236) (undo-tree-id3020 . -236) (undo-tree-id3021 . -236) (undo-tree-id3022 . -236) (undo-tree-id3023 . -236) (undo-tree-id3024 . -242) (undo-tree-id3025 . -242) (undo-tree-id3026 . -242) (undo-tree-id3027 . -242) (undo-tree-id3028 . -242) (undo-tree-id3029 . -242) (undo-tree-id3030 . -242) (undo-tree-id3031 . -245) (undo-tree-id3032 . -245) (undo-tree-id3033 . -245) (undo-tree-id3034 . -245) (undo-tree-id3035 . -245) (undo-tree-id3036 . -245) (undo-tree-id3037 . -245) (undo-tree-id3038 . -247) (undo-tree-id3039 . -247) (undo-tree-id3040 . -247) (undo-tree-id3041 . -247) (undo-tree-id3042 . -247) (undo-tree-id3043 . -247) (undo-tree-id3044 . -247) (undo-tree-id3045 . -252) (undo-tree-id3046 . -252) (undo-tree-id3047 . -252) (undo-tree-id3048 . -252) (undo-tree-id3049 . -252) (undo-tree-id3050 . -252) (undo-tree-id3051 . -252) (undo-tree-id3052 . -264) (undo-tree-id3053 . -264) (undo-tree-id3054 . -264) (undo-tree-id3055 . -264) (undo-tree-id3056 . -264) (undo-tree-id3057 . -264) (undo-tree-id3058 . -264) (undo-tree-id3059 . -265) (undo-tree-id3060 . -265) (undo-tree-id3061 . -265) (undo-tree-id3062 . -265) (undo-tree-id3063 . -265) (undo-tree-id3064 . -265) (undo-tree-id3065 . -265) (undo-tree-id3066 . -269) (undo-tree-id3067 . -269) (undo-tree-id3068 . -269) (undo-tree-id3069 . -269) (undo-tree-id3070 . -269) (undo-tree-id3071 . -269) (undo-tree-id3072 . -269) (undo-tree-id3073 . -269) (undo-tree-id3074 . -269) (undo-tree-id3075 . -269) (undo-tree-id3076 . -269) (undo-tree-id3077 . -269) (undo-tree-id3078 . -194) (undo-tree-id3079 . -269) (undo-tree-id3080 . -277) (undo-tree-id3081 . -277) (undo-tree-id3082 . -277) (undo-tree-id3083 . -277) (undo-tree-id3084 . -277) (undo-tree-id3085 . -277) (undo-tree-id3086 . -277) (undo-tree-id3087 . -278) (undo-tree-id3088 . -278) (undo-tree-id3089 . -278) (undo-tree-id3090 . -278) (undo-tree-id3091 . -278) (undo-tree-id3092 . -278) (undo-tree-id3093 . -278) (undo-tree-id3094 . -286) (undo-tree-id3095 . -286) (undo-tree-id3096 . -286) (undo-tree-id3097 . -286) (undo-tree-id3098 . -286) (undo-tree-id3099 . -286) (undo-tree-id3100 . -286) (undo-tree-id3101 . -289) (undo-tree-id3102 . -289) (undo-tree-id3103 . -289) (undo-tree-id3104 . -289) (undo-tree-id3105 . -289) (undo-tree-id3106 . -289) (undo-tree-id3107 . -289) (undo-tree-id3108 . -294) (undo-tree-id3109 . -294) (undo-tree-id3110 . -294) (undo-tree-id3111 . -294) (undo-tree-id3112 . -294) (undo-tree-id3113 . -294) (undo-tree-id3114 . -294) (undo-tree-id3115 . -296) (undo-tree-id3116 . -296) (undo-tree-id3117 . -296) (undo-tree-id3118 . -296) (undo-tree-id3119 . -296) (undo-tree-id3120 . -296) (undo-tree-id3121 . -296) (undo-tree-id3122 . -305) (undo-tree-id3123 . -305) (undo-tree-id3124 . -305) (undo-tree-id3125 . -305) (undo-tree-id3126 . -305) (undo-tree-id3127 . -305) (undo-tree-id3128 . -305) (undo-tree-id3129 . -310) (undo-tree-id3130 . -310) (undo-tree-id3131 . -310) (undo-tree-id3132 . -310) (undo-tree-id3133 . -310) (undo-tree-id3134 . -310) (undo-tree-id3135 . -310) (undo-tree-id3136 . -319) (undo-tree-id3137 . -319) (undo-tree-id3138 . -319) (undo-tree-id3139 . -319) (undo-tree-id3140 . -319) (undo-tree-id3141 . -319) (undo-tree-id3142 . -319) (undo-tree-id3143 . -323) (undo-tree-id3144 . -323) (undo-tree-id3145 . -323) (undo-tree-id3146 . -323) (undo-tree-id3147 . -323) (undo-tree-id3148 . -323) (undo-tree-id3149 . -323) (undo-tree-id3150 . -331) (undo-tree-id3151 . -331) (undo-tree-id3152 . -331) (undo-tree-id3153 . -331) (undo-tree-id3154 . -331) (undo-tree-id3155 . -331) (undo-tree-id3156 . -331) (undo-tree-id3157 . -338) (undo-tree-id3158 . -338) (undo-tree-id3159 . -338) (undo-tree-id3160 . -338) (undo-tree-id3161 . -338) (undo-tree-id3162 . -338) (undo-tree-id3163 . -338) (undo-tree-id3164 . -341) (undo-tree-id3165 . -341) (undo-tree-id3166 . -341) (undo-tree-id3167 . -341) (undo-tree-id3168 . -341) (undo-tree-id3169 . -341) (undo-tree-id3170 . -341) (undo-tree-id3171 . -345) (undo-tree-id3172 . -345) (undo-tree-id3173 . -345) (undo-tree-id3174 . -345) (undo-tree-id3175 . -345) (undo-tree-id3176 . -345) (undo-tree-id3177 . -345) (undo-tree-id3178 . -351) (undo-tree-id3179 . -351) (undo-tree-id3180 . -351) (undo-tree-id3181 . -351) (undo-tree-id3182 . -351) (undo-tree-id3183 . -351) (undo-tree-id3184 . -351) (undo-tree-id3185 . -354) (undo-tree-id3186 . -354) (undo-tree-id3187 . -354) (undo-tree-id3188 . -354) (undo-tree-id3189 . -354) (undo-tree-id3190 . -354) (undo-tree-id3191 . -354) (undo-tree-id3192 . -362) (undo-tree-id3193 . -362) (undo-tree-id3194 . -362) (undo-tree-id3195 . -362) (undo-tree-id3196 . -362) (undo-tree-id3197 . -362) (undo-tree-id3198 . -362) (undo-tree-id3199 . -368) (undo-tree-id3200 . -368) (undo-tree-id3201 . -368) (undo-tree-id3202 . -368) (undo-tree-id3203 . -368) (undo-tree-id3204 . -368) (undo-tree-id3205 . -368) (undo-tree-id3206 . -372) (undo-tree-id3207 . -372) (undo-tree-id3208 . -372) (undo-tree-id3209 . -372) (undo-tree-id3210 . -372) (undo-tree-id3211 . -372) (undo-tree-id3212 . -372) (undo-tree-id3213 . -376) (undo-tree-id3214 . -376) (undo-tree-id3215 . -376) (undo-tree-id3216 . -376) (undo-tree-id3217 . -376) (undo-tree-id3218 . -376) (undo-tree-id3219 . -376) (undo-tree-id3220 . -380) (undo-tree-id3221 . -380) (undo-tree-id3222 . -380) (undo-tree-id3223 . -380) (undo-tree-id3224 . -380) (undo-tree-id3225 . -380) (undo-tree-id3226 . -380) (undo-tree-id3227 . -384) (undo-tree-id3228 . -384) (undo-tree-id3229 . -384) (undo-tree-id3230 . -384) (undo-tree-id3231 . -384) (undo-tree-id3232 . -384) (undo-tree-id3233 . -384) (undo-tree-id3234 . -391) (undo-tree-id3235 . -391) (undo-tree-id3236 . -391) (undo-tree-id3237 . -391) (undo-tree-id3238 . -391) (undo-tree-id3239 . -391) (undo-tree-id3240 . -391) (undo-tree-id3241 . -394) (undo-tree-id3242 . -394) (undo-tree-id3243 . -394) (undo-tree-id3244 . -394) (undo-tree-id3245 . -394) (undo-tree-id3246 . -394) (undo-tree-id3247 . -394) (undo-tree-id3248 . -400) (undo-tree-id3249 . -400) (undo-tree-id3250 . -400) (undo-tree-id3251 . -400) (undo-tree-id3252 . -400) (undo-tree-id3253 . -400) (undo-tree-id3254 . -400) (undo-tree-id3255 . -401) (undo-tree-id3256 . -401) (undo-tree-id3257 . -401) (undo-tree-id3258 . -401) (undo-tree-id3259 . -401) (undo-tree-id3260 . -401) (undo-tree-id3261 . -401) (undo-tree-id3262 . -405) (undo-tree-id3263 . -405) (undo-tree-id3264 . -405) (undo-tree-id3265 . -405) (undo-tree-id3266 . -405) (undo-tree-id3267 . -405) (undo-tree-id3268 . -405) (undo-tree-id3269 . -414) (undo-tree-id3270 . -414) (undo-tree-id3271 . -414) (undo-tree-id3272 . -414) (undo-tree-id3273 . -414) (undo-tree-id3274 . -414) (undo-tree-id3275 . -414) (undo-tree-id3276 . -419) (undo-tree-id3277 . -419) (undo-tree-id3278 . -419) (undo-tree-id3279 . -419) (undo-tree-id3280 . -419) (undo-tree-id3281 . -419) (undo-tree-id3282 . -419) (undo-tree-id3283 . -427) (undo-tree-id3284 . -427) (undo-tree-id3285 . -427) (undo-tree-id3286 . -427) (undo-tree-id3287 . -427) (undo-tree-id3288 . -427) (undo-tree-id3289 . -427) (undo-tree-id3290 . -431) (undo-tree-id3291 . -431) (undo-tree-id3292 . -431) (undo-tree-id3293 . -431) (undo-tree-id3294 . -431) (undo-tree-id3295 . -431) (undo-tree-id3296 . -431) (undo-tree-id3297 . -442) (undo-tree-id3298 . -442) (undo-tree-id3299 . -442) (undo-tree-id3300 . -442) (undo-tree-id3301 . -442) (undo-tree-id3302 . -442) (undo-tree-id3303 . -442) (undo-tree-id3304 . -450) (undo-tree-id3305 . -450) (undo-tree-id3306 . -450) (undo-tree-id3307 . -450) (undo-tree-id3308 . -450) (undo-tree-id3309 . -450) (undo-tree-id3310 . -450) (undo-tree-id3311 . -454) (undo-tree-id3312 . -454) (undo-tree-id3313 . -454) (undo-tree-id3314 . -454) (undo-tree-id3315 . -454) (undo-tree-id3316 . -454) (undo-tree-id3317 . -454) (undo-tree-id3318 . -458) (undo-tree-id3319 . -458) (undo-tree-id3320 . -458) (undo-tree-id3321 . -458) (undo-tree-id3322 . -458) (undo-tree-id3323 . -458) (undo-tree-id3324 . -458) (undo-tree-id3325 . -465) (undo-tree-id3326 . -465) (undo-tree-id3327 . -465) (undo-tree-id3328 . -465) (undo-tree-id3329 . -465) (undo-tree-id3330 . -465) (undo-tree-id3331 . -465) (undo-tree-id3332 . -466) (undo-tree-id3333 . -466) (undo-tree-id3334 . -466) (undo-tree-id3335 . -466) (undo-tree-id3336 . -466) (undo-tree-id3337 . -466) (undo-tree-id3338 . -466) (undo-tree-id3339 . -471) (undo-tree-id3340 . -471) (undo-tree-id3341 . -471) (undo-tree-id3342 . -471) (undo-tree-id3343 . -471) (undo-tree-id3344 . -471) (undo-tree-id3345 . -471) (undo-tree-id3346 . -478) (undo-tree-id3347 . -478) (undo-tree-id3348 . -478) (undo-tree-id3349 . -478) (undo-tree-id3350 . -478) (undo-tree-id3351 . -478) (undo-tree-id3352 . -478) (undo-tree-id3353 . -483) (undo-tree-id3354 . -483) (undo-tree-id3355 . -483) (undo-tree-id3356 . -483) (undo-tree-id3357 . -483) (undo-tree-id3358 . -483) (undo-tree-id3359 . -483) (undo-tree-id3360 . -494) (undo-tree-id3361 . -494) (undo-tree-id3362 . -494) (undo-tree-id3363 . -494) (undo-tree-id3364 . -494) (undo-tree-id3365 . -494) (undo-tree-id3366 . -494) (undo-tree-id3367 . -497) (undo-tree-id3368 . -497) (undo-tree-id3369 . -497) (undo-tree-id3370 . -497) (undo-tree-id3371 . -497) (undo-tree-id3372 . -497) (undo-tree-id3373 . -497) (undo-tree-id3374 . -501) (undo-tree-id3375 . -501) (undo-tree-id3376 . -501) (undo-tree-id3377 . -501) (undo-tree-id3378 . -501) (undo-tree-id3379 . -501) (undo-tree-id3380 . -501) (undo-tree-id3381 . -505) (undo-tree-id3382 . -505) (undo-tree-id3383 . -505) (undo-tree-id3384 . -505) (undo-tree-id3385 . -505) (undo-tree-id3386 . -505) (undo-tree-id3387 . -505) (undo-tree-id3388 . -511) (undo-tree-id3389 . -511) (undo-tree-id3390 . -511) (undo-tree-id3391 . -511) (undo-tree-id3392 . -511) (undo-tree-id3393 . -511) (undo-tree-id3394 . -511) (undo-tree-id3395 . -514) (undo-tree-id3396 . -514) (undo-tree-id3397 . -514) (undo-tree-id3398 . -514) (undo-tree-id3399 . -514) (undo-tree-id3400 . -514) (undo-tree-id3401 . -514) (undo-tree-id3402 . -518) (undo-tree-id3403 . -518) (undo-tree-id3404 . -518) (undo-tree-id3405 . -518) (undo-tree-id3406 . -518) (undo-tree-id3407 . -518) (undo-tree-id3408 . -518) (undo-tree-id3409 . -522) (undo-tree-id3410 . -522) (undo-tree-id3411 . -522) (undo-tree-id3412 . -522) (undo-tree-id3413 . -522) (undo-tree-id3414 . -522) (undo-tree-id3415 . -522) (undo-tree-id3416 . -535) (undo-tree-id3417 . -535) (undo-tree-id3418 . -535) (undo-tree-id3419 . -535) (undo-tree-id3420 . -535) (undo-tree-id3421 . -535) (undo-tree-id3422 . -535) (undo-tree-id3423 . -542) (undo-tree-id3424 . -542) (undo-tree-id3425 . -542) (undo-tree-id3426 . -542) (undo-tree-id3427 . -542) (undo-tree-id3428 . -542) (undo-tree-id3429 . -542) (undo-tree-id3430 . -545) (undo-tree-id3431 . -545) (undo-tree-id3432 . -545) (undo-tree-id3433 . -545) (undo-tree-id3434 . -545) (undo-tree-id3435 . -545) (undo-tree-id3436 . -545) (undo-tree-id3437 . -551) (undo-tree-id3438 . -551) (undo-tree-id3439 . -551) (undo-tree-id3440 . -551) (undo-tree-id3441 . -551) (undo-tree-id3442 . -551) (undo-tree-id3443 . -551) (undo-tree-id3444 . -552) (undo-tree-id3445 . -552) (undo-tree-id3446 . -552) (undo-tree-id3447 . -552) (undo-tree-id3448 . -552) (undo-tree-id3449 . -552) (undo-tree-id3450 . -552) (undo-tree-id3451 . -556) (undo-tree-id3452 . -556) (undo-tree-id3453 . -556) (undo-tree-id3454 . -556) (undo-tree-id3455 . -556) (undo-tree-id3456 . -556) (undo-tree-id3457 . -556) (undo-tree-id3458 . -561) (undo-tree-id3459 . -561) (undo-tree-id3460 . -561) (undo-tree-id3461 . -561) (undo-tree-id3462 . -561) (undo-tree-id3463 . -561) (undo-tree-id3464 . -561) (undo-tree-id3465 . -570) (undo-tree-id3466 . -570) (undo-tree-id3467 . -570) (undo-tree-id3468 . -570) (undo-tree-id3469 . -570) (undo-tree-id3470 . -570) (undo-tree-id3471 . -570) (undo-tree-id3472 . -575) (undo-tree-id3473 . -575) (undo-tree-id3474 . -575) (undo-tree-id3475 . -575) (undo-tree-id3476 . -575) (undo-tree-id3477 . -575) (undo-tree-id3478 . -575) (undo-tree-id3479 . -578) (undo-tree-id3480 . -578) (undo-tree-id3481 . -578) (undo-tree-id3482 . -578) (undo-tree-id3483 . -578) (undo-tree-id3484 . -578) (undo-tree-id3485 . -578) (undo-tree-id3486 . -582) (undo-tree-id3487 . -582) (undo-tree-id3488 . -582) (undo-tree-id3489 . -582) (undo-tree-id3490 . -582) (undo-tree-id3491 . -582) (undo-tree-id3492 . -582) (undo-tree-id3493 . -585) (undo-tree-id3494 . -585) (undo-tree-id3495 . -585) (undo-tree-id3496 . -585) (undo-tree-id3497 . -585) (undo-tree-id3498 . -585) (undo-tree-id3499 . -585) (undo-tree-id3500 . -589) (undo-tree-id3501 . -589) (undo-tree-id3502 . -589) (undo-tree-id3503 . -589) (undo-tree-id3504 . -589) (undo-tree-id3505 . -589) (undo-tree-id3506 . -589) (undo-tree-id3507 . -593) (undo-tree-id3508 . -593) (undo-tree-id3509 . -593) (undo-tree-id3510 . -593) (undo-tree-id3511 . -593) (undo-tree-id3512 . -593) (undo-tree-id3513 . -593) (undo-tree-id3514 . -601) (undo-tree-id3515 . -601) (undo-tree-id3516 . -601) (undo-tree-id3517 . -601) (undo-tree-id3518 . -601) (undo-tree-id3519 . -601) (undo-tree-id3520 . -601) (undo-tree-id3521 . -608) (undo-tree-id3522 . -608) (undo-tree-id3523 . -608) (undo-tree-id3524 . -608) (undo-tree-id3525 . -608) (undo-tree-id3526 . -608) (undo-tree-id3527 . -608) (undo-tree-id3528 . -609) (undo-tree-id3529 . -609) (undo-tree-id3530 . -609) (undo-tree-id3531 . -609) (undo-tree-id3532 . -609) (undo-tree-id3533 . -609) (undo-tree-id3534 . -609) (undo-tree-id3535 . -612) (undo-tree-id3536 . -612) (undo-tree-id3537 . -612) (undo-tree-id3538 . -612) (undo-tree-id3539 . -612) (undo-tree-id3540 . -612) (undo-tree-id3541 . -612) (undo-tree-id3542 . -616) (undo-tree-id3543 . -616) (undo-tree-id3544 . -616) (undo-tree-id3545 . -616) (undo-tree-id3546 . -616) (undo-tree-id3547 . -616) (undo-tree-id3548 . -616) (undo-tree-id3549 . -620) (undo-tree-id3550 . -620) (undo-tree-id3551 . -620) (undo-tree-id3552 . -620) (undo-tree-id3553 . -620) (undo-tree-id3554 . -620) (undo-tree-id3555 . -620) (undo-tree-id3556 . -626) (undo-tree-id3557 . -626) (undo-tree-id3558 . -626) (undo-tree-id3559 . -626) (undo-tree-id3560 . -626) (undo-tree-id3561 . -626) (undo-tree-id3562 . -626) (undo-tree-id3563 . -636) (undo-tree-id3564 . -636) (undo-tree-id3565 . -636) (undo-tree-id3566 . -636) (undo-tree-id3567 . -636) (undo-tree-id3568 . -636) (undo-tree-id3569 . -636) (undo-tree-id3570 . -642) (undo-tree-id3571 . -642) (undo-tree-id3572 . -642) (undo-tree-id3573 . -642) (undo-tree-id3574 . -642) (undo-tree-id3575 . -642) (undo-tree-id3576 . -642) (undo-tree-id3577 . -647) (undo-tree-id3578 . -647) (undo-tree-id3579 . -647) (undo-tree-id3580 . -647) (undo-tree-id3581 . -647) (undo-tree-id3582 . -647) (undo-tree-id3583 . -647) (undo-tree-id3584 . -648) (undo-tree-id3585 . -648) (undo-tree-id3586 . -648) (undo-tree-id3587 . -648) (undo-tree-id3588 . -648) (undo-tree-id3589 . -648) (undo-tree-id3590 . -648) (undo-tree-id3591 . -659) (undo-tree-id3592 . -659) (undo-tree-id3593 . -659) (undo-tree-id3594 . -659) (undo-tree-id3595 . -659) (undo-tree-id3596 . -659) (undo-tree-id3597 . -659) (undo-tree-id3598 . -660) (undo-tree-id3599 . -660) (undo-tree-id3600 . -660) (undo-tree-id3601 . -660) (undo-tree-id3602 . -660) (undo-tree-id3603 . -660) (undo-tree-id3604 . -660) (undo-tree-id3605 . -664) (undo-tree-id3606 . -664) (undo-tree-id3607 . -664) (undo-tree-id3608 . -664) (undo-tree-id3609 . -664) (undo-tree-id3610 . -664) (undo-tree-id3611 . -664) (undo-tree-id3612 . -675) (undo-tree-id3613 . -675) (undo-tree-id3614 . -675) (undo-tree-id3615 . -675) (undo-tree-id3616 . -675) (undo-tree-id3617 . -675) (undo-tree-id3618 . -675) (undo-tree-id3619 . -678) (undo-tree-id3620 . -678) (undo-tree-id3621 . -678) (undo-tree-id3622 . -678) (undo-tree-id3623 . -678) (undo-tree-id3624 . -678) (undo-tree-id3625 . -678) (undo-tree-id3626 . -683) (undo-tree-id3627 . -683) (undo-tree-id3628 . -683) (undo-tree-id3629 . -683) (undo-tree-id3630 . -683) (undo-tree-id3631 . -683) (undo-tree-id3632 . -683) (undo-tree-id3633 . -689) (undo-tree-id3634 . -689) (undo-tree-id3635 . -689) (undo-tree-id3636 . -689) (undo-tree-id3637 . -689) (undo-tree-id3638 . -689) (undo-tree-id3639 . -689) (undo-tree-id3640 . -696) (undo-tree-id3641 . -696) (undo-tree-id3642 . -696) (undo-tree-id3643 . -696) (undo-tree-id3644 . -696) (undo-tree-id3645 . -696) (undo-tree-id3646 . -696) (undo-tree-id3647 . -697) (undo-tree-id3648 . -697) (undo-tree-id3649 . -697) (undo-tree-id3650 . -697) (undo-tree-id3651 . -697) (undo-tree-id3652 . -697) (undo-tree-id3653 . -697) (undo-tree-id3654 . -700) (undo-tree-id3655 . -700) (undo-tree-id3656 . -700) (undo-tree-id3657 . -700) (undo-tree-id3658 . -700) (undo-tree-id3659 . -700) (undo-tree-id3660 . -700) (undo-tree-id3661 . -704) (undo-tree-id3662 . -704) (undo-tree-id3663 . -704) (undo-tree-id3664 . -704) (undo-tree-id3665 . -704) (undo-tree-id3666 . -704) (undo-tree-id3667 . -704) (undo-tree-id3668 . -708) (undo-tree-id3669 . -708) (undo-tree-id3670 . -708) (undo-tree-id3671 . -708) (undo-tree-id3672 . -708) (undo-tree-id3673 . -708) (undo-tree-id3674 . -708) (undo-tree-id3675 . -709) (undo-tree-id3676 . -709) (undo-tree-id3677 . -709) (undo-tree-id3678 . -709) (undo-tree-id3679 . -709) (undo-tree-id3680 . -709) (undo-tree-id3681 . -709) (undo-tree-id3682 . -717) (undo-tree-id3683 . -717) (undo-tree-id3684 . -717) (undo-tree-id3685 . -717) (undo-tree-id3686 . -717) (undo-tree-id3687 . -717) (undo-tree-id3688 . -717) (undo-tree-id3689 . -720) (undo-tree-id3690 . -720) (undo-tree-id3691 . -720) (undo-tree-id3692 . -720) (undo-tree-id3693 . -720) (undo-tree-id3694 . -720) (undo-tree-id3695 . -720) (undo-tree-id3696 . -724) (undo-tree-id3697 . -724) (undo-tree-id3698 . -724) (undo-tree-id3699 . -724) (undo-tree-id3700 . -724) (undo-tree-id3701 . -724) (undo-tree-id3702 . -724) (undo-tree-id3703 . -732) (undo-tree-id3704 . -732) (undo-tree-id3705 . -732) (undo-tree-id3706 . -732) (undo-tree-id3707 . -732) (undo-tree-id3708 . -732) (undo-tree-id3709 . -732) (undo-tree-id3710 . -738) (undo-tree-id3711 . -738) (undo-tree-id3712 . -738) (undo-tree-id3713 . -738) (undo-tree-id3714 . -738) (undo-tree-id3715 . -738) (undo-tree-id3716 . -738) (undo-tree-id3717 . -748) (undo-tree-id3718 . -748) (undo-tree-id3719 . -748) (undo-tree-id3720 . -748) (undo-tree-id3721 . -748) (undo-tree-id3722 . -748) (undo-tree-id3723 . -748) (undo-tree-id3724 . -753) (undo-tree-id3725 . -753) (undo-tree-id3726 . -753) (undo-tree-id3727 . -753) (undo-tree-id3728 . -753) (undo-tree-id3729 . -753) (undo-tree-id3730 . -753) (undo-tree-id3731 . -756) (undo-tree-id3732 . -756) (undo-tree-id3733 . -756) (undo-tree-id3734 . -756) (undo-tree-id3735 . -756) (undo-tree-id3736 . -756) (undo-tree-id3737 . -756) (undo-tree-id3738 . -764) (undo-tree-id3739 . -764) (undo-tree-id3740 . -764) (undo-tree-id3741 . -764) (undo-tree-id3742 . -764) (undo-tree-id3743 . -764) (undo-tree-id3744 . -764) (undo-tree-id3745 . -768) (undo-tree-id3746 . -768) (undo-tree-id3747 . -768) (undo-tree-id3748 . -768) (undo-tree-id3749 . -768) (undo-tree-id3750 . -768) (undo-tree-id3751 . -768) (undo-tree-id3752 . -768) (undo-tree-id3753 . -768) (undo-tree-id3754 . -768) (undo-tree-id3755 . -768) (undo-tree-id3756 . -768) (undo-tree-id3757 . -819) (undo-tree-id3758 . -819) (undo-tree-id3759 . -819) (undo-tree-id3760 . -819) (undo-tree-id3761 . -819) (undo-tree-id3762 . -819) (undo-tree-id3763 . -819) (undo-tree-id3764 . -819) 9101) nil (25733 16283 931683 526000) 0 nil])
([nil nil ((8283 . 8284) (8282 . 8283) 8281) nil (25733 16283 912869 333000) 0 nil])
([nil nil ((8284 . 8328) (#("src" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8284) (undo-tree-id2679 . -1) (undo-tree-id2680 . -3) (undo-tree-id2681 . -1) (undo-tree-id2682 . -2) (undo-tree-id2683 . -3) (undo-tree-id2684 . -3) (undo-tree-id2685 . -3) (undo-tree-id2686 . -3) (undo-tree-id2687 . -3) (undo-tree-id2688 . -3) (undo-tree-id2689 . -3) (undo-tree-id2690 . -3) 8287 (8284 . 8287) (#("r" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8284) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) 8285 (8284 . 8285)) nil (25733 16283 912861 517000) 0 nil])
([nil nil ((8295 . 8300)) nil (25733 16283 912830 468000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 8297) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1)) nil (25733 16283 912826 194000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8298 . 8299) (nil fontified nil 8298 . 8299) (8298 . 8299) 8297) nil (25733 16283 912688 222000) 0 nil])
([nil nil ((8322 . 8324) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 8321) (undo-tree-id2637 . -2) (undo-tree-id2638 . -2) (undo-tree-id2639 . -2) (undo-tree-id2640 . -2) (undo-tree-id2641 . -2) (undo-tree-id2642 . -2) (undo-tree-id2643 . -2) (undo-tree-id2644 . -2) (undo-tree-id2645 . -2) (undo-tree-id2646 . -2) (undo-tree-id2647 . -2) (8323 . 8324) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 8324) (undo-tree-id2648 . -2) 8321 (8320 . 8323) 8298) nil (25733 16283 912680 902000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8514 . 8515) (nil fontified nil 8489 . 8515) (nil fontified nil 8477 . 8489) (nil fontified nil 8438 . 8477) (nil fontified nil 8403 . 8438) (nil fontified nil 8377 . 8403) (nil fontified nil 8351 . 8377) (nil fontified nil 8321 . 8351) (8321 . 8515)) nil (25733 16283 912644 59000) 0 nil])
([nil nil ((8321 . 8323) (8351 . 8353) (8377 . 8379) (8403 . 8405) (8438 . 8440) (8477 . 8479) (8489 . 8491) 8321) nil (25733 16283 912637 636000) 0 nil])
([nil nil ((8355 . 8357) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 8530) (undo-tree-id2579 . -2) (undo-tree-id2580 . -2) (undo-tree-id2581 . -2) (undo-tree-id2582 . -2) (undo-tree-id2583 . -2) (undo-tree-id2584 . -2) (undo-tree-id2585 . -2) (undo-tree-id2586 . -2) (undo-tree-id2587 . -2) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) 8321) nil (25733 16283 912628 204000) 0 nil])
([nil nil ((8385 . 8394) 8321) nil (25733 16283 912369 845000) 0 nil])
([nil nil ((8422 . 8431) 8321) nil (25733 16283 912367 674000) 0 nil])
([nil nil ((8468 . 8472) 8321) nil (25733 16283 912363 102000) 0 nil])
([nil nil ((8513 . 8524) 8321) nil (25733 16283 912356 175000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8538) (undo-tree-id2577 . 1) (undo-tree-id2578 . -1)) nil (25733 16283 912339 638000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8538)) nil (25733 16283 912207 187000) 0 nil])
([nil nil ((8478 . 8479) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8478) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (t 25733 16283 962044 439000)) nil (25733 16307 410321 99000) 0 nil])
([nil nil ((8478 . 8479) (#("'" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8478)) nil (25733 16307 410268 917000) 0 nil])
([nil nil ((8487 . 8488) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8487)) nil (25733 16307 410265 136000) 0 nil])
([nil nil ((8496 . 8497) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8496)) nil (25733 16307 410210 443000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -8536) (undo-tree-id3857 . -2) (undo-tree-id3858 . -2) 8538 (8535 . 8538) (t 25733 16307 498600 967000) 8534) nil (25733 16768 917825 475000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -8321) (undo-tree-id3856 . -2) 8323 (8320 . 8323) 8284) nil (25733 16768 917822 617000) 0 nil])
([nil nil ((#("*** SIDE EFFECTS CAN CAUSE BUGS
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 30 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 30 31 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 31 32 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 8581) (undo-tree-id3839 . -4) (undo-tree-id3840 . -4) (undo-tree-id3841 . -4) (undo-tree-id3842 . -4) (undo-tree-id3843 . -4) (undo-tree-id3844 . -4) (undo-tree-id3845 . -4) (undo-tree-id3846 . -4) (undo-tree-id3847 . -4) (undo-tree-id3848 . -4) (undo-tree-id3849 . -4) (undo-tree-id3850 . -4) (undo-tree-id3851 . -4) (undo-tree-id3852 . -4) (undo-tree-id3853 . -4) (undo-tree-id3854 . -4) (undo-tree-id3855 . -4) 8585) nil (25733 16768 917820 355000) 0 nil])
([nil nil ((#("*** 
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 5 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 8581) (undo-tree-id3821 . -3) (undo-tree-id3822 . -4) (undo-tree-id3823 . -3) (undo-tree-id3824 . -3) (undo-tree-id3825 . -3) (undo-tree-id3826 . -3) (undo-tree-id3827 . -3) (undo-tree-id3828 . -3) (undo-tree-id3829 . -3) (undo-tree-id3830 . -3) (undo-tree-id3831 . -3) (undo-tree-id3832 . -3) (undo-tree-id3833 . -3) (undo-tree-id3834 . -3) (undo-tree-id3835 . -3) (undo-tree-id3836 . -3) (undo-tree-id3837 . -3) (undo-tree-id3838 . -3) 8584) nil (25733 16768 917808 110000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8581 . 8582) (#("
" 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . -8586) (8581 . 8587)) nil (25733 16768 917795 617000) 0 nil])
([nil nil ((8594 . 8608) (#("o" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8594) (undo-tree-id3796 . -1) (#("n" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8595) (undo-tree-id3797 . -1) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8596) (undo-tree-id3798 . -1) 8597 (8593 . 8597) (#("o" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8593) (undo-tree-id3799 . -1) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8594) (undo-tree-id3800 . -1) (#("o" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8595) (undo-tree-id3801 . -1) 8596 (8594 . 8596) (#("n" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8594) (undo-tree-id3802 . -1) 8595 (8593 . 8595) (#("t" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8593) (undo-tree-id3803 . -1) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8594) (undo-tree-id3804 . -1) (#("o" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8595) (undo-tree-id3805 . -1) 8596 (8593 . 8596) (#("e" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8593) (undo-tree-id3806 . -1) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8594) (undo-tree-id3807 . -1) 8595 (8593 . 8595) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8593) (undo-tree-id3808 . -1) (#("v" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8594) (undo-tree-id3809 . -1) (#("e" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8595) (undo-tree-id3810 . -1) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8596) (undo-tree-id3811 . -1) 8597 (8587 . 8597) (#("p" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8587) (undo-tree-id3812 . -1) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8588) (undo-tree-id3813 . -1) (#("c" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8589) (undo-tree-id3814 . -1) (#("a" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8590) (undo-tree-id3815 . -1) (#("t" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8591) (undo-tree-id3816 . -1) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8592) (undo-tree-id3817 . -1) (#("v" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8593) (undo-tree-id3818 . -1) (#("e" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8594) (undo-tree-id3819 . -1) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8595) (undo-tree-id3820 . -1) 8596 (8585 . 8596) (8582 . 8585) (8581 . 8582) 8581) nil (25733 16768 917789 435000) 0 nil])
([nil nil ((8613 . 8614) 8612) nil (25733 16768 917769 847000) 0 nil])
([nil nil ((8608 . 8609) 8587) nil (25733 16768 917769 64000) 0 nil])
([nil nil ((8621 . 8627) (#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . 8621) (8622 . 8622) 8621 (8613 . 8621)) nil (25733 16768 917767 942000) 0 nil])
([nil nil ((8645 . 8651) (8643 . 8645) (8638 . 8643) (#("p" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8638) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) 8639 (8638 . 8639) (#("F" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8638) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (#("E" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8639) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (#("R" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8640) (undo-tree-id3780 . -1) (#("A" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8641) (undo-tree-id3781 . -1) (#("T" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8642) (undo-tree-id3782 . -1) (#("O" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8643) (undo-tree-id3783 . -1) (#("R" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8644) (undo-tree-id3784 . -1) (#("
" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . -8645) (undo-tree-id3785 . -1) (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8646) (undo-tree-id3786 . -1) (#("*" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8647) (undo-tree-id3787 . -1) (#("*" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8648) (undo-tree-id3788 . -1) (#("*" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t org-emphasis t)) . -8649) (undo-tree-id3789 . -1) (#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . -8650) (undo-tree-id3790 . -1) 8651 (8645 . 8651) (8642 . 8645) (8638 . 8642) (#("E" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8638) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) 8639 (8628 . 8639) (#("M" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8628) (undo-tree-id3794 . -1) 8629 (8628 . 8629) (#("h" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8628) (undo-tree-id3795 . -1) 8629 (8627 . 8629)) nil (25733 16768 921760 573000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 8650) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (8651 . 8652)) nil (25733 16800 957340 816000) 0 nil] [nil nil ((nil fontified t 8651 . 8652) (nil line-prefix #("**" 0 2 (face org-indent)) 8651 . 8652) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 8651 . 8652) (nil keymap (keymap) 8651 . 8652) (nil face org-level-3 8651 . 8652) (nil fontified t 8650 . 8651) (nil line-prefix #("**" 0 2 (face org-indent)) 8650 . 8651) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 8650 . 8651) (nil composition (2 1 [9675]) 8650 . 8651) (nil keymap (keymap) 8650 . 8651) (nil face org-level-3 8650 . 8651) (nil fontified t 8648 . 8650) (nil line-prefix #("**" 0 2 (face org-indent)) 8648 . 8650) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 8648 . 8650) (nil face org-hide 8648 . 8650) (nil keymap (keymap) 8648 . 8650) (#("*** " 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 8647) (8651 . 8656) 8650) ((#("**** " 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 3 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 3 4 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 4 5 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 8651) (8647 . 8651) (nil keymap (keymap) 8648 . 8650) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 8648 . 8650) (nil line-prefix #("***" 0 3 (face org-indent)) 8648 . 8650) (nil fontified nil 8648 . 8650) (nil face org-level-4 8650 . 8651) (nil keymap (keymap) 8650 . 8651) (nil composition (1 1 [9679]) 8650 . 8651) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 8650 . 8651) (nil line-prefix #("***" 0 3 (face org-indent)) 8650 . 8651) (nil fontified nil 8650 . 8651) (nil face org-level-4 8651 . 8652) (nil keymap (keymap) 8651 . 8652) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 8651 . 8652) (nil line-prefix #("***" 0 3 (face org-indent)) 8651 . 8652)) (25733 16768 917726 174000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8681 . 8682) (nil fontified nil 8651 . 8682) (8651 . 8682)) nil (25733 16800 957333 394000) 0 nil])
nil
([nil nil ((8650 . 8651) (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8650) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . 1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) 8649) nil (25733 16800 957330 845000) 0 nil])
([nil nil ((8683 . 8684) (8682 . 8683) 8650) nil (25733 16800 957304 698000) 0 nil])
([nil nil ((8684 . 8688)) nil (25733 16800 957303 349000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8705 . 8706) (nil fontified nil 8688 . 8706) (8688 . 8706) 8687) nil (25733 16800 957301 863000) 0 nil])
([nil nil ((8706 . 8712)) nil (25733 16800 957296 150000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8731 . 8732) (nil fontified nil 8712 . 8732) (8712 . 8732) 8711 (t 25733 16801 20803 964000)) nil (25733 16812 417171 925000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . 8732) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (8733 . 8734) (8732 . 8733)) nil (25733 16819 222854 770000) 0 nil] [nil nil ((8731 . 8738) (#("R" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3)) . 8731) (undo-tree-id3895 . -1)) ((8731 . 8732) (#("

*** R" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 2 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 4 5 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 5 6 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 6 7 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3)) . 8731) (undo-tree-id3896 . -6) (undo-tree-id3897 . -6) (undo-tree-id3898 . -6)) (25733 16812 416745 233000) 0 nil])
([nil nil ((8734 . 8738) (8732 . 8734) (#("
" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . -8732) (undo-tree-id3899 . -1) (undo-tree-id3900 . 1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) 8733) nil (25733 16819 222843 960000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 8763 . 8764) (nil fontified nil 8738 . 8764) (8738 . 8764) 8737 (t 25733 16819 233142 620000)) nil (25733 16846 159707 507000) 0 nil])
([nil nil ((8764 . 8770)) nil (25733 16846 159705 951000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8796 . 8797) (nil fontified nil 8770 . 8797) (8770 . 8797) 8769) nil (25733 16846 159704 387000) 0 nil])
([nil nil ((8797 . 8803)) nil (25733 16846 159698 760000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8821 . 8822) (nil fontified nil 8803 . 8822) (8803 . 8822) 8802 (t 25733 16846 173640 189000)) nil (25733 16876 958856 783000) 0 nil])
([nil nil ((8822 . 8828) (t 25733 16876 974204 344000)) nil (25733 16961 490311 44000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8832 . 8833) (nil fontified nil 8828 . 8833) (8828 . 8833) 8827) nil (25733 16961 490310 120000) 0 nil])
([nil nil ((8622 . 8623)) nil (25733 16961 490308 933000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8643 . 8644) (nil fontified nil 8623 . 8644) (8623 . 8644)) nil (25733 16961 490308 255000) 0 nil])
([nil nil ((8644 . 8645)) nil (25733 16961 490307 401000) 0 nil])
([nil nil ((8623 . 8667) (#("src" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8623) (undo-tree-id3941 . -2) (undo-tree-id3942 . -2) (undo-tree-id3943 . -3) (undo-tree-id3944 . -2) (undo-tree-id3945 . -3) (undo-tree-id3946 . -3) (undo-tree-id3947 . -3) (undo-tree-id3948 . -3) (undo-tree-id3949 . -3) (undo-tree-id3950 . -3) (undo-tree-id3951 . -3) (undo-tree-id3952 . -3) (undo-tree-id3953 . -3) (undo-tree-id3954 . -3) (undo-tree-id3955 . -3) (undo-tree-id3956 . -3) (undo-tree-id3957 . -3) (undo-tree-id3958 . -3) (undo-tree-id3959 . -3) (undo-tree-id3960 . -3) (undo-tree-id3961 . -3) (undo-tree-id3962 . -3) (undo-tree-id3963 . -3) (undo-tree-id3964 . -3) (undo-tree-id3965 . -3) (undo-tree-id3966 . -3) (undo-tree-id3967 . -3) (undo-tree-id3968 . -3) (undo-tree-id3969 . -3) (undo-tree-id3970 . -3) (undo-tree-id3971 . -3) (undo-tree-id3972 . -3) (undo-tree-id3973 . -3) (undo-tree-id3974 . 3) (undo-tree-id3975 . -3) (undo-tree-id3976 . -3) (undo-tree-id3977 . -3) (undo-tree-id3978 . -3) (undo-tree-id3979 . -3) (undo-tree-id3980 . -3) (undo-tree-id3981 . -3) (undo-tree-id3982 . -3) (undo-tree-id3983 . -3) 8626 (#("p" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8626) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8627) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) 8628 (8623 . 8628) (#("r" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8623) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) 8624 (8623 . 8624) (8622 . 8623)) nil (25733 16961 490302 792000) 0 nil])
([nil nil ((8634 . 8639)) nil (25733 16961 490233 343000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8719 . 8720) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8769) (8719 . 8770)) nil (25733 16961 490232 504000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8805 . 8806) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8855) (8805 . 8856) 8774) nil (25733 16961 490231 416000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8879 . 8880) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8929) (8879 . 8930) 8861) nil (25733 16961 490230 303000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8955 . 8956) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -9005) (8955 . 9006) 8935) nil (25733 16961 490229 299000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9037 . 9038) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -9087) (9037 . 9088) 9011) nil (25733 16961 490228 167000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9120 . 9121) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -9170) (9120 . 9171) 9093) nil (25733 16961 490226 905000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9195 . 9196) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -9245) (9195 . 9246) 9176) nil (25733 16961 490225 79000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9256 . 9257) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -9306) (9256 . 9307) 9251) nil (25733 16961 490220 46000) 0 nil])
([nil nil ((#("(funcall #’cons ’a ’b)
" 0 20 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 20 21 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t) 21 22 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 22 23 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8673) (undo-tree-id4040 . 23) (undo-tree-id4041 . -1) (undo-tree-id4042 . 2) (undo-tree-id4043 . -22) (t 25733 16961 507729 139000)) nil (25733 16984 36223 513000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8659 . 8660) (#("
" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8682) (8659 . 8683) 8623) nil (25733 16984 36217 824000) 0 nil])
([nil nil ((8670 . 8671) (#("’" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8670) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1)) nil (25733 16984 36215 192000) 0 nil])
([nil nil ((8676 . 8677) (#("’" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8676)) nil (25733 16984 36200 122000) 0 nil])
([nil nil ((8679 . 8680) (#("’" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8679)) nil (25733 17024 383069 522000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8839 . 8840) (nil fontified nil 8833 . 8840) (nil fontified nil 8812 . 8833) (nil fontified nil 8794 . 8812) (nil fontified nil 8779 . 8794) (nil fontified nil 8743 . 8779) (nil fontified nil 8738 . 8743) (nil fontified nil 8702 . 8738) (nil fontified nil 8685 . 8702) (8685 . 8840) 8686 (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 8685) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) 8686 (t 25733 16984 48130 391000)) nil (25733 17090 282921 137000) 0 nil] [nil nil ((8670 . 8671) (#("'" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8670) (t 25733 16984 48130 391000)) ((8670 . 8671) (#("`" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8670)) (25733 17024 382523 315000) 0 nil])
([nil nil ((#("#<Compiled-function CONS {6041410}>
" 0 36 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8702) (undo-tree-id4127 . -6) (undo-tree-id4128 . -6) (undo-tree-id4129 . -6) (undo-tree-id4130 . -6) (undo-tree-id4131 . -6) (undo-tree-id4132 . -6) (undo-tree-id4133 . -6) (undo-tree-id4134 . -6) (undo-tree-id4135 . -6) (undo-tree-id4136 . -6) (undo-tree-id4137 . -6) (undo-tree-id4138 . -6) (undo-tree-id4139 . -6) (undo-tree-id4140 . -6) (undo-tree-id4141 . -6) (undo-tree-id4142 . -6) 8708) nil (25733 17090 282907 979000) 0 nil])
nil
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8702) (undo-tree-id4125 . 1) (undo-tree-id4126 . -1)) nil (25733 17090 282898 408000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8702) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1)) nil (25733 17090 282895 432000) 0 nil])
([nil nil ((#("#<Compiled-function CONS {6041410}>
" 0 36 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8705) (undo-tree-id4117 . -6)) nil (25733 17090 282890 670000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8705) (undo-tree-id4115 . 1) (undo-tree-id4116 . -1)) nil (25733 17090 282889 264000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8705)) nil (25733 17090 282887 425000) 0 nil])
([nil nil ((#("COMPILED-FUNCTION
" 0 18 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8718) (undo-tree-id4114 . -6)) nil (25733 17090 282886 648000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8718) (undo-tree-id4112 . 1) (undo-tree-id4113 . -1)) nil (25733 17090 282884 828000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8718)) nil (25733 17090 282883 46000) 0 nil])
([nil nil ((#("(C . D)#+END_SRC
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 1 6 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 7 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 7 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 13 16 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 16 17 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 8737) (undo-tree-id4078 . 10) (undo-tree-id4079 . -6) (undo-tree-id4080 . -17) (undo-tree-id4081 . -17) (undo-tree-id4082 . -6) (undo-tree-id4083 . -6) (undo-tree-id4084 . -6) (undo-tree-id4085 . -6) (undo-tree-id4086 . -6) (undo-tree-id4087 . -6) (undo-tree-id4088 . -6) (undo-tree-id4089 . -6) (undo-tree-id4090 . -6) (undo-tree-id4091 . -6) (undo-tree-id4092 . -6) (undo-tree-id4093 . -6) (undo-tree-id4094 . -6) (undo-tree-id4095 . -6) (undo-tree-id4096 . -6) (undo-tree-id4097 . -6) (undo-tree-id4098 . -6) (undo-tree-id4099 . -6) (undo-tree-id4100 . -6) (undo-tree-id4101 . -6) (undo-tree-id4102 . -6) (undo-tree-id4103 . -6) (undo-tree-id4104 . -6) (undo-tree-id4105 . -6) (undo-tree-id4106 . -6) (undo-tree-id4107 . -6) (undo-tree-id4108 . 17) (undo-tree-id4109 . -1) (undo-tree-id4110 . 11) (undo-tree-id4111 . -7)) nil (25733 17090 282880 748000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 8683) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1)) nil (25733 17090 282297 785000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 8683) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1)) nil (25733 17090 283150 765000) 0 nil])
([nil nil ((8728 . 8729) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8728) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1)) nil (25733 17130 624622 337000) 0 nil] [nil nil ((#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8728)) ((8728 . 8729)) (25733 17090 282248 70000) 0 nil])
([nil nil ((8731 . 8732) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8731)) nil (25733 17130 624617 299000) 0 nil])
nil
([nil nil ((8716 . 8717) (8715 . 8716) 8714) nil (25733 17130 624616 172000) 0 nil])
([nil nil ((8699 . 8700) 8683) nil (25733 17130 624615 226000) 0 nil])
([nil nil ((8659 . 8660) 8623) nil (25733 17130 624614 167000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8701) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1)) nil (25733 17130 624612 461000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8717) (undo-tree-id4162 . 1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1)) nil (25733 17130 624595 216000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8717) (undo-tree-id4160 . -1) (undo-tree-id4161 . 1)) nil (25733 17130 624571 314000) 0 nil])
([nil nil ((8735 . 8736) 8717) nil (25733 17130 624569 164000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8736 . 8737) (#("
" 0 1 (font-lock-fontified t font-lock-multiline t face org-block-begin-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8773) (8736 . 8774)) nil (25733 17130 624568 57000) 0 nil])
([nil nil ((8739 . 8742) (#("BEGIN" 0 5 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8739) (undo-tree-id4147 . -4) (undo-tree-id4148 . -4) (undo-tree-id4149 . -4) (undo-tree-id4150 . -5) (undo-tree-id4151 . -4) (undo-tree-id4152 . -4) (undo-tree-id4153 . -4) (undo-tree-id4154 . -4) (undo-tree-id4155 . -4) (undo-tree-id4156 . -4) (undo-tree-id4157 . -4) (undo-tree-id4158 . -4) (undo-tree-id4159 . -4) 8743) nil (25733 17130 624565 617000) 0 nil])
([nil nil ((#(":results output " 0 8 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil src-block t font-lock-multiline t face org-block-end-line) 8 16 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) src-block t font-lock-multiline t face org-block-end-line)) . 8755)) nil (25733 17130 624543 99000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8769 . 8770) (nil fontified nil 8764 . 8770) (8764 . 8770) 8769 (#("MACRO" 0 5 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . 8764) (undo-tree-id4219 . -5) (undo-tree-id4220 . -4) (undo-tree-id4221 . -4) (undo-tree-id4222 . -5) (undo-tree-id4223 . -4) (undo-tree-id4224 . -4) (undo-tree-id4225 . -4) (undo-tree-id4226 . -4) (undo-tree-id4227 . -4) (undo-tree-id4228 . -4) (undo-tree-id4229 . -4) (undo-tree-id4230 . -5) (undo-tree-id4231 . -5) 8769 (t 25733 17130 690694 341000)) nil (25733 17146 839801 209000) 0 nil])
([nil nil ((8756 . 8759) (8755 . 8756) (t 25733 17146 850972 523000) 8746) nil (25733 17183 460807 9000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t face org-block-end-line)) . 8759) (undo-tree-id4296 . 1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1)) nil (25733 17183 460805 773000) 0 nil])
([nil nil ((8834 . 8835) (8834 . 8835)) nil (25733 17183 460803 333000) 0 nil])
([nil nil ((8872 . 8873) (8872 . 8873)) nil (25733 17183 460802 578000) 0 nil])
([nil nil ((8925 . 8926) (8925 . 8926) 8929) nil (25733 17183 460801 684000) 0 nil])
([nil nil ((8950 . 8951) (8950 . 8951)) nil (25733 17183 460800 816000) 0 nil])
([nil nil ((8951 . 8952) (8951 . 8952)) nil (25733 17183 460799 908000) 0 nil])
([nil nil ((9030 . 9031) (9030 . 9031)) nil (25733 17183 460799 72000) 0 nil])
([nil nil ((9114 . 9115) (9114 . 9115)) nil (25733 17183 460798 299000) 0 nil])
([nil nil ((9199 . 9200) (9199 . 9200)) nil (25733 17183 460797 460000) 0 nil])
([nil nil ((9276 . 9277) (9276 . 9277)) nil (25733 17183 460796 484000) 0 nil])
([nil nil ((9339 . 9340) (9339 . 9340)) nil (25733 17183 460795 361000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8925) (undo-tree-id4267 . 1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1)) nil (25733 17183 460793 292000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8925) (undo-tree-id4266 . 1)) nil (25733 17183 460773 934000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8948) (undo-tree-id4253 . 1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1)) nil (25733 17183 460771 911000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8948) (undo-tree-id4236 . 1) (undo-tree-id4237 . 1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1)) nil (25733 17183 460762 455000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8948) (undo-tree-id4232 . 1) (undo-tree-id4233 . 1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1)) nil (25733 17183 460746 680000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8835) (t 25733 17183 475600 170000)) nil (25733 17191 915395 682000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8871) (undo-tree-id4308 . -1)) nil (25733 17191 915394 542000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8757) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1)) nil (25733 17191 915392 140000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8757) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1)) nil (25733 17191 915383 989000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8846 . 8847) (nil fontified nil 8821 . 8847) (8821 . 8847) 8820 (t 25733 17191 931744 550000)) nil (25733 17263 149201 795000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -8848) (undo-tree-id4320 . -2) (undo-tree-id4321 . -2) (undo-tree-id4322 . -2) (undo-tree-id4323 . -2) (undo-tree-id4324 . -2) (undo-tree-id4325 . -2) (undo-tree-id4326 . -2) (undo-tree-id4327 . -2) (undo-tree-id4328 . -2) (undo-tree-id4329 . -2) (undo-tree-id4330 . -2) 8850 (8847 . 8850) 8846) nil (25733 17263 149200 47000) 0 nil])
([nil nil ((8821 . 8822) (8839 . 8843) 8819 (8838 . 8839)) nil (25733 17263 149191 779000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8821) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8840) 8819) nil (25733 17263 149190 7000) 0 nil])
([nil nil ((8853 . 8855) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 8852) (undo-tree-id4309 . -2) (undo-tree-id4310 . -2) (undo-tree-id4311 . -2) (undo-tree-id4312 . -2) (undo-tree-id4313 . -2) (undo-tree-id4314 . -2) (undo-tree-id4315 . -2) (undo-tree-id4316 . -2) (undo-tree-id4317 . -2) (undo-tree-id4318 . -2) (undo-tree-id4319 . -2) (8854 . 8855) (8851 . 8854) 8843) nil (25733 17263 149185 201000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8884 . 8885) (nil fontified nil 8855 . 8885) (8855 . 8885) 8854 (t 25733 17263 164953 425000)) nil (25733 17283 162679 19000) 0 nil])
([nil nil ((8864 . 8865) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8864) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1)) nil (25733 17283 162676 507000) 0 nil])
([nil nil ((8872 . 8873) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8872)) nil (25733 17283 162656 515000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9048 . 9049) (nil fontified nil 9036 . 9049) (nil fontified nil 9022 . 9036) (nil fontified nil 9008 . 9022) (nil fontified nil 8997 . 9008) (nil fontified nil 8986 . 8997) (nil fontified nil 8974 . 8986) (8974 . 9049) 8973 (t 25733 17283 177290 834000)) nil (25733 17315 290498 140000) 0 nil])
([nil nil ((8986 . 8988) (8997 . 8999) (9008 . 9010) (9022 . 9024) (9036 . 9038) 8972) nil (25733 17315 290496 134000) 0 nil])
([nil nil ((9001 . 9003) 8972) nil (25733 17315 290494 766000) 0 nil])
([nil nil ((9016 . 9018) 8972) nil (25733 17315 290493 933000) 0 nil])
([nil nil ((9034 . 9036) 8972) nil (25733 17315 290493 68000) 0 nil])
([nil nil ((9052 . 9054) 8972) nil (25733 17315 290491 789000) 0 nil])
([nil nil ((8988 . 8989) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8988)) nil (25733 17315 290486 811000) 0 nil])
([nil nil ((9069 . 9071) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 9068) (undo-tree-id4442 . -2) (undo-tree-id4443 . -2) (undo-tree-id4444 . -2) (undo-tree-id4445 . -2) (undo-tree-id4446 . -2) (undo-tree-id4447 . -2) (undo-tree-id4448 . -2) (undo-tree-id4449 . -2) (undo-tree-id4450 . -2) (undo-tree-id4451 . -2) (undo-tree-id4452 . -2) (undo-tree-id4453 . -2) (undo-tree-id4454 . -2) (undo-tree-id4455 . -2) (undo-tree-id4456 . -2) (undo-tree-id4457 . -2) (undo-tree-id4458 . -2) (undo-tree-id4459 . -2) (undo-tree-id4460 . -2) (undo-tree-id4461 . -2) (undo-tree-id4462 . -2) (undo-tree-id4463 . -2) (undo-tree-id4464 . -2) (undo-tree-id4465 . -2) (9067 . 9071) (t 25733 17315 305830 643000)) nil (25733 17370 566284 865000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9685 . 9686) (nil fontified nil 9661 . 9686) (nil fontified nil 9611 . 9661) (nil fontified nil 9585 . 9611) (nil fontified nil 9564 . 9585) (nil fontified nil 9509 . 9564) (nil fontified nil 9441 . 9509) (nil fontified nil 9428 . 9441) (nil fontified nil 9414 . 9428) (nil fontified nil 9400 . 9414) (nil fontified nil 9389 . 9400) (nil fontified nil 9379 . 9389) (nil fontified nil 9352 . 9379) (nil fontified nil 9322 . 9352) (nil fontified nil 9249 . 9322) (nil fontified nil 9221 . 9249) (nil fontified nil 9195 . 9221) (nil fontified nil 9188 . 9195) (nil fontified nil 9117 . 9188) (nil fontified nil 9091 . 9117) (nil fontified nil 9068 . 9091) (9068 . 9686)) nil (25733 17370 566268 503000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 9743) (undo-tree-id4402 . -2) (undo-tree-id4403 . -2) (undo-tree-id4404 . -2) (undo-tree-id4405 . -2) (undo-tree-id4406 . -2) (undo-tree-id4407 . -2) (undo-tree-id4408 . -2) (undo-tree-id4409 . -2) (undo-tree-id4410 . -2) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) 8972 (9081 . 9083) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9080) (undo-tree-id4431 . -2) (undo-tree-id4432 . -2) (undo-tree-id4433 . -2) (undo-tree-id4434 . -2) (undo-tree-id4435 . -2) (undo-tree-id4436 . -2) (undo-tree-id4437 . -2) (undo-tree-id4438 . -2) (undo-tree-id4439 . -2) (undo-tree-id4440 . -2) (undo-tree-id4441 . -2) (9082 . 9083) (8974 . 8976) (8986 . 8988) (9003 . 9005) (9014 . 9015) (9018 . 9019) (9032 . 9034) (9054 . 9056) (9071 . 9073) (9094 . 9096) (9120 . 9122) (9191 . 9193) (9198 . 9200) (9224 . 9226) (9252 . 9254) (9325 . 9327) (9355 . 9357) (9382 . 9384) (9392 . 9394) (9403 . 9405) (9417 . 9419) (9431 . 9433) (9444 . 9446) (9512 . 9514) (9567 . 9569) (9588 . 9590) (9614 . 9616) (9664 . 9666) 8972 (9067 . 9070) 9066) nil (25733 17370 566262 972000) 0 nil])
([nil nil ((9095 . 9096) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9095)) nil (25733 17370 566231 141000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -9107) (undo-tree-id4362 . -2) (undo-tree-id4363 . -2) (undo-tree-id4364 . -2) (undo-tree-id4365 . -2) (undo-tree-id4366 . -2) (undo-tree-id4367 . -2) (undo-tree-id4368 . -2) (undo-tree-id4369 . -2) (undo-tree-id4370 . -2) (undo-tree-id4371 . -2) (undo-tree-id4372 . -2) 9109 (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9081) (undo-tree-id4373 . -2) (undo-tree-id4374 . -2) (undo-tree-id4375 . -2) (undo-tree-id4376 . -2) (undo-tree-id4377 . -2) (undo-tree-id4378 . -2) (undo-tree-id4379 . -2) (undo-tree-id4380 . -2) (undo-tree-id4381 . -2) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) 8972 (9108 . 9111) 9102) nil (25733 17370 566228 716000) 0 nil])
([nil nil ((#("  (ONE TWO THREE FOUR FIVE)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 3 26 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26 27 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 27 28 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9108) (undo-tree-id4361 . -26)) nil (25733 17370 566197 288000) 0 nil])
([nil nil ((#("  We can extract the French words by taking the second component of each
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 73 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9108) (undo-tree-id4354 . -26) (undo-tree-id4355 . -26) (undo-tree-id4356 . -26) (undo-tree-id4357 . -26) (undo-tree-id4358 . -26) (undo-tree-id4359 . -26) (undo-tree-id4360 . -26)) nil (25733 17370 566195 634000) 0 nil])
([nil nil ((#("  entry:
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9108) (undo-tree-id4347 . -7) (undo-tree-id4348 . -7) (undo-tree-id4349 . -7) (undo-tree-id4350 . -7) (undo-tree-id4351 . -7) (undo-tree-id4352 . -7) (undo-tree-id4353 . -7)) nil (25733 17370 566189 297000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9110) (undo-tree-id4345 . 1) (undo-tree-id4346 . -1)) nil (25733 17370 566182 592000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9110)) nil (25733 17370 566579 786000) 0 nil])
([nil nil ((9119 . 9120) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9119) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1)) nil (25733 17411 606199 113000) 0 nil] [nil nil ((#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9119) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1)) ((9119 . 9120)) (25733 17370 566175 554000) 0 nil])
([nil nil ((9135 . 9137) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 9134) (undo-tree-id4743 . -2) (undo-tree-id4744 . -2) (undo-tree-id4745 . -2) (undo-tree-id4746 . -2) (undo-tree-id4747 . -2) (undo-tree-id4748 . -2) (undo-tree-id4749 . -2) (undo-tree-id4750 . -2) (undo-tree-id4751 . -2) (undo-tree-id4752 . -2) (undo-tree-id4753 . -2) (9136 . 9137) (9133 . 9136) 9132) nil (25733 17411 606193 330000) 0 nil])
nil
([nil nil ((#("  
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9135) (undo-tree-id4709 . 1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -2) (undo-tree-id4712 . -2) (undo-tree-id4713 . -2) (undo-tree-id4714 . -2) (undo-tree-id4715 . -2) (undo-tree-id4716 . -2) (undo-tree-id4717 . -2) (undo-tree-id4718 . -2) (undo-tree-id4719 . -2) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) 9136) nil (25733 17411 606184 997000) 0 nil])
([nil nil ((#("  (UN DEUX TROIS QUATRE CINQ)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 3 28 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28 29 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 29 30 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9135) (undo-tree-id4680 . 30) (undo-tree-id4681 . -2) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -2) (undo-tree-id4691 . -2) (undo-tree-id4692 . -2) (undo-tree-id4693 . -2) (undo-tree-id4694 . -2) (undo-tree-id4695 . -2) (undo-tree-id4696 . 28) (undo-tree-id4697 . -3) (undo-tree-id4698 . 2) (undo-tree-id4699 . -29) (undo-tree-id4700 . -2) (undo-tree-id4701 . -2) (undo-tree-id4702 . -2) (undo-tree-id4703 . -2) (undo-tree-id4704 . -2) (undo-tree-id4705 . -2) (undo-tree-id4706 . -2) (undo-tree-id4707 . -2) (undo-tree-id4708 . -2) 9137) nil (25733 17411 606162 203000) 0 nil])
([nil nil ((#("  We can create a French–English dictionary from the English–French one by
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 75 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9135) (undo-tree-id4662 . 75) (undo-tree-id4663 . -2) (undo-tree-id4664 . -2) (undo-tree-id4665 . -2) (undo-tree-id4666 . -2) (undo-tree-id4667 . -2) (undo-tree-id4668 . -2) (undo-tree-id4669 . -2) (undo-tree-id4670 . -2) (undo-tree-id4671 . -2) (undo-tree-id4672 . -2) (undo-tree-id4673 . -2) (undo-tree-id4674 . -2) (undo-tree-id4675 . -2) (undo-tree-id4676 . -2) (undo-tree-id4677 . -2) (undo-tree-id4678 . -2) (undo-tree-id4679 . -2) 9137) nil (25733 17411 606143 189000) 0 nil])
([nil nil ((#("  reversing each table element:
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 32 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9135) (undo-tree-id4644 . 32) (undo-tree-id4645 . -2) (undo-tree-id4646 . -2) (undo-tree-id4647 . -2) (undo-tree-id4648 . -2) (undo-tree-id4649 . -2) (undo-tree-id4650 . -2) (undo-tree-id4651 . -2) (undo-tree-id4652 . -2) (undo-tree-id4653 . -2) (undo-tree-id4654 . -2) (undo-tree-id4655 . -2) (undo-tree-id4656 . -2) (undo-tree-id4657 . -2) (undo-tree-id4658 . -2) (undo-tree-id4659 . -2) (undo-tree-id4660 . -2) (undo-tree-id4661 . -2) 9137) nil (25733 17411 606130 140000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9137) (undo-tree-id4642 . 1) (undo-tree-id4643 . -1)) nil (25733 17411 606116 537000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9137)) nil (25733 17411 606112 950000) 0 nil])
([nil nil ((9146 . 9147) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9146)) nil (25733 17411 606111 358000) 0 nil])
([nil nil ((#("  ((UN ONE)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 3 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 4 10 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10 11 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 11 12 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9162) (undo-tree-id4622 . -10) (undo-tree-id4623 . -10) (undo-tree-id4624 . -10) (undo-tree-id4625 . -10) (undo-tree-id4626 . -10) (undo-tree-id4627 . -10) (undo-tree-id4628 . -10) (undo-tree-id4629 . 2) (undo-tree-id4630 . -11) (undo-tree-id4631 . 9) (undo-tree-id4632 . -4) (undo-tree-id4633 . -10) (undo-tree-id4634 . -10) (undo-tree-id4635 . -10) (undo-tree-id4636 . -10) (undo-tree-id4637 . -10) (undo-tree-id4638 . -10) (undo-tree-id4639 . -10) (undo-tree-id4640 . -10) (undo-tree-id4641 . -10) 9172) nil (25733 17411 606108 971000) 0 nil])
([nil nil ((#("  (DEUX TWO)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 3 11 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11 12 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 12 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9162) (undo-tree-id4605 . -10) (undo-tree-id4606 . -10) (undo-tree-id4607 . -10) (undo-tree-id4608 . -10) (undo-tree-id4609 . -10) (undo-tree-id4610 . -10) (undo-tree-id4611 . -10) (undo-tree-id4612 . -10) (undo-tree-id4613 . -10) (undo-tree-id4614 . -10) (undo-tree-id4615 . -10) (undo-tree-id4616 . -10) (undo-tree-id4617 . -10) (undo-tree-id4618 . -10) (undo-tree-id4619 . -10) (undo-tree-id4620 . -10) (undo-tree-id4621 . -10) 9172) nil (25733 17411 606085 29000) 0 nil])
([nil nil ((#("  (TROIS THREE)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 3 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 15 16 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9162) (undo-tree-id4588 . -10) (undo-tree-id4589 . -10) (undo-tree-id4590 . -10) (undo-tree-id4591 . -10) (undo-tree-id4592 . -10) (undo-tree-id4593 . -10) (undo-tree-id4594 . -10) (undo-tree-id4595 . -10) (undo-tree-id4596 . -10) (undo-tree-id4597 . -10) (undo-tree-id4598 . -10) (undo-tree-id4599 . -10) (undo-tree-id4600 . -10) (undo-tree-id4601 . -10) (undo-tree-id4602 . -10) (undo-tree-id4603 . -10) (undo-tree-id4604 . -10) 9172) nil (25733 17411 606072 191000) 0 nil])
([nil nil ((#("  (QUATRE FOUR)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 3 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 15 16 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9162) (undo-tree-id4571 . -10) (undo-tree-id4572 . -10) (undo-tree-id4573 . -10) (undo-tree-id4574 . -10) (undo-tree-id4575 . -10) (undo-tree-id4576 . -10) (undo-tree-id4577 . -10) (undo-tree-id4578 . -10) (undo-tree-id4579 . -10) (undo-tree-id4580 . -10) (undo-tree-id4581 . -10) (undo-tree-id4582 . -10) (undo-tree-id4583 . -10) (undo-tree-id4584 . -10) (undo-tree-id4585 . -10) (undo-tree-id4586 . -10) (undo-tree-id4587 . -10) 9172) nil (25733 17411 606058 282000) 0 nil])
([nil nil ((#("  (CINQ FIVE))
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 3 12 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 13 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 14 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9162) (undo-tree-id4554 . -10) (undo-tree-id4555 . -10) (undo-tree-id4556 . -10) (undo-tree-id4557 . -10) (undo-tree-id4558 . -10) (undo-tree-id4559 . -10) (undo-tree-id4560 . -10) (undo-tree-id4561 . -10) (undo-tree-id4562 . -10) (undo-tree-id4563 . -10) (undo-tree-id4564 . -10) (undo-tree-id4565 . -10) (undo-tree-id4566 . -10) (undo-tree-id4567 . -10) (undo-tree-id4568 . -10) (undo-tree-id4569 . -10) (undo-tree-id4570 . -10) 9172) nil (25733 17411 605672 13000) 0 nil])
([nil nil ((#("  Given a function TRANSLATE, defined using ASSOC, we can translate a
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4 32 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32 70 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9162) (undo-tree-id4537 . -10) (undo-tree-id4538 . -10) (undo-tree-id4539 . -10) (undo-tree-id4540 . -10) (undo-tree-id4541 . -10) (undo-tree-id4542 . -10) (undo-tree-id4543 . -10) (undo-tree-id4544 . -10) (undo-tree-id4545 . -10) (undo-tree-id4546 . -10) (undo-tree-id4547 . -10) (undo-tree-id4548 . -10) (undo-tree-id4549 . -10) (undo-tree-id4550 . -10) (undo-tree-id4551 . -10) (undo-tree-id4552 . -10) (undo-tree-id4553 . -10) 9172) nil (25733 17411 605659 895000) 0 nil])
([nil nil ((#("  string of English digits into a string of French ones:
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 35 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 35 42 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42 43 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 43 44 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 44 45 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 45 46 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46 47 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47 57 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9162) (undo-tree-id4520 . -10) (undo-tree-id4521 . -10) (undo-tree-id4522 . -10) (undo-tree-id4523 . -10) (undo-tree-id4524 . -10) (undo-tree-id4525 . -10) (undo-tree-id4526 . -10) (undo-tree-id4527 . -10) (undo-tree-id4528 . -10) (undo-tree-id4529 . -10) (undo-tree-id4530 . -10) (undo-tree-id4531 . -10) (undo-tree-id4532 . -10) (undo-tree-id4533 . -10) (undo-tree-id4534 . -10) (undo-tree-id4535 . -10) (undo-tree-id4536 . -10) 9172) nil (25733 17411 605648 124000) 0 nil])
([nil nil ((9163 . 9165) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 9162) (undo-tree-id4509 . -2) (undo-tree-id4510 . -2) (undo-tree-id4511 . -2) (undo-tree-id4512 . -2) (undo-tree-id4513 . -2) (undo-tree-id4514 . -2) (undo-tree-id4515 . -2) (undo-tree-id4516 . -2) (undo-tree-id4517 . -2) (undo-tree-id4518 . -2) (undo-tree-id4519 . -2) (9164 . 9165) (9161 . 9164) 9145) nil (25733 17411 605634 781000) 0 nil])
([nil nil ((9216 . 9218) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 9215) (undo-tree-id4469 . -2) (undo-tree-id4470 . -2) (undo-tree-id4471 . -2) (undo-tree-id4472 . -2) (undo-tree-id4473 . -2) (undo-tree-id4474 . -2) (undo-tree-id4475 . -2) (undo-tree-id4476 . -2) (undo-tree-id4477 . -2) (undo-tree-id4478 . -2) (undo-tree-id4479 . -2) (9217 . 9218) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9163) (undo-tree-id4480 . -2) (undo-tree-id4481 . -2) (undo-tree-id4482 . -2) (undo-tree-id4483 . -2) (undo-tree-id4484 . -2) (undo-tree-id4485 . -2) (undo-tree-id4486 . -2) (undo-tree-id4487 . -2) (undo-tree-id4488 . -2) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) 8972 (9216 . 9219) 9191) nil (25733 17411 605623 500000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9220) (undo-tree-id4468 . -1)) nil (25733 17411 605590 907000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9220) (undo-tree-id4466 . 1) (undo-tree-id4467 . -1)) nil (25733 17411 605588 543000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9220)) nil (25733 17411 605490 511000) 0 nil])
([nil nil ((8976 . 8977) (8988 . 8989) (9009 . 9010) (9020 . 9021) (9046 . 9047) (9060 . 9061) (9082 . 9083) (9110 . 9111) (9135 . 9136) (9189 . 9190) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9216) (undo-tree-id4761 . -1) (9219 . 9220) (9268 . 9269) 8972 (t 25733 17411 691437 458000)) nil (25733 17449 836192 995000) 0 nil])
([nil nil ((9199 . 9200) 8972) nil (25733 17449 836121 644000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9280) 8972) nil (25733 17449 836120 410000) 0 nil])
([nil nil ((9239 . 9240) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9239)) nil (25733 17449 836118 823000) 0 nil])
([nil nil ((9250 . 9251) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9250)) nil (25733 17449 836113 743000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -9278) (undo-tree-id4762 . -2) (undo-tree-id4763 . -2) (undo-tree-id4764 . -2) (undo-tree-id4765 . -2) (undo-tree-id4766 . -2) (undo-tree-id4767 . -2) (undo-tree-id4768 . -2) (undo-tree-id4769 . -2) (undo-tree-id4770 . -2) (undo-tree-id4771 . -2) (undo-tree-id4772 . -2) (undo-tree-id4773 . -2) (undo-tree-id4774 . -2) (undo-tree-id4775 . -2) (undo-tree-id4776 . -2) (undo-tree-id4777 . -2) (undo-tree-id4778 . -2) (undo-tree-id4779 . -2) (undo-tree-id4780 . -2) (undo-tree-id4781 . -2) (undo-tree-id4782 . -2) (undo-tree-id4783 . -2) (undo-tree-id4784 . -2) (undo-tree-id4785 . -2) 9280 (9277 . 9280) (t 25733 17449 848068 870000) 9271) nil (25733 17461 394262 211000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9114) (undo-tree-id4818 . -1) (t 25733 17461 408259 688000)) nil (25733 17491 29123 684000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9141) (undo-tree-id4817 . -1)) nil (25733 17491 29121 312000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9169) (undo-tree-id4816 . -1)) nil (25733 17491 29119 870000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9223) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1)) nil (25733 17491 29118 439000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9223) (undo-tree-id4813 . -1)) nil (25733 17491 29116 257000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9273) (undo-tree-id4812 . 1)) nil (25733 17491 29114 766000) 0 nil])
([nil nil ((#("   " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8974) 8972) nil (25733 17491 29113 144000) 0 nil])
([nil nil ((8991 . 8994) 8972) nil (25733 17491 29112 378000) 0 nil])
([nil nil ((9012 . 9015) 8972) nil (25733 17491 29111 613000) 0 nil])
([nil nil ((9033 . 9036) 8972) nil (25733 17491 29110 911000) 0 nil])
([nil nil ((9057 . 9060) 8972) nil (25733 17491 29110 151000) 0 nil])
([nil nil ((9081 . 9084) 8972) nil (25733 17491 29109 87000) 0 nil])
([nil nil ((9098 . 9100)) nil (25733 17491 29108 258000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9098) (undo-tree-id4786 . -2) (undo-tree-id4787 . -2) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9102) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) 8972) nil (25733 17491 29106 66000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9127) 8972) nil (25733 17491 29079 671000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9153) 8972) nil (25733 17491 29074 833000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9645 . 9646) (nil fontified nil 9633 . 9646) (nil fontified nil 9619 . 9633) (nil fontified nil 9586 . 9619) (nil fontified nil 9548 . 9586) (nil fontified nil 9476 . 9548) (nil fontified nil 9405 . 9476) (nil fontified nil 9385 . 9405) (9385 . 9646) 9384 (t 25733 17491 48747 986000)) nil (25733 17616 379759 507000) 0 nil])
([nil nil (9645) nil (25733 17616 379756 766000) 0 nil])
([nil nil ((9384 . 9385)) nil (25733 17616 379755 804000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 9385) (undo-tree-id4970 . -1) (undo-tree-id4971 . 1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1)) nil (25733 17616 379754 168000) 0 nil])
([nil nil ((#("Since lambda expressions are functions, they can be passed directly to
" 0 71 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9405) (undo-tree-id4959 . -2) (undo-tree-id4960 . -71) (undo-tree-id4961 . -2) (undo-tree-id4962 . -2) (undo-tree-id4963 . -2) (undo-tree-id4964 . -2) (undo-tree-id4965 . -2) (undo-tree-id4966 . -2) (undo-tree-id4967 . -2) (undo-tree-id4968 . -2) (undo-tree-id4969 . -2) 9407) nil (25733 17616 379733 824000) 0 nil])
([nil nil ((#("MAPCAR by quoting them with #’. This saves you the trouble of writing a
" 0 71 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 71 72 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9405) (undo-tree-id4940 . -2) (undo-tree-id4941 . -72) (undo-tree-id4942 . -71) (undo-tree-id4943 . -2) (undo-tree-id4944 . -2) (undo-tree-id4945 . -2) (undo-tree-id4946 . -2) (undo-tree-id4947 . -2) (undo-tree-id4948 . -2) (undo-tree-id4949 . -2) (undo-tree-id4950 . -2) (undo-tree-id4951 . -2) (undo-tree-id4952 . -2) (undo-tree-id4953 . -2) (undo-tree-id4954 . -2) (undo-tree-id4955 . -2) (undo-tree-id4956 . -2) (undo-tree-id4957 . -2) (undo-tree-id4958 . -2) 9407) nil (25733 17616 379724 902000) 0 nil])
([nil nil ((#("separate DEFUN before calling MAPCAR.
" 0 37 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37 38 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9405) (undo-tree-id4921 . -2) (undo-tree-id4922 . -38) (undo-tree-id4923 . -37) (undo-tree-id4924 . -2) (undo-tree-id4925 . -2) (undo-tree-id4926 . -2) (undo-tree-id4927 . -2) (undo-tree-id4928 . -2) (undo-tree-id4929 . -2) (undo-tree-id4930 . -2) (undo-tree-id4931 . -2) (undo-tree-id4932 . -2) (undo-tree-id4933 . -2) (undo-tree-id4934 . -2) (undo-tree-id4935 . -2) (undo-tree-id4936 . -2) (undo-tree-id4937 . -2) (undo-tree-id4938 . -2) (undo-tree-id4939 . -2) 9407) nil (25733 17616 379710 883000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9405) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . 1) (undo-tree-id4920 . -1)) nil (25733 17616 379696 646000) 0 nil])
([nil nil ((9415 . 9416) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9415) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1)) nil (25733 17616 379690 658000) 0 nil])
([nil nil ((9436 . 9437) (#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -9436) (undo-tree-id4904 . -1) 9428) nil (25733 17616 379685 588000) 0 nil])
([nil nil ((#("(1 4 9 16 25)" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 1 12 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block))) . 9437) (undo-tree-id4893 . -12) (undo-tree-id4894 . -12) (undo-tree-id4895 . -12) (undo-tree-id4896 . -12) (undo-tree-id4897 . -12) (undo-tree-id4898 . -12) (undo-tree-id4899 . -12) (undo-tree-id4900 . 13) (undo-tree-id4901 . -1) (undo-tree-id4902 . 1) (undo-tree-id4903 . -13)) nil (25733 17616 379683 329000) 0 nil])
([nil nil ((9436 . 9437) (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9436) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -9437) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) 9436) nil (25733 17616 379672 344000) 0 nil])
([nil nil ((9437 . 9438) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9437)) nil (25733 17616 379611 951000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -9453) (undo-tree-id4990 . -2) (undo-tree-id4991 . -2) (undo-tree-id4992 . -2) (undo-tree-id4993 . -2) (undo-tree-id4994 . -2) (undo-tree-id4995 . -2) (undo-tree-id4996 . -2) (undo-tree-id4997 . -2) (undo-tree-id4998 . -2) (undo-tree-id4999 . -2) (undo-tree-id5000 . -2) (undo-tree-id5001 . -2) (undo-tree-id5002 . -2) (undo-tree-id5003 . -2) (undo-tree-id5004 . -2) (undo-tree-id5005 . -2) (undo-tree-id5006 . -2) (undo-tree-id5007 . -2) (undo-tree-id5008 . -2) (undo-tree-id5009 . -2) (undo-tree-id5010 . -2) (undo-tree-id5011 . -2) (undo-tree-id5012 . -2) (undo-tree-id5013 . -2) 9455 (9384 . 9385) (9405 . 9406) (9451 . 9452) 9383 (9450 . 9452) (t 25733 17616 402799 319000) 9406) nil (25733 17719 673875 123000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9497 . 9498) (nil fontified nil 9453 . 9498) (9453 . 9498)) nil (25733 17719 673857 142000) 0 nil])
([nil nil ((9385 . 9387) (9406 . 9407) (9408 . 9409) (9453 . 9455) 9383) nil (25733 17719 673856 46000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 9385) 9383) nil (25733 17719 673854 659000) 0 nil])
([nil nil ((#("  " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9408) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) 9383) nil (25733 17719 673853 124000) 0 nil])
([nil nil ((9464 . 9465) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9464)) nil (25733 17719 673838 780000) 0 nil])
([nil nil ((9487 . 9488) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9487)) nil (25733 17719 673833 310000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -9501) (undo-tree-id5014 . -2) (undo-tree-id5015 . -2) (undo-tree-id5016 . -2) (undo-tree-id5017 . -2) (undo-tree-id5018 . -2) (undo-tree-id5019 . -2) (undo-tree-id5020 . -2) (undo-tree-id5021 . -2) (undo-tree-id5022 . -2) (undo-tree-id5023 . -2) (undo-tree-id5024 . -2) (undo-tree-id5025 . -2) (undo-tree-id5026 . -2) (undo-tree-id5027 . -2) (undo-tree-id5028 . -2) (undo-tree-id5029 . -2) (undo-tree-id5030 . -2) (undo-tree-id5031 . -2) (undo-tree-id5032 . -2) (undo-tree-id5033 . -2) (undo-tree-id5034 . -2) (undo-tree-id5035 . -2) (undo-tree-id5036 . -2) (undo-tree-id5037 . -2) 9503 (9500 . 9503) (t 25733 17719 736476 117000) 9495) nil (25733 17724 169080 29000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9662 . 9663) (nil fontified nil 9648 . 9663) (nil fontified nil 9614 . 9648) (nil fontified nil 9612 . 9614) (nil fontified nil 9578 . 9612) (9578 . 9663) 9577 (t 25733 17724 180547 987000)) nil (25733 17784 175875 146000) 0 nil])
([nil nil ((#("7
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 9612)) nil (25733 17784 175873 470000) 0 nil])
([nil nil ((#("’(2 4 6 7 8 9)) 
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 2 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 14 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 15 17 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block))) . 9646) (undo-tree-id5045 . -14) (undo-tree-id5046 . -14) (undo-tree-id5047 . -15) (undo-tree-id5048 . -14) (undo-tree-id5049 . -14) (undo-tree-id5050 . -14) (undo-tree-id5051 . -14) (undo-tree-id5052 . -14) (undo-tree-id5053 . -14) (undo-tree-id5054 . -14) (undo-tree-id5055 . -14) (undo-tree-id5056 . -14) (undo-tree-id5057 . -14) (undo-tree-id5058 . -14) (undo-tree-id5059 . -14) (undo-tree-id5060 . -14) (undo-tree-id5061 . -14) (undo-tree-id5062 . -14) (undo-tree-id5063 . -14) (undo-tree-id5064 . -14) (undo-tree-id5065 . -14) (undo-tree-id5066 . -14) (undo-tree-id5067 . -14) (undo-tree-id5068 . -14) (undo-tree-id5069 . -14) (undo-tree-id5070 . -14) (undo-tree-id5071 . -14) (undo-tree-id5072 . -14)) nil (25733 17784 175871 847000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 9577) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1)) nil (25733 17784 175852 498000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9577) (undo-tree-id5040 . 1) (undo-tree-id5041 . -1)) nil (25733 17784 175849 425000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9610) (undo-tree-id5038 . 1) (undo-tree-id5039 . -1)) nil (25733 17784 175847 91000) 0 nil])
([nil nil ((9588 . 9589) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9588)) nil (25733 17784 175837 654000) 0 nil])
([nil nil ((9594 . 9595) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9594)) nil (25733 17784 175835 937000) 0 nil])
([nil nil ((9621 . 9622) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9621)) nil (25733 17784 175830 858000) 0 nil])
([nil nil ((9578 . 9579) (9610 . 9611) (9643 . 9653) 9577 (9642 . 9644) (t 25733 17784 193516 723000)) nil (25733 17829 498417 976000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9670 . 9671) (nil fontified nil 9656 . 9671) (9656 . 9671) 9655) nil (25733 17829 498734 671000) 0 nil])
([nil nil ((9656 . 9657) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                 " 0 6 (face org-indent) 6 17 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9656) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1)) nil (25733 17832 1640 324000) 0 nil] [nil nil ((nil rear-nonsticky nil 9671 . 9672) (nil fontified nil 9657 . 9672) (9657 . 9672) 9656) ((#("’(2 4 6 7 8 9))" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                 " 0 6 (face org-indent) 6 17 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                 " 0 6 (face org-indent) 6 17 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) help-echo nil src-block t) 2 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                 " 0 6 (face org-indent) 6 17 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 13 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                 " 0 6 (face org-indent) 6 17 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) help-echo nil src-block t) 14 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                 " 0 6 (face org-indent) 6 17 (face org-indent)) fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block) help-echo nil src-block t)) . 9657) (undo-tree-id5073 . -14) (undo-tree-id5074 . -14) (undo-tree-id5075 . 1) (undo-tree-id5076 . -15) (undo-tree-id5077 . -14) (undo-tree-id5078 . -14) (nil rear-nonsticky t 9671 . 9672)) (25733 17829 498410 333000) 0 nil])
([nil nil ((9671 . 9674) (t 25733 17832 18286 510000)) nil (25733 17855 760110 116000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 9717) (t 25733 17855 774668 223000)) nil (25733 17866 465932 23000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 1252) (t 25733 17866 482840 144000)) nil (25733 28639 395516 772000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8580)) nil (25733 28639 395514 176000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 10000)) nil (25733 28639 395510 830000) 0 nil])
([nil nil ((#(" 
" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)))) . 10014)) nil (25733 28639 395498 987000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9976 . 9977) (nil fontified nil 9970 . 9977) (nil fontified nil 9943 . 9970) (nil fontified nil 9916 . 9943) (nil fontified nil 9888 . 9916) (nil fontified nil 9832 . 9888) (nil fontified nil 9755 . 9832) (9755 . 9977) 9754 (t 25733 28639 467945 811000)) nil (25733 28767 611200 420000) 0 nil])
([nil nil ((#("  ASSOC searches for a table entry with a specified key. We can write a simple
version of ASSOC that uses FIND-IF to search the table.
" 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 1 2 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 2 79 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 79 135 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 9753) (undo-tree-id5156 . -85) (undo-tree-id5157 . -6) (undo-tree-id5158 . -85) (undo-tree-id5159 . -85) (undo-tree-id5160 . -2) (undo-tree-id5161 . -2) (undo-tree-id5162 . -2) (undo-tree-id5163 . -2) (undo-tree-id5164 . -2) (undo-tree-id5165 . -2) (undo-tree-id5166 . -2) (undo-tree-id5167 . -2) (undo-tree-id5168 . -2) (undo-tree-id5169 . -2) (undo-tree-id5170 . -2) (undo-tree-id5171 . -2) (undo-tree-id5172 . -2) (undo-tree-id5173 . -2) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -2) (undo-tree-id5185 . -1) (undo-tree-id5186 . -85) (undo-tree-id5187 . -6) (undo-tree-id5188 . -135) (undo-tree-id5189 . -6) (undo-tree-id5190 . -85) (undo-tree-id5191 . -6) (undo-tree-id5192 . -6) (undo-tree-id5193 . -6) (undo-tree-id5194 . -6) (undo-tree-id5195 . -6) (undo-tree-id5196 . -6) (undo-tree-id5197 . -6) (undo-tree-id5198 . -6) (undo-tree-id5199 . -6) (undo-tree-id5200 . -6) (undo-tree-id5201 . -6) (undo-tree-id5202 . -6) (undo-tree-id5203 . -6) (undo-tree-id5204 . -85) (undo-tree-id5205 . -85) 9838) nil (25733 28767 611194 590000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9716 . 9717) (#("
" 0 1 (font-lock-fontified t font-lock-multiline t face (org-block) src-block t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -9849) (9714 . 9850) 9694) nil (25733 28767 612388 436000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . -9715) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) 9716 (#(" " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) rear-nonsticky t)) . -9716) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) 9717) nil (25733 28775 412332 89000) 0 nil] [nil nil ((#("
" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . -9714) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (#(" " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . -9715) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (#(" " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) rear-nonsticky t)) . -9716) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) 9717) ((9714 . 9717)) (25733 28767 611078 644000) 0 nil])
([nil nil ((9886 . 9888) (9914 . 9916) (9941 . 9943) (9968 . 9970) 9886) nil (25733 28775 412168 909000) 0 nil])
nil
([nil nil ((9918 . 9920) 9886) nil (25733 28775 412167 617000) 0 nil])
([nil nil ((9949 . 9964) 9886) nil (25733 28775 412166 189000) 0 nil])
([nil nil ((9993 . 10006) 9886) nil (25733 28775 412160 644000) 0 nil])
([nil nil ((9930 . 9931) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9930) (t 25733 28775 427753 5000)) nil (25733 28782 877879 610000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -9886) (undo-tree-id5327 . -2) (undo-tree-id5328 . -2) (undo-tree-id5329 . -2) (undo-tree-id5330 . -2) (undo-tree-id5331 . -2) (undo-tree-id5332 . -2) (undo-tree-id5333 . -2) (undo-tree-id5334 . -2) (undo-tree-id5335 . -2) (undo-tree-id5336 . -2) (undo-tree-id5337 . -2) (undo-tree-id5338 . -2) (undo-tree-id5339 . -2) (undo-tree-id5340 . -2) (undo-tree-id5341 . -2) (undo-tree-id5342 . -2) (undo-tree-id5343 . -2) (undo-tree-id5344 . -2) (undo-tree-id5345 . -2) (undo-tree-id5346 . -2) (undo-tree-id5347 . -2) (undo-tree-id5348 . -2) (undo-tree-id5349 . -2) (undo-tree-id5350 . -2) 9888 (9885 . 9888) (t 25733 28782 895960 825000) 9870) nil (25733 28873 435245 852000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -10015) (undo-tree-id5316 . -2) (undo-tree-id5317 . -2) (undo-tree-id5318 . -2) (undo-tree-id5319 . -2) (undo-tree-id5320 . -2) (undo-tree-id5321 . -2) (undo-tree-id5322 . -2) (undo-tree-id5323 . -2) (undo-tree-id5324 . -2) (undo-tree-id5325 . -2) (undo-tree-id5326 . -2) 10017 (10014 . 10017) 9992) nil (25733 28873 435225 881000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -9965) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) 9966 (9965 . 9966)) nil (25733 28873 435211 867000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10035 . 10036) (nil fontified nil 10015 . 10036) (10015 . 10036) (t 25733 28873 458471 727000)) nil (25733 28923 909982 875000) 0 nil])
([nil nil ((9889 . 9891) (9917 . 9918) (9921 . 9922) (9948 . 9949) (9965 . 9966) (9992 . 9994) (10015 . 10017) 9886 (10036 . 10039) (#("o" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -10036) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) 10037 (10036 . 10037)) nil (25733 28923 909979 800000) 0 nil])
([nil nil ((10035 . 10036) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10035)) nil (25733 28923 909944 18000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 10047) 9886 (t 25733 28923 931864 388000)) nil (25733 28933 73151 716000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9889) 9886) nil (25733 28933 73150 220000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9921) 9886) nil (25733 28933 73149 60000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                         " 0 6 (face org-indent) 6 25 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                         " 0 6 (face org-indent) 6 25 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9965) 9886) nil (25733 28933 73148 14000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10005) (undo-tree-id5387 . -4) (undo-tree-id5388 . -4) (undo-tree-id5389 . -4) (undo-tree-id5390 . -4) (undo-tree-id5391 . -4) 9886) nil (25733 28933 73146 421000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -10013) (undo-tree-id5376 . -2) (undo-tree-id5377 . -2) (undo-tree-id5378 . -2) (undo-tree-id5379 . -2) (undo-tree-id5380 . -2) (undo-tree-id5381 . -2) (undo-tree-id5382 . -2) (undo-tree-id5383 . -2) (undo-tree-id5384 . -2) (undo-tree-id5385 . -2) (undo-tree-id5386 . -2) 10015 (10012 . 10015) 10005) nil (25733 28933 73138 97000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -10039) (undo-tree-id5392 . -2) (undo-tree-id5393 . -2) (undo-tree-id5394 . -2) (undo-tree-id5395 . -2) (undo-tree-id5396 . -2) (undo-tree-id5397 . -2) (undo-tree-id5398 . -2) (undo-tree-id5399 . -2) (undo-tree-id5400 . -2) (undo-tree-id5401 . -2) (undo-tree-id5402 . -2) (undo-tree-id5403 . -2) (undo-tree-id5404 . -2) (undo-tree-id5405 . -2) (undo-tree-id5406 . -2) (undo-tree-id5407 . -2) (undo-tree-id5408 . -2) (undo-tree-id5409 . -2) (undo-tree-id5410 . -2) (undo-tree-id5411 . -2) (undo-tree-id5412 . -2) (undo-tree-id5413 . -2) (undo-tree-id5414 . -2) (undo-tree-id5415 . -2) 10041 (10038 . 10041) (t 25733 28933 88116 558000) 10038) nil (25733 29378 525154 702000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block))) . 10039) (undo-tree-id5416 . 1) (t 25733 29378 540257 59000)) nil (25733 29714 299686 979000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10450 . 10451) (nil fontified nil 10450 . 10451) (nil fontified nil 10448 . 10450) (nil fontified nil 10430 . 10448) (nil fontified nil 10406 . 10430) (nil fontified nil 10404 . 10406) (nil fontified nil 10382 . 10404) (nil fontified nil 10363 . 10382) (nil fontified nil 10295 . 10363) (nil fontified nil 10292 . 10295) (nil fontified nil 10290 . 10292) (nil fontified nil 10271 . 10290) (nil fontified nil 10251 . 10271) (nil fontified nil 10224 . 10251) (nil fontified nil 10222 . 10224) (nil fontified nil 10200 . 10222) (10200 . 10451) 10199) nil (25733 29760 287449 215000) 0 nil] [nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -10014) (undo-tree-id5417 . -2) (undo-tree-id5418 . -2) (undo-tree-id5420 . -2) (undo-tree-id5422 . -2) (undo-tree-id5424 . -2) (undo-tree-id5426 . -2) (undo-tree-id5428 . -2) (undo-tree-id5430 . -2) (undo-tree-id5432 . -2) (undo-tree-id5434 . -2) (undo-tree-id5436 . -2) (undo-tree-id5438 . -2) (undo-tree-id5440 . -2) 10016 (10013 . 10016) (t 25733 29383 272385 33000) 10013) ((#("
  " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 3 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 10013) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (10014 . 10016) (t 25733 29423 409469 893000)) (25733 29713 752774 775000) 0 nil])
([nil nil ((#("  " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 1 2 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil)) . 10198) (undo-tree-id5455 . -2) (undo-tree-id5456 . -2) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -2) (undo-tree-id5486 . -2) (undo-tree-id5487 . -2) (undo-tree-id5488 . -2) (undo-tree-id5489 . -2) (undo-tree-id5490 . -2) (undo-tree-id5491 . -2) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -2) (undo-tree-id5503 . -2) (undo-tree-id5504 . -1)) nil (25733 29760 287444 205000) 0 nil])
([nil nil ((10135 . 10136) (t 25733 29423 409469 893000) 10055) ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 10135) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1)) (25733 29713 752292 248000) 0 nil])
([nil nil ((10207 . 10208) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10207)) nil (25733 29760 287410 304000) 0 nil])
nil
([nil nil ((10210 . 10211) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10210)) nil (25733 29760 287409 208000) 0 nil])
([nil nil ((#("6
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10220) (undo-tree-id5454 . -2)) nil (25733 29760 287718 728000) 0 nil])
([nil nil ((10229 . 10230) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10229)) nil (25733 29775 392654 496000) 0 nil] [nil nil ((#("(reduce #’+ ’(10 9 8 7 6))
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 1 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 14 24 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24 25 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 25 26 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 26 27 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10220) (undo-tree-id5448 . -27) (undo-tree-id5449 . -26) (undo-tree-id5450 . 27) (undo-tree-id5451 . -1) (undo-tree-id5452 . 2) (undo-tree-id5453 . -26)) ((10220 . 10247)) (25733 29760 287403 131000) 0 nil])
([nil nil ((10232 . 10233) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10232)) nil (25733 29793 216682 550000) 0 nil] [nil nil ((10232 . 10233) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10232)) ((10232 . 10233) (#("." 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 10232)) (25733 29775 392122 945000) 0 nil])
nil
([nil nil ((10256 . 10257) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10256) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1)) nil (25733 29793 216681 274000) 0 nil])
nil
([nil nil ((10259 . 10260) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10259)) nil (25733 29793 216674 439000) 0 nil])
([nil nil ((#("⇒5" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10264) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1)) nil (25733 29793 216993 153000) 0 nil])
([nil nil ((10274 . 10275) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10274) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1)) nil (25733 29814 732209 687000) 0 nil] [nil nil ((#("’+ nil)⇒0" 0 6 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 7 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 7 9 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10274) (undo-tree-id5505 . -3) (undo-tree-id5506 . -3) (undo-tree-id5507 . -3) (undo-tree-id5508 . -3) (undo-tree-id5509 . -3) (undo-tree-id5510 . -3) (undo-tree-id5511 . -3) (undo-tree-id5512 . -2) (undo-tree-id5513 . -2) (undo-tree-id5514 . -2) (undo-tree-id5515 . -2) (undo-tree-id5516 . -2) (undo-tree-id5517 . -2) (undo-tree-id5518 . -2) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1)) ((10274 . 10283)) (25733 29793 216663 268000) 0 nil])
([nil nil ((#("⇒0" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10281)) nil (25733 29814 732200 794000) 0 nil])
nil
([nil nil ((#("⇒
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10282)) nil (25733 29814 732199 577000) 0 nil])
([nil nil ((#("40
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10282) (undo-tree-id5616 . -2)) nil (25733 29814 732198 212000) 0 nil])
([nil nil ((#("Similarly, to multiply a bunch of numbers together, we use * as the
" 0 67 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 67 68 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10282) (undo-tree-id5615 . -67)) nil (25733 29814 732195 779000) 0 nil])
([nil nil ((#("reducing function:
" 0 18 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 18 19 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10282) (undo-tree-id5614 . -18)) nil (25733 29814 732193 361000) 0 nil])
([nil nil ((10291 . 10292) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10291) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1)) nil (25733 29814 732190 175000) 0 nil])
([nil nil ((10294 . 10295) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10294)) nil (25733 29814 732181 123000) 0 nil])
([nil nil ((#("⇒
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10304)) nil (25733 29814 732621 749000) 0 nil])
([nil nil ((10313 . 10314) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10313)) nil (25733 29827 163840 971000) 0 nil] [nil nil ((#("(reduce #’* ’(3 4 0 7))
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 1 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 14 21 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 21 22 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 22 23 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 23 24 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10304) (undo-tree-id5540 . -9) (undo-tree-id5541 . -23) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -2) (undo-tree-id5550 . -2) (undo-tree-id5551 . -2) (undo-tree-id5552 . -2) (undo-tree-id5553 . -2) (undo-tree-id5554 . -2) (undo-tree-id5555 . -2) (undo-tree-id5556 . -3) (undo-tree-id5557 . -3) (undo-tree-id5558 . -3) (undo-tree-id5559 . -3) (undo-tree-id5560 . -3) (undo-tree-id5561 . -3) (undo-tree-id5562 . -3) (undo-tree-id5563 . -4) (undo-tree-id5564 . -4) (undo-tree-id5565 . -4) (undo-tree-id5566 . -4) (undo-tree-id5567 . -4) (undo-tree-id5568 . -4) (undo-tree-id5569 . -4) (undo-tree-id5570 . -5) (undo-tree-id5571 . -5) (undo-tree-id5572 . -5) (undo-tree-id5573 . -5) (undo-tree-id5574 . -5) (undo-tree-id5575 . -5) (undo-tree-id5576 . -5) (undo-tree-id5577 . -6) (undo-tree-id5578 . -6) (undo-tree-id5579 . -6) (undo-tree-id5580 . -6) (undo-tree-id5581 . -6) (undo-tree-id5582 . -6) (undo-tree-id5583 . -6) (undo-tree-id5584 . -7) (undo-tree-id5585 . -7) (undo-tree-id5586 . -7) (undo-tree-id5587 . -7) (undo-tree-id5588 . -7) (undo-tree-id5589 . -7) (undo-tree-id5590 . -7) (undo-tree-id5591 . -8) (undo-tree-id5592 . -8) (undo-tree-id5593 . -8) (undo-tree-id5594 . -8) (undo-tree-id5595 . -8) (undo-tree-id5596 . -8) (undo-tree-id5597 . -8) (undo-tree-id5598 . -9) (undo-tree-id5599 . -9) (undo-tree-id5600 . -9) (undo-tree-id5601 . -9) (undo-tree-id5602 . -9) (undo-tree-id5603 . -9) (undo-tree-id5604 . -9) (undo-tree-id5605 . -9) (undo-tree-id5606 . -9) 10313) ((10304 . 10328)) (25733 29814 732168 997000) 0 nil])
([nil nil ((10316 . 10317) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10316)) nil (25733 29827 163837 541000) 0 nil])
nil
([nil nil ((10337 . 10338) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10337) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1)) nil (25733 29827 163834 432000) 0 nil])
([nil nil ((10340 . 10341) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10340)) nil (25733 29827 163811 551000) 0 nil])
([nil nil ((#("⇒
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 10346) (undo-tree-id5625 . -2)) nil (25733 29827 163806 358000) 0 nil])
([nil nil ((#("8
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 1 2 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block))) . 10346) (undo-tree-id5624 . -1)) nil (25733 29827 163791 661000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10474 . 10475) (nil fontified nil 10441 . 10475) (nil fontified nil 10439 . 10441) (nil fontified nil 10408 . 10439) (10408 . 10475) 10407 (t 25733 29827 234256 190000)) nil (25733 29893 440409 798000) 0 nil])
([nil nil ((#("T
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 10439) (undo-tree-id5667 . -2)) nil (25733 29893 440408 194000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10439) (undo-tree-id5665 . 1) (undo-tree-id5666 . -1)) nil (25733 29893 440406 753000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 10406) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1)) nil (25733 29893 440404 365000) 0 nil])
([nil nil ((10415 . 10416) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10415)) nil (25733 29893 440390 633000) 0 nil])
([nil nil ((10424 . 10425) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10424)) nil (25733 29893 440389 557000) 0 nil])
([nil nil ((10456 . 10457) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10456) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1)) nil (25733 29893 440387 863000) 0 nil])
([nil nil ((10447 . 10448) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10447) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1)) nil (25733 29893 440379 131000) 0 nil])
([nil nil ((10475 . 10477) (#("  " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 1 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 10474) (undo-tree-id5668 . -2) (undo-tree-id5669 . -2) (undo-tree-id5670 . -2) (undo-tree-id5671 . -2) (undo-tree-id5672 . -2) (undo-tree-id5673 . -2) (undo-tree-id5674 . -2) (undo-tree-id5675 . -2) (undo-tree-id5676 . -2) (undo-tree-id5677 . -2) (undo-tree-id5678 . -2) (undo-tree-id5679 . -2) (undo-tree-id5680 . -2) (undo-tree-id5681 . -2) (undo-tree-id5682 . -2) (undo-tree-id5683 . -2) (undo-tree-id5684 . -2) (undo-tree-id5685 . -2) (undo-tree-id5686 . -2) (undo-tree-id5687 . -2) (undo-tree-id5688 . -2) (undo-tree-id5689 . -2) (undo-tree-id5690 . -2) (undo-tree-id5691 . -2) (10476 . 10477) (10407 . 10408) (10438 . 10439) (10472 . 10473) 10406 (10471 . 10473) (t 25733 29893 507469 986000) 10447) nil (25733 29898 321954 525000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10902 . 10903) (nil fontified nil 10902 . 10903) (nil fontified nil 10860 . 10902) (nil fontified nil 10843 . 10860) (nil fontified nil 10770 . 10843) (nil fontified nil 10768 . 10770) (nil fontified nil 10746 . 10768) (nil fontified nil 10744 . 10746) (nil fontified nil 10723 . 10744) (nil fontified nil 10644 . 10723) (nil fontified nil 10571 . 10644) (nil fontified nil 10567 . 10571) (nil fontified nil 10520 . 10567) (nil fontified nil 10518 . 10520) (nil fontified nil 10474 . 10518) (10474 . 10903) (t 25733 29898 339033 311000)) nil (25733 30023 597762 224000) 0 nil])
([nil nil ((#("T
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 10518) (undo-tree-id6091 . -2)) nil (25733 30023 597759 408000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10518) (undo-tree-id6088 . 1) (undo-tree-id6089 . 1) (undo-tree-id6090 . -1)) nil (25733 30023 597757 849000) 0 nil])
([nil nil ((10408 . 10410) (10439 . 10441) (10474 . 10476) (10518 . 10520) (10564 . 10566) (10568 . 10570) (10641 . 10643) (10720 . 10722) (10741 . 10743) (10743 . 10745) (10765 . 10767) (10767 . 10769) (10840 . 10842) (10857 . 10859) (10899 . 10901) 10406) nil (25733 30023 597754 49000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 10931) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -2) (undo-tree-id6038 . -2) (undo-tree-id6039 . -2) (undo-tree-id6040 . -2) (undo-tree-id6041 . -2) (undo-tree-id6042 . -2) (undo-tree-id6043 . -2) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -2) (undo-tree-id6067 . -2) (undo-tree-id6068 . -2) (undo-tree-id6069 . -2) (undo-tree-id6070 . -2) (undo-tree-id6071 . -2) (undo-tree-id6072 . -2) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -2) 10406) nil (25733 30023 597747 649000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10443) 10406) nil (25733 30023 596687 187000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10408) 10406) nil (25733 30023 596685 998000) 0 nil])
([nil nil ((10484 . 10485) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10484)) nil (25733 30023 596684 899000) 0 nil])
([nil nil ((10506 . 10507) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10506)) nil (25733 30023 596683 790000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10522) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) 10406) nil (25733 30023 596682 343000) 0 nil])
([nil nil ((10530 . 10531) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10530) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1)) nil (25733 30023 596676 363000) 0 nil])
([nil nil ((10552 . 10553) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10552)) nil (25733 30023 596653 253000) 0 nil])
([nil nil ((#("  NIL
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 6 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10567) (undo-tree-id5965 . -2) (undo-tree-id5966 . -6) (undo-tree-id5967 . -2) (undo-tree-id5968 . -2) (undo-tree-id5969 . -2) (undo-tree-id5970 . -2) (undo-tree-id5971 . -2) (undo-tree-id5972 . -2) (undo-tree-id5973 . -2) (undo-tree-id5974 . -2) (undo-tree-id5975 . -2) (undo-tree-id5976 . -2) (undo-tree-id5977 . -2) (undo-tree-id5978 . -2) (undo-tree-id5979 . -2) (undo-tree-id5980 . -2) (undo-tree-id5981 . -2) (undo-tree-id5982 . -2) 10569) nil (25733 30023 596651 300000) 0 nil])
([nil nil ((#("  If EVERY is called with NIL as its second argument, it simply returns T,
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 74 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 74 75 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10567) (undo-tree-id5940 . -2) (undo-tree-id5941 . -75) (undo-tree-id5942 . -2) (undo-tree-id5943 . -2) (undo-tree-id5944 . -2) (undo-tree-id5945 . -2) (undo-tree-id5946 . -2) (undo-tree-id5947 . -2) (undo-tree-id5948 . -74) (undo-tree-id5949 . -2) (undo-tree-id5950 . -2) (undo-tree-id5951 . -2) (undo-tree-id5952 . -2) (undo-tree-id5953 . -2) (undo-tree-id5954 . -2) (undo-tree-id5955 . -2) (undo-tree-id5956 . -2) (undo-tree-id5957 . -2) (undo-tree-id5958 . -2) (undo-tree-id5959 . -2) (undo-tree-id5960 . -2) (undo-tree-id5961 . -2) (undo-tree-id5962 . -2) (undo-tree-id5963 . -2) (undo-tree-id5964 . -2) 10569) nil (25733 30023 596637 741000) 0 nil])
([nil nil ((#("  since the empty list has no elements that could fail to satisfy the predicate.
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 80 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 80 81 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10567) (undo-tree-id5921 . -2) (undo-tree-id5922 . -81) (undo-tree-id5923 . -80) (undo-tree-id5924 . -2) (undo-tree-id5925 . -2) (undo-tree-id5926 . -2) (undo-tree-id5927 . -2) (undo-tree-id5928 . -2) (undo-tree-id5929 . -2) (undo-tree-id5930 . -2) (undo-tree-id5931 . -2) (undo-tree-id5932 . -2) (undo-tree-id5933 . -2) (undo-tree-id5934 . -2) (undo-tree-id5935 . -2) (undo-tree-id5936 . -2) (undo-tree-id5937 . -2) (undo-tree-id5938 . -2) (undo-tree-id5939 . -2) 10569) nil (25733 30023 596617 376000) 0 nil])
([nil nil ((#("> " 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10569) (undo-tree-id5919 . 2) (undo-tree-id5920 . -1)) nil (25733 30023 596602 294000) 0 nil])
([nil nil ((10577 . 10578) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10577) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1)) nil (25733 30023 596599 789000) 0 nil])
([nil nil ((#("  T
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10588) (undo-tree-id5895 . -2) (undo-tree-id5896 . -4) (undo-tree-id5897 . -2) (undo-tree-id5898 . -2) (undo-tree-id5899 . -2) (undo-tree-id5900 . -2) (undo-tree-id5901 . -2) (undo-tree-id5902 . -2) (undo-tree-id5903 . -2) (undo-tree-id5904 . -2) (undo-tree-id5905 . -2) (undo-tree-id5906 . -2) (undo-tree-id5907 . -2) (undo-tree-id5908 . -2) (undo-tree-id5909 . -2) (undo-tree-id5910 . -2) (undo-tree-id5911 . -2) 10590) nil (25733 30023 596593 321000) 0 nil])
([nil nil ((#("> " 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10590) (undo-tree-id5893 . 2) (undo-tree-id5894 . -1)) nil (25733 30023 596579 291000) 0 nil])
([nil nil ((10598 . 10599) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10598) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1)) nil (25733 30023 596575 626000) 0 nil])
([nil nil ((#("  T
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10610) (undo-tree-id5840 . -2) (undo-tree-id5841 . -4) (undo-tree-id5842 . -2) (undo-tree-id5843 . -2) (undo-tree-id5844 . -2) (undo-tree-id5845 . -2) (undo-tree-id5846 . -2) (undo-tree-id5847 . -2) (undo-tree-id5848 . -2) (undo-tree-id5849 . -2) (undo-tree-id5850 . -2) (undo-tree-id5851 . -2) (undo-tree-id5852 . -2) (undo-tree-id5853 . -2) (undo-tree-id5854 . -2) (undo-tree-id5855 . -2) (undo-tree-id5856 . -2) 10612) nil (25733 30023 596407 883000) 0 nil])
([nil nil ((#("  EVERY can also operate on multiple lists, given a predicate that accepts
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 74 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 74 75 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10610) (undo-tree-id5821 . -2) (undo-tree-id5822 . -75) (undo-tree-id5823 . -74) (undo-tree-id5824 . -2) (undo-tree-id5825 . -2) (undo-tree-id5826 . -2) (undo-tree-id5827 . -2) (undo-tree-id5828 . -2) (undo-tree-id5829 . -2) (undo-tree-id5830 . -2) (undo-tree-id5831 . -2) (undo-tree-id5832 . -2) (undo-tree-id5833 . -2) (undo-tree-id5834 . -2) (undo-tree-id5835 . -2) (undo-tree-id5836 . -2) (undo-tree-id5837 . -2) (undo-tree-id5838 . -2) (undo-tree-id5839 . -2) 10612) nil (25733 30023 596395 130000) 0 nil])
([nil nil ((#("  multiple inputs.
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9 10 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10 18 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 18 19 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10610) (undo-tree-id5802 . -2) (undo-tree-id5803 . -19) (undo-tree-id5804 . -18) (undo-tree-id5805 . -2) (undo-tree-id5806 . -2) (undo-tree-id5807 . -2) (undo-tree-id5808 . -2) (undo-tree-id5809 . -2) (undo-tree-id5810 . -2) (undo-tree-id5811 . -2) (undo-tree-id5812 . -2) (undo-tree-id5813 . -2) (undo-tree-id5814 . -2) (undo-tree-id5815 . -2) (undo-tree-id5816 . -2) (undo-tree-id5817 . -2) (undo-tree-id5818 . -2) (undo-tree-id5819 . -2) (undo-tree-id5820 . -2) 10612) nil (25733 30023 596378 825000) 0 nil])
([nil nil ((#("> " 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10612) (undo-tree-id5800 . 2) (undo-tree-id5801 . -1)) nil (25733 30023 596362 684000) 0 nil])
([nil nil ((10620 . 10621) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10620)) nil (25733 30023 596359 882000) 0 nil])
([nil nil ((10623 . 10624) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10623)) nil (25733 30023 596358 335000) 0 nil])
([nil nil ((10638 . 10639) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10638)) nil (25733 30023 596356 532000) 0 nil])
([nil nil ((#("  T
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 3 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 10652) (undo-tree-id5692 . -2) (undo-tree-id5693 . -4) (undo-tree-id5694 . -4) (undo-tree-id5695 . -4) (undo-tree-id5696 . -4) (undo-tree-id5697 . -4) (undo-tree-id5698 . -4) (undo-tree-id5699 . -4) (undo-tree-id5700 . -4) (undo-tree-id5701 . -4) (undo-tree-id5702 . -4) (undo-tree-id5703 . -4) (undo-tree-id5704 . -4) (undo-tree-id5705 . -4) (undo-tree-id5706 . -4) (undo-tree-id5707 . -4) (undo-tree-id5708 . -4) (undo-tree-id5709 . -4) (undo-tree-id5710 . -4) (undo-tree-id5711 . -4) (undo-tree-id5712 . -4) (undo-tree-id5713 . -4) (undo-tree-id5714 . -4) (undo-tree-id5715 . -4) (undo-tree-id5716 . -4) (undo-tree-id5717 . -4) (undo-tree-id5718 . -4) (undo-tree-id5719 . -4) (undo-tree-id5720 . -4) (undo-tree-id5721 . -4) (undo-tree-id5722 . -4) (undo-tree-id5723 . -4) (undo-tree-id5724 . -4) (undo-tree-id5725 . -4) (undo-tree-id5726 . -4) (undo-tree-id5727 . -4) (undo-tree-id5728 . -4) (undo-tree-id5729 . -4) (undo-tree-id5730 . -4) (undo-tree-id5731 . -4) (undo-tree-id5732 . -4) (undo-tree-id5733 . -4) (undo-tree-id5734 . -4) (undo-tree-id5735 . -4) (undo-tree-id5736 . -4) (undo-tree-id5737 . -4) (undo-tree-id5738 . -4) (undo-tree-id5739 . -4) (undo-tree-id5740 . -4) (undo-tree-id5741 . -4) (undo-tree-id5742 . -4) (undo-tree-id5743 . -4) (undo-tree-id5744 . -4) (undo-tree-id5745 . -4) (undo-tree-id5746 . -4) (undo-tree-id5747 . -4) (undo-tree-id5748 . -4) (undo-tree-id5749 . -4) (undo-tree-id5750 . -4) (undo-tree-id5751 . -4) (undo-tree-id5752 . -4) (undo-tree-id5753 . -4) (undo-tree-id5754 . -4) (undo-tree-id5755 . -4) (undo-tree-id5756 . -4) (undo-tree-id5757 . -4) (undo-tree-id5758 . -4) (undo-tree-id5759 . -4) (undo-tree-id5760 . -4) (undo-tree-id5761 . -4) (undo-tree-id5762 . -4) (undo-tree-id5763 . -4) (undo-tree-id5764 . -4) (undo-tree-id5765 . -4) (undo-tree-id5766 . -4) (undo-tree-id5767 . -4) (undo-tree-id5768 . -4) (undo-tree-id5769 . -4) (undo-tree-id5770 . -4) (undo-tree-id5771 . -4) (undo-tree-id5772 . -4) (undo-tree-id5773 . -4) (undo-tree-id5774 . -4) (undo-tree-id5775 . -4) (undo-tree-id5776 . -4) (undo-tree-id5777 . -4) (undo-tree-id5778 . -4) (undo-tree-id5779 . -4) (undo-tree-id5780 . -4) (undo-tree-id5781 . -4) (undo-tree-id5782 . -4) (undo-tree-id5783 . -4) (undo-tree-id5784 . -3) (undo-tree-id5785 . -2) (undo-tree-id5786 . -2) (undo-tree-id5787 . -2) (undo-tree-id5788 . -2) (undo-tree-id5789 . -2) (undo-tree-id5790 . -2) (undo-tree-id5791 . -2) (undo-tree-id5792 . -2) (undo-tree-id5793 . -2) (undo-tree-id5794 . -2) (undo-tree-id5795 . -2) (undo-tree-id5796 . -2) (undo-tree-id5797 . -2) (undo-tree-id5798 . -2) (undo-tree-id5799 . -2) 10654) nil (25733 30023 596350 278000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block))) . 10652)) nil (25733 30023 596179 64000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 10368) (undo-tree-id6092 . -1) (t 25733 30023 617853 320000)) nil (25733 30029 137878 610000) 0 nil])
([nil nil ((10661 . 10662) (t 25733 30029 157527 214000) 8582) nil (25733 30284 721305 853000) 0 nil])
([nil nil ((10664 . 10668) (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . 10663) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (10664 . 10665) (10663 . 10664) (10662 . 10663)) nil (25733 30284 721304 313000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 10667) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1)) nil (25733 30284 721294 44000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t org-emphasis t)) . 10666) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1)) nil (25733 30284 721288 619000) 0 nil])
([nil nil ((10676 . 10681) (10667 . 10676) (#("P" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -10667) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) 10668 (10666 . 10668)) nil (25733 30284 721271 408000) 0 nil])
([nil nil ((#("** 
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (1 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 3 4 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 10678) (undo-tree-id6225 . 1) (undo-tree-id6226 . -2) (undo-tree-id6227 . -3) (undo-tree-id6228 . -3) (undo-tree-id6229 . -3) (undo-tree-id6230 . -3) (undo-tree-id6231 . -3) (undo-tree-id6232 . -3) (undo-tree-id6233 . -3) (undo-tree-id6234 . -2) (undo-tree-id6235 . -2) (undo-tree-id6236 . -2) (undo-tree-id6237 . -2) (undo-tree-id6238 . -2) (undo-tree-id6239 . -2) (undo-tree-id6240 . -2) (undo-tree-id6241 . -2) (undo-tree-id6242 . -2) (undo-tree-id6243 . -2) (undo-tree-id6244 . -2) (undo-tree-id6245 . -2) (undo-tree-id6246 . -2) (undo-tree-id6247 . -2) (undo-tree-id6248 . -2) (undo-tree-id6249 . -2) (undo-tree-id6250 . -2) (undo-tree-id6251 . -2) (undo-tree-id6252 . -2) (undo-tree-id6253 . -2) (undo-tree-id6254 . -2) (undo-tree-id6255 . -2) (undo-tree-id6256 . -2) 10680) nil (25733 30284 721263 228000) 0 nil])
([nil nil ((10678 . 10682) (10677 . 10678) 10677) nil (25733 30284 721238 728000) 0 nil])
([nil nil ((10694 . 10700) (10689 . 10694) (#("S" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -10689) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (#("T" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -10690) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (#("I" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -10691) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (#("O" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -10692) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) 10693 (10684 . 10693) (#("P" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -10684) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) 10685 (10682 . 10685)) nil (25733 30284 721231 318000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 10695)) nil (25733 30284 721130 733000) 0 nil])
([nil nil ((10698 . 10700)) nil (25733 30284 721125 266000) 0 nil])
([nil nil ((10701 . 10702) (t 25733 30284 747012 86000) 10699) nil (25733 30314 451084 826000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10721 . 10722) (nil fontified nil 10701 . 10722) (10701 . 10722) 10700) nil (25733 30314 451083 563000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . 10699) (undo-tree-id6305 . -2) (undo-tree-id6306 . -2) (undo-tree-id6307 . -2) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -2) (undo-tree-id6359 . -2) (undo-tree-id6360 . -2) (undo-tree-id6361 . -2) (undo-tree-id6362 . -2) (undo-tree-id6363 . -2) (undo-tree-id6364 . -2) (undo-tree-id6365 . -2) (undo-tree-id6366 . -2) (undo-tree-id6367 . -2) (undo-tree-id6368 . -2) (undo-tree-id6369 . -2) (undo-tree-id6370 . -2) (undo-tree-id6371 . -2) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -2) (undo-tree-id6383 . -2)) nil (25733 30314 451320 689000) 0 nil])
([nil nil ((10721 . 10725) (10720 . 10721) 10699) nil (25733 30341 979192 146000) 0 nil] [nil nil ((10695 . 10697) 10699) ((#("# " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t face font-lock-comment-face)) . 10695)) (25733 30314 451010 878000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10760 . 10761) (nil fontified nil 10725 . 10761) (10725 . 10761) 10724) nil (25733 30341 979190 22000) 0 nil])
nil
([nil nil ((10761 . 10766)) nil (25733 30341 979188 56000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10795 . 10796) (nil fontified nil 10766 . 10796) (10766 . 10796) 10765) nil (25733 30341 979186 523000) 0 nil])
([nil nil ((10796 . 10801)) nil (25733 30341 979179 667000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10840 . 10841) (nil fontified nil 10801 . 10841) (10801 . 10841) 10800 (t 25733 30342 49465 764000)) nil (25733 30353 300871 917000) 0 nil])
([nil nil ((10841 . 10846)) nil (25733 30353 300866 305000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10863 . 10864) (nil fontified nil 10846 . 10864) (10846 . 10864) 10845 (t 25733 30353 321183 718000)) nil (25733 30403 160835 288000) 0 nil])
([nil nil ((10864 . 10869)) nil (25733 30416 954093 908000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10871 . 10872) (10870 . 10872) (t 25733 30403 228009 734000)) ((#(" 
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified nil) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified nil rear-nonsticky nil)) . 10870) (undo-tree-id6411 . -1) (undo-tree-id6412 . -2) (undo-tree-id6413 . -2) (undo-tree-id6414 . -2) (undo-tree-id6415 . -2) (nil rear-nonsticky t 10871 . 10872)) (25733 30418 97699 472000) 0 nil] [nil nil ((nil rear-nonsticky nil 10916 . 10917) (nil fontified nil 10868 . 10917) (nil keymap (keymap) 10868 . 10917) (nil face org-level-3 10868 . 10917) (nil fontified nil 10868 . 10917) (nil line-prefix #("      " 0 6 (face org-indent)) 10868 . 10917) (nil wrap-prefix #("      " 0 6 (face org-indent)) 10868 . 10917) (10868 . 10917) 10870 (#(" 
" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 10868) (undo-tree-id6384 . -2) (undo-tree-id6385 . 1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -2) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -2) (undo-tree-id6405 . -2) 10870 (t 25733 30403 228009 734000)) ((10868 . 10870) (#("A RECURSIVE FUNCTION FOR COUNTING SLICES OF BREAD" 0 48 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil face org-level-3 font-lock-multiline t org-emphasis t keymap (keymap)) 48 49 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil rear-nonsticky nil face org-level-3 font-lock-multiline t org-emphasis t keymap (keymap))) . 10868) (undo-tree-id6406 . -48) (undo-tree-id6407 . -48) (undo-tree-id6408 . -48) (undo-tree-id6409 . -48) (undo-tree-id6410 . -48) (nil wrap-prefix #("      " 0 6 (face org-indent)) 10916 . 10917) (nil wrap-prefix #("      " 0 6 (face org-indent)) 10868 . 10916) (nil face (bold) 10916 . 10917) (nil face (bold) 10868 . 10916) (nil keymap nil 10916 . 10917) (nil keymap nil 10868 . 10916) (nil rear-nonsticky t 10916 . 10917)) (25733 30413 753996 14000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10919 . 10920) (nil fontified nil 10871 . 10920) (10871 . 10920) 10870) nil (25733 30459 606023 377000) 0 nil])
nil
([nil nil ((nil keymap (keymap) 10868 . 10869) (nil face org-level-3 10868 . 10869) (nil line-prefix #("      " 0 6 (face org-indent)) 10868 . 10869) (nil wrap-prefix #("      " 0 6 (face org-indent)) 10868 . 10869) (nil fontified nil 10868 . 10869) (10868 . 10869) (#("  " 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 1 2 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified nil)) . 10868) (undo-tree-id6416 . -2) (undo-tree-id6417 . 1) (undo-tree-id6418 . -2) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -2) (undo-tree-id6468 . -2) (undo-tree-id6469 . -2) (undo-tree-id6470 . -2) (undo-tree-id6471 . -2) (undo-tree-id6472 . -2) (undo-tree-id6473 . -2) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -2) (undo-tree-id6485 . -2) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (#("
" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . -10869) (undo-tree-id6488 . 1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) 10868) nil (25733 30459 606012 943000) 0 nil])
([nil nil ((10919 . 10923) (10918 . 10919) 10868) nil (25733 30459 605836 118000) 0 nil])
([nil nil ((nil fontified t 10928 . 10929) (nil line-prefix #("*" 0 1 (face org-indent)) 10928 . 10929) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 10928 . 10929) (nil keymap (keymap) 10928 . 10929) (nil face org-level-2 10928 . 10929) (nil fontified t 10927 . 10928) (nil line-prefix #("*" 0 1 (face org-indent)) 10927 . 10928) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 10927 . 10928) (nil composition (1 1 [9679]) 10927 . 10928) (nil keymap (keymap) 10927 . 10928) (nil face org-level-2 10927 . 10928) (nil fontified t 10926 . 10927) (nil line-prefix #("*" 0 1 (face org-indent)) 10926 . 10927) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 10926 . 10927) (nil face org-hide 10926 . 10927) (nil keymap (keymap) 10926 . 10927) (#("** " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (1 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 10925) (10928 . 10932) 10922) nil (25733 30459 605832 976000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10950 . 10951) (nil fontified nil 10923 . 10951) (10923 . 10951) 10922) nil (25733 30459 605825 674000) 0 nil])
([nil nil ((10951 . 10956)) nil (25733 30459 605818 669000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10990 . 10991) (nil fontified nil 10956 . 10991) (10956 . 10991) 10955 (t 25733 30459 682808 229000)) nil (25733 30473 150064 980000) 0 nil])
([nil nil ((10991 . 10996)) nil (25733 30473 150054 256000) 0 nil])
([nil nil ((#("*** OOPS
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 8 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 8 9 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 10998) (undo-tree-id6548 . -7) (undo-tree-id6549 . -8) (undo-tree-id6550 . -8) (undo-tree-id6551 . -3) (undo-tree-id6552 . -3) (undo-tree-id6553 . -3) (undo-tree-id6554 . -3) (undo-tree-id6555 . -3) (undo-tree-id6556 . -3) (undo-tree-id6557 . -3) (undo-tree-id6558 . -3) (undo-tree-id6559 . -3) (undo-tree-id6560 . -3) (undo-tree-id6561 . -3) (undo-tree-id6562 . -3) (undo-tree-id6563 . -3) (undo-tree-id6564 . -3) (undo-tree-id6565 . -3) (undo-tree-id6566 . -3) 11001 (t 25733 30473 174538 63000)) nil (25733 30477 449214 720000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11021 . 11022) (nil fontified nil 10996 . 11022) (10996 . 11022) 10995 (t 25733 30477 470453 287000)) nil (25733 30495 455082 736000) 0 nil])
([nil nil ((11022 . 11027)) nil (25733 30495 455081 329000) 0 nil])
([nil nil ((11027 . 11032)) nil (25733 30495 456650 550000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11045 . 11046) (nil fontified nil 11027 . 11046) (11027 . 11046) 11026 (t 25733 30497 766060 501000)) nil (25733 30533 372227 710000) 0 nil] [nil nil ((nil keymap (keymap) 11031 . 11032) (nil face org-level-3 11031 . 11032) (nil line-prefix #("      " 0 6 (face org-indent)) 11031 . 11032) (nil wrap-prefix #("      " 0 6 (face org-indent)) 11031 . 11032) (nil fontified nil 11031 . 11032) (11031 . 11032) (#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 11031) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1)) ((11031 . 11032) (#("w" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) keymap (keymap) face org-level-3)) . 11031) (nil wrap-prefix #("      " 0 6 (face org-indent)) 11031 . 11032) (nil face nil 11031 . 11032) (nil keymap nil 11031 . 11032)) (25733 30495 455074 814000) 0 nil])
([nil nil ((11046 . 11051)) nil (25733 30533 372226 299000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 11076 . 11077) (nil fontified nil 11051 . 11077) (11051 . 11077) 11050) nil (25733 30533 372225 281000) 0 nil])
([nil nil ((11077 . 11082)) nil (25733 30533 372223 738000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11101 . 11102) (nil fontified nil 11082 . 11102) (11082 . 11102) 11081) nil (25733 30533 372221 764000) 0 nil])
([nil nil ((11102 . 11107)) nil (25733 30533 372213 6000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11139 . 11140) (nil fontified nil 11107 . 11140) (11107 . 11140) 11106 (t 25733 30533 449398 577000)) nil (25733 30572 180697 485000) 0 nil])
([nil nil ((11140 . 11145)) nil (25733 30572 180696 46000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11173 . 11174) (nil fontified nil 11145 . 11174) (11145 . 11174) 11144) nil (25733 30572 180694 782000) 0 nil])
([nil nil ((#("8.12.1 " 0 7 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 11145) (undo-tree-id6569 . -6) (undo-tree-id6570 . -6) (undo-tree-id6571 . -6) (undo-tree-id6572 . -7) (undo-tree-id6573 . -6) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -3) (undo-tree-id6582 . -3) (undo-tree-id6583 . -3) (undo-tree-id6584 . -3) (undo-tree-id6585 . -3) (undo-tree-id6586 . -3) (undo-tree-id6587 . -3) (undo-tree-id6588 . -4) (undo-tree-id6589 . -4) (undo-tree-id6590 . -4) (undo-tree-id6591 . -4) (undo-tree-id6592 . -4) (undo-tree-id6593 . -4) (undo-tree-id6594 . -4) (undo-tree-id6595 . -5) (undo-tree-id6596 . -5) (undo-tree-id6597 . -5) (undo-tree-id6598 . -5) (undo-tree-id6599 . -5) (undo-tree-id6600 . -5) (undo-tree-id6601 . -5) (undo-tree-id6602 . -7) (undo-tree-id6603 . -7) (undo-tree-id6604 . -7) (undo-tree-id6605 . -7) (undo-tree-id6606 . -7) (undo-tree-id6607 . -7) (undo-tree-id6608 . -7) (undo-tree-id6609 . -6) (undo-tree-id6610 . -6) (undo-tree-id6611 . -6) (undo-tree-id6612 . -6) (undo-tree-id6613 . -6) (undo-tree-id6614 . -6) (undo-tree-id6615 . -6) (undo-tree-id6616 . -6) 11151) nil (25733 30572 180690 358000) 0 nil])
([nil nil ((11168 . 11172) (11167 . 11168) 11145) nil (25733 30572 180617 290000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11214 . 11215) (nil fontified nil 11172 . 11215) (11172 . 11215) 11171 (t 25733 30572 204716 276000)) nil (25733 30665 220223 932000) 0 nil])
([nil nil ((11215 . 11220)) nil (25733 30665 220222 664000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11243 . 11244) (nil fontified nil 11220 . 11244) (11220 . 11244) 11219) nil (25733 30665 220221 893000) 0 nil])
([nil nil ((11244 . 11249)) nil (25733 30665 220220 877000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11266 . 11267) (nil fontified nil 11249 . 11267) (11249 . 11267) 11248) nil (25733 30665 220220 172000) 0 nil])
([nil nil ((11267 . 11272)) nil (25733 30665 220219 48000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11298 . 11299) (nil fontified nil 11272 . 11299) (11272 . 11299) 11271) nil (25733 30665 220218 195000) 0 nil])
([nil nil ((11299 . 11304)) nil (25733 30665 220216 815000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11326 . 11327) (nil fontified nil 11304 . 11327) (11304 . 11327) 11303) nil (25733 30665 220216 22000) 0 nil])
([nil nil ((11327 . 11332)) nil (25733 30665 220214 674000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11362 . 11363) (nil fontified nil 11332 . 11363) (11332 . 11363) 11331) nil (25733 30665 220213 254000) 0 nil])
([nil current ((11363 . 11368)) nil (25733 30665 220208 2000) 0 nil])
nil
