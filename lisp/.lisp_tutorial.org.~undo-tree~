(undo-tree-save-format-version . 1)
"5c65a39356ae743caf8fc33b456fe62065e51491"
[nil nil nil nil (25732 41327 908158 951000) 0 nil]
([nil nil ((130 . 131) (129 . 130) (t 25732 40527 210113 349000) 129) nil (25732 41327 908156 665000) 0 nil])
([nil nil ((132 . 133) (131 . 132) 131) nil (25732 41327 908154 470000) 0 nil])
([nil nil ((134 . 135) (133 . 134) 133) nil (25732 41327 908152 439000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix "" wrap-prefix "")) . 135) (undo-tree-id14 . 1)) nil (25732 41327 908150 213000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix "" wrap-prefix "")) . 131) (undo-tree-id12 . -1) (undo-tree-id13 . -1)) nil (25732 41327 908147 746000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix "" wrap-prefix "")) . 131) (undo-tree-id0 . 1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1)) nil (25732 41327 908141 55000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix "" wrap-prefix "")) . 131) (undo-tree-id15 . 1) (t 25732 41327 916746 192000)) nil (25732 41634 221410 40000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix "" wrap-prefix "")) . 131) (undo-tree-id16 . 1) (t 25732 41634 220735 89000)) nil (25732 42180 917836 586000) 0 nil])
([nil nil ((540 . 541) (t 25732 42180 927310 43000)) nil (25732 44344 334286 857000) 0 nil])
([nil nil ((540 . 548) (#("

(defun" 0 1 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (:inherit (org-block))) 1 2 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (:inherit (org-block))) 2 8 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (:inherit (org-block)))) . 540) (t 25732 44344 343156 384000)) nil (25733 1798 596961 631000) 0 nil])
([nil nil ((548 . 558) (#(" factorial" 0 10 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (:inherit (org-block)))) . 548)) nil (25733 1798 596959 328000) 0 nil])
([nil nil ((558 . 561) (#(" (n" 0 3 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (:inherit (org-block)))) . 558)) nil (25733 1798 596957 531000) 0 nil])
([nil nil ((561 . 568) (#(")
  (if" 0 2 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (:inherit (org-block))) 2 7 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (:inherit (org-block)))) . 561)) nil (25733 1798 596955 545000) 0 nil])
([nil nil ((618 . 627) (#(")

(print" 0 2 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-multiline t face (:inherit (org-block))) 2 3 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (:inherit (org-block))) 3 9 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (:inherit (org-block)))) . 618)) nil (25733 1798 596952 203000) 0 nil])
([nil nil ((627 . 638) (#(" (factorial" 0 11 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (:inherit (org-block)))) . 627)) nil (25733 1954 540234 694000) 0 nil])
([nil nil ((134 . 136) (131 . 134) (#("s" 0 1 (fontified t line-prefix "" wrap-prefix #(" " 0 1 (face org-indent)))) . -131) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) 132 (130 . 132) (t 25733 1798 612014 453000)) nil (25733 1985 503948 846000) 0 nil] [nil nil ((#("List Processing." 0 16 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 196) 130 (t 25733 1798 612014 453000)) ((196 . 212)) (25733 1954 539711 658000) 0 nil] [nil nil ((#("List Processing." 0 16 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 196) 186 (t 25733 1798 612014 453000)) ((196 . 212)) (25733 1950 724605 895000) 0 nil])
([nil nil ((135 . 149)) nil (25733 1985 504206 489000) 0 nil])
nil
nil
([nil nil ((#(" st ( satn eaent e )
" 0 20 (fontified t line-prefix "" wrap-prefix #(" " 0 1 (face org-indent))) 20 21 (fontified t line-prefix "" wrap-prefix #(" " 0 1 (face org-indent)))) . 130) (undo-tree-id45 . 2) (undo-tree-id46 . -8) (undo-tree-id47 . -21) (undo-tree-id48 . -18) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . 10) (undo-tree-id74 . -16) (undo-tree-id75 . 15) (undo-tree-id76 . -10) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 131) nil (25733 1995 822317 515000) 0 nil] [nil nil ((#("List Processing." 0 16 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 216) 131) ((216 . 232)) (25733 1985 503400 66000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix "" wrap-prefix "")) . 130) (undo-tree-id43 . 1) (undo-tree-id44 . -1)) nil (25733 1995 822055 419000) 0 nil])
nil
([nil nil ((526 . 530) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 526 530 nil nil nil t #s(yas--exit 550 nil))) #s(yas--exit 550 nil) 5 nil #s(yas--field 1 526 530 nil nil nil t #s(yas--exit 550 nil)) nil nil)) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -546) (undo-tree-id168 . -2) (514 . 558) (#("src" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (:inherit (org-block)))) . 514) (undo-tree-id169 . -1) (undo-tree-id170 . -3) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3) (undo-tree-id204 . -3) (undo-tree-id205 . -3) (undo-tree-id206 . -3) (undo-tree-id207 . -3) (undo-tree-id208 . -3) 517 (514 . 517) (513 . 514) (t 25733 1995 828798 95000) 498) nil (25733 2752 287691 373000) 0 nil])
([nil nil ((apply yas--snippet-revive 514 560 #s(yas--snippet nil (#s(yas--field 1 526 530 nil nil nil t #s(yas--exit 550 nil))) #s(yas--exit 550 nil) 5 nil #s(yas--field 1 526 530 nil nil nil t #s(yas--exit 550 nil)) nil nil))) nil (25733 2752 286122 111000) 0 nil])
([nil nil ((#("#+END_SRC
" 0 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (:inherit (org-block))) 9 10 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (:inherit (org-block)))) . 551) (undo-tree-id144 . -8) (undo-tree-id145 . -10) (undo-tree-id146 . -9) (undo-tree-id147 . -9) (undo-tree-id148 . -9) (undo-tree-id149 . -9) (undo-tree-id150 . -9) (undo-tree-id151 . -9) (undo-tree-id152 . -9) (undo-tree-id153 . -8) (undo-tree-id154 . -8) (undo-tree-id155 . -8) (undo-tree-id156 . -8) (undo-tree-id157 . -8) (undo-tree-id158 . -8) (undo-tree-id159 . -8) (undo-tree-id160 . -8) (undo-tree-id161 . -8) (undo-tree-id162 . -8) (undo-tree-id163 . -8) (undo-tree-id164 . -8) (undo-tree-id165 . -8) (undo-tree-id166 . -8) (undo-tree-id167 . -8) 559) nil (25733 2752 286120 318000) 0 nil])
([nil nil ((nil rear-nonsticky nil 692 . 693) (#("
" 0 1 (font-lock-fontified t font-lock-multiline t face (:inherit (org-block)) fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -702) (692 . 703)) nil (25733 2752 286104 287000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) rear-nonsticky t font-lock-fontified t font-lock-multiline t face (:inherit (org-block)))) . 692) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1)) nil (25733 2752 286102 251000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (:inherit (org-block)))) . -598)) nil (25733 2752 417946 321000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (:inherit (org-block)))) . 575) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1)) nil (25733 2768 242743 875000) 0 nil] [nil nil ((#("      " 0 6 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-multiline t face (:inherit (org-block)))) . -611) (undo-tree-id123 . 6) (undo-tree-id124 . -6) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6)) ((611 . 617)) (25733 2752 288138 124000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (:inherit (org-block)))) . 550) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1)) nil (25733 2768 242736 946000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-multiline t face (:inherit (org-block)))) . -613)) ((613 . 619)) (25733 2752 285546 437000) 0 nil])
([nil nil ((576 . 577) (#("D" 0 1 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (:inherit (org-block)))) . 576)) nil (25733 2768 242709 946000) 0 nil])
nil
([nil current ((597 . 598) (#("I" 0 1 (fontified t font-lock-fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (:inherit (org-block)))) . 597)) nil (25733 2768 242704 74000) 0 nil])
nil
