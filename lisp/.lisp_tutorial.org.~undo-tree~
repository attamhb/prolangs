(undo-tree-save-format-version . 1)
"bbc11f374d47ceabb63209e889521ac28bd1b939"
[nil nil nil nil (25732 41327 908158 951000) 0 nil]
([nil nil ((130 . 131) (129 . 130) (t 25732 40527 210113 349000) 129) nil (25732 41327 908156 665000) 0 nil])
([nil nil ((132 . 133) (131 . 132) 131) nil (25732 41327 908154 470000) 0 nil])
([nil nil ((134 . 135) (133 . 134) 133) nil (25732 41327 908152 439000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . 135) (undo-tree-id14 . 1)) nil (25732 41327 908150 213000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . 131) (undo-tree-id12 . -1) (undo-tree-id13 . -1)) nil (25732 41327 908147 746000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . 131) (undo-tree-id0 . 1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1)) nil (25732 41327 908141 55000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . 131) (undo-tree-id15 . 1) (t 25732 41327 916746 192000)) nil (25732 41634 221410 40000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . 131) (undo-tree-id16 . 1) (t 25732 41634 220735 89000)) nil (25732 42180 917836 586000) 0 nil])
([nil nil ((540 . 541) (t 25732 42180 927310 43000)) nil (25732 44344 334286 857000) 0 nil])
([nil nil ((540 . 548) (#("

(defun" 0 1 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t) 1 2 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t) 2 8 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 540) (t 25732 44344 343156 384000)) nil (25733 1798 596961 631000) 0 nil])
([nil nil ((548 . 558) (#(" factorial" 0 10 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 548)) nil (25733 1798 596959 328000) 0 nil])
([nil nil ((558 . 561) (#(" (n" 0 3 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 558)) nil (25733 1798 596957 531000) 0 nil])
([nil nil ((561 . 568) (#(")
  (if" 0 2 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t) 2 7 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 561)) nil (25733 1798 596955 545000) 0 nil])
([nil nil ((618 . 627) (#(")

(print" 0 2 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t) 2 3 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t) 3 9 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 618)) nil (25733 1798 596952 203000) 0 nil])
([nil nil ((627 . 638) (#(" (factorial" 0 11 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 627)) nil (25733 1954 540234 694000) 0 nil])
([nil nil ((134 . 136) (131 . 134) (#("s" 0 1 (wrap-prefix #(" " 0 1 (face org-indent)) line-prefix "" fontified t)) . -131) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) 132 (130 . 132) (t 25733 1798 612014 453000)) nil (25733 1985 503948 846000) 0 nil] [nil nil ((#("List Processing." 0 16 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 196) 130 (t 25733 1798 612014 453000)) ((196 . 212)) (25733 1954 539711 658000) 0 nil] [nil nil ((#("List Processing." 0 16 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 196) 186 (t 25733 1798 612014 453000)) ((196 . 212)) (25733 1950 724605 895000) 0 nil])
([nil nil ((135 . 149)) nil (25733 1985 504206 489000) 0 nil])
nil
nil
([nil nil ((#(" st ( satn eaent e )
" 0 20 (wrap-prefix #(" " 0 1 (face org-indent)) line-prefix "" fontified t) 20 21 (wrap-prefix #(" " 0 1 (face org-indent)) line-prefix "" fontified t)) . 130) (undo-tree-id45 . 2) (undo-tree-id46 . -8) (undo-tree-id47 . -21) (undo-tree-id48 . -18) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . 10) (undo-tree-id74 . -16) (undo-tree-id75 . 15) (undo-tree-id76 . -10) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 131) nil (25733 1995 822317 515000) 0 nil] [nil nil ((#("List Processing." 0 16 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 216) 131) ((216 . 232)) (25733 1985 503400 66000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . 130) (undo-tree-id43 . 1) (undo-tree-id44 . -1)) nil (25733 1995 822055 419000) 0 nil])
nil
([nil nil ((526 . 530) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 526 530 nil nil nil t #s(yas--exit 550 nil))) #s(yas--exit 550 nil) 5 nil #s(yas--field 1 526 530 nil nil nil t #s(yas--exit 550 nil)) nil nil)) (#("  " 0 2 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . -546) (undo-tree-id168 . -2) (514 . 558) (#("src" 0 3 (face (:inherit (org-block)) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 514) (undo-tree-id169 . -1) (undo-tree-id170 . -3) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3) (undo-tree-id204 . -3) (undo-tree-id205 . -3) (undo-tree-id206 . -3) (undo-tree-id207 . -3) (undo-tree-id208 . -3) 517 (514 . 517) (513 . 514) (t 25733 1995 828798 95000) 498) nil (25733 2752 287691 373000) 0 nil])
([nil nil ((apply yas--snippet-revive 514 560 #s(yas--snippet nil (#s(yas--field 1 526 530 nil nil nil t #s(yas--exit 550 nil))) #s(yas--exit 550 nil) 5 nil #s(yas--field 1 526 530 nil nil nil t #s(yas--exit 550 nil)) nil nil))) nil (25733 2752 286122 111000) 0 nil])
([nil nil ((#("#+END_SRC
" 0 9 (face (:inherit (org-block)) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 9 10 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 551) (undo-tree-id144 . -8) (undo-tree-id145 . -10) (undo-tree-id146 . -9) (undo-tree-id147 . -9) (undo-tree-id148 . -9) (undo-tree-id149 . -9) (undo-tree-id150 . -9) (undo-tree-id151 . -9) (undo-tree-id152 . -9) (undo-tree-id153 . -8) (undo-tree-id154 . -8) (undo-tree-id155 . -8) (undo-tree-id156 . -8) (undo-tree-id157 . -8) (undo-tree-id158 . -8) (undo-tree-id159 . -8) (undo-tree-id160 . -8) (undo-tree-id161 . -8) (undo-tree-id162 . -8) (undo-tree-id163 . -8) (undo-tree-id164 . -8) (undo-tree-id165 . -8) (undo-tree-id166 . -8) (undo-tree-id167 . -8) 559) nil (25733 2752 286120 318000) 0 nil])
([nil nil ((nil rear-nonsticky nil 692 . 693) (#("
" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil face (:inherit (org-block)) font-lock-multiline t font-lock-fontified t)) . -702) (692 . 703)) nil (25733 2752 286104 287000) 0 nil])
([nil nil ((#("
" 0 1 (face (:inherit (org-block)) font-lock-multiline t font-lock-fontified t rear-nonsticky t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 692) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1)) nil (25733 2752 286102 251000) 0 nil])
([nil nil ((#("  " 0 2 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . -598)) nil (25733 2752 417946 321000) 0 nil])
([nil nil ((#("
" 0 1 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 575) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1)) nil (25733 2768 242743 875000) 0 nil] [nil nil ((#("      " 0 6 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . -611) (undo-tree-id123 . 6) (undo-tree-id124 . -6) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6)) ((611 . 617)) (25733 2752 288138 124000) 0 nil])
([nil nil ((#("
" 0 1 (face (:inherit (org-block)) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 550) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1)) nil (25733 2768 242736 946000) 0 nil])
([nil nil ((#("      " 0 6 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . -613)) ((613 . 619)) (25733 2752 285546 437000) 0 nil])
([nil nil ((576 . 577) (#("D" 0 1 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 576)) nil (25733 2768 242709 946000) 0 nil])
nil
([nil nil ((597 . 598) (#("I" 0 1 (face (:inherit (org-block)) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t fontified t)) . 597)) nil (25733 2891 461702 333000) 0 nil])
([nil nil ((7191 . 7195) (7190 . 7191) (7189 . 7190) (t 25733 2768 250595 724000) 7163) nil (25733 14666 199104 985000) 0 nil] [nil nil ((130 . 131) (t 25733 2768 250595 724000)) ((#("" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . 130) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1)) (25733 2891 459556 759000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7220 . 7221) (nil fontified nil 7195 . 7221) (7195 . 7221) 7194) nil (25733 14666 199096 480000) 0 nil])
nil
([nil nil ((7222 . 7223) (7221 . 7222) 7220) nil (25733 14666 199090 688000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)))) . -7254) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . -7255) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) 7256 (7252 . 7256) (#("    " 0 4 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 7251) (undo-tree-id1005 . -4) (undo-tree-id1006 . -4) (undo-tree-id1007 . -4) (undo-tree-id1008 . -4) (undo-tree-id1009 . -4) (undo-tree-id1010 . -4) (undo-tree-id1011 . -4) (undo-tree-id1012 . -4) (undo-tree-id1013 . -4) (7250 . 7256) (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . -7250) (undo-tree-id1014 . -1) (undo-tree-id1015 . 1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . -7251) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -7252) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)))) . -7253) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . -7254) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) 7255 (7250 . 7255) (7247 . 7250) (7244 . 7247) (7230 . 7244) (#("  - 
  - Local" 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent))) 2 4 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent))) 4 5 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent))) 5 14 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 7230) (undo-tree-id1130 . -14) (undo-tree-id1131 . -14) (undo-tree-id1132 . -10) (undo-tree-id1133 . -11) (undo-tree-id1134 . -11) (undo-tree-id1135 . -11) (undo-tree-id1136 . -11) (undo-tree-id1137 . -11) (undo-tree-id1138 . -11) (undo-tree-id1139 . -11) (undo-tree-id1140 . -11) (undo-tree-id1141 . -11) (undo-tree-id1142 . -11) (undo-tree-id1143 . -11) (undo-tree-id1144 . -11) (undo-tree-id1145 . -11) (undo-tree-id1146 . -11) (undo-tree-id1147 . -11) (undo-tree-id1148 . -11) (undo-tree-id1149 . -11) (undo-tree-id1150 . -11) (undo-tree-id1151 . -11) (undo-tree-id1152 . -11) (undo-tree-id1153 . -11) (undo-tree-id1154 . -11) (undo-tree-id1155 . -11) (undo-tree-id1156 . -11) (undo-tree-id1157 . -11) (undo-tree-id1158 . -11) (undo-tree-id1159 . -11) (undo-tree-id1160 . -11) (undo-tree-id1161 . -11) (undo-tree-id1162 . -11) (undo-tree-id1163 . -11) (undo-tree-id1164 . -11) (undo-tree-id1165 . -11) (undo-tree-id1166 . -11) (undo-tree-id1167 . -11) (undo-tree-id1168 . -11) (undo-tree-id1169 . -12) (undo-tree-id1170 . -12) (undo-tree-id1171 . -12) (undo-tree-id1172 . -12) (undo-tree-id1173 . -12) (undo-tree-id1174 . -12) (undo-tree-id1175 . -12) (undo-tree-id1176 . -12) (undo-tree-id1177 . -12) (undo-tree-id1178 . -12) (undo-tree-id1179 . -12) (undo-tree-id1180 . -12) (undo-tree-id1181 . -12) (undo-tree-id1182 . -12) (undo-tree-id1183 . -12) (undo-tree-id1184 . -12) (undo-tree-id1185 . -12) (undo-tree-id1186 . -12) (undo-tree-id1187 . -12) (undo-tree-id1188 . -12) (undo-tree-id1189 . -12) (undo-tree-id1190 . -12) (undo-tree-id1191 . -12) (undo-tree-id1192 . -12) (undo-tree-id1193 . -12) (undo-tree-id1194 . -12) (undo-tree-id1195 . -12) (undo-tree-id1196 . -12) (undo-tree-id1197 . 5) (undo-tree-id1198 . -12) (undo-tree-id1199 . -12) (undo-tree-id1200 . -12) (undo-tree-id1201 . -12) (undo-tree-id1202 . -12) (undo-tree-id1203 . -12) (undo-tree-id1204 . -12) (undo-tree-id1205 . -12) (undo-tree-id1206 . -12) (undo-tree-id1207 . -12) (undo-tree-id1208 . -12) (undo-tree-id1209 . -12) (undo-tree-id1210 . -12) (undo-tree-id1211 . -12) (undo-tree-id1212 . -12) (undo-tree-id1213 . -13) (undo-tree-id1214 . -13) (undo-tree-id1215 . -13) (undo-tree-id1216 . -13) (undo-tree-id1217 . -13) (undo-tree-id1218 . -13) (undo-tree-id1219 . -13) (undo-tree-id1220 . -13) (undo-tree-id1221 . -13) (undo-tree-id1222 . -13) (undo-tree-id1223 . -13) (undo-tree-id1224 . -13) (undo-tree-id1225 . -13) (undo-tree-id1226 . -13) (undo-tree-id1227 . -13) (undo-tree-id1228 . -13) (undo-tree-id1229 . -13) (undo-tree-id1230 . -13) (undo-tree-id1231 . -13) (undo-tree-id1232 . -13) (undo-tree-id1233 . -13) (undo-tree-id1234 . -13) (undo-tree-id1235 . -13) (undo-tree-id1236 . -13) (undo-tree-id1237 . -13) (undo-tree-id1238 . -13) (undo-tree-id1239 . -13) (undo-tree-id1240 . -13) (undo-tree-id1241 . -13) (undo-tree-id1242 . -14) (undo-tree-id1243 . -14) (undo-tree-id1244 . -14) (undo-tree-id1245 . -14) (undo-tree-id1246 . -14) (undo-tree-id1247 . -14) (undo-tree-id1248 . -14) (undo-tree-id1249 . -14) (undo-tree-id1250 . -14) (undo-tree-id1251 . -14) (undo-tree-id1252 . -14) (undo-tree-id1253 . -14) (undo-tree-id1254 . -14) (undo-tree-id1255 . -14) (undo-tree-id1256 . -14) (undo-tree-id1257 . -14) (undo-tree-id1258 . -14) (undo-tree-id1259 . -14) (undo-tree-id1260 . -14) (undo-tree-id1261 . -14) (undo-tree-id1262 . -14) (undo-tree-id1263 . -14) (undo-tree-id1264 . -14) (undo-tree-id1265 . -14) (undo-tree-id1266 . -14) (undo-tree-id1267 . -14) (undo-tree-id1268 . -14) (undo-tree-id1269 . -14) (undo-tree-id1270 . -14) (undo-tree-id1271 . -14) (undo-tree-id1272 . -14) (undo-tree-id1273 . -5) (7230 . 7235) 7239 (7237 . 7239) (#("o" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . -7237) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) 7238 (7232 . 7238) (#("=" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -7232) (undo-tree-id1284 . -1) 7233 (7232 . 7233) (7230 . 7232) (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 7229) (undo-tree-id1285 . -1) (7230 . 7231) (7222 . 7230) (#("a" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -7222) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) 7223 (7222 . 7223)) nil (25733 14666 199020 514000) 0 nil])
([nil nil ((#("  
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 7252) (undo-tree-id933 . -1) (undo-tree-id934 . 1) (undo-tree-id935 . 1) (undo-tree-id936 . -2) (undo-tree-id937 . -2) (undo-tree-id938 . -2) (undo-tree-id939 . -2) (undo-tree-id940 . -2) (undo-tree-id941 . -2) (undo-tree-id942 . -2) (undo-tree-id943 . -2) (undo-tree-id944 . -2) (undo-tree-id945 . -2) (undo-tree-id946 . -2) (undo-tree-id947 . -2) (undo-tree-id948 . -2) (undo-tree-id949 . -2) (undo-tree-id950 . -2) (undo-tree-id951 . -2) (undo-tree-id952 . -2) (undo-tree-id953 . -2) (undo-tree-id954 . -2) (undo-tree-id955 . -2) (undo-tree-id956 . -2) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) 7253) nil (25733 14666 197987 298000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . -7256) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) 7257 (7255 . 7257) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . -7255) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) 7256 (7255 . 7256) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . -7255) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) 7256 (7252 . 7256) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -7252) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (#("-" 0 1 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -7253) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (#(" " 0 1 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -7254) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) 7255 (7240 . 7255) (#("  - 
  - Global" 0 2 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 2 4 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent))) 4 5 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent))) 5 7 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 7 12 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 12 15 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 7240) (undo-tree-id741 . -12) (undo-tree-id742 . -11) (undo-tree-id743 . -9) (undo-tree-id744 . -9) (undo-tree-id745 . -9) (undo-tree-id746 . -9) (undo-tree-id747 . -9) (undo-tree-id748 . -9) (undo-tree-id749 . -9) (undo-tree-id750 . -9) (undo-tree-id751 . -9) (undo-tree-id752 . -9) (undo-tree-id753 . -9) (undo-tree-id754 . -9) (undo-tree-id755 . -9) (undo-tree-id756 . -9) (undo-tree-id757 . -9) (undo-tree-id758 . -10) (undo-tree-id759 . -10) (undo-tree-id760 . -10) (undo-tree-id761 . -10) (undo-tree-id762 . -10) (undo-tree-id763 . -10) (undo-tree-id764 . -10) (undo-tree-id765 . -10) (undo-tree-id766 . -10) (undo-tree-id767 . -10) (undo-tree-id768 . -10) (undo-tree-id769 . -10) (undo-tree-id770 . -10) (undo-tree-id771 . -10) (undo-tree-id772 . -10) (undo-tree-id773 . -10) (undo-tree-id774 . -10) (undo-tree-id775 . -10) (undo-tree-id776 . -10) (undo-tree-id777 . -10) (undo-tree-id778 . -10) (undo-tree-id779 . -10) (undo-tree-id780 . -10) (undo-tree-id781 . -10) (undo-tree-id782 . -10) (undo-tree-id783 . -10) (undo-tree-id784 . -10) (undo-tree-id785 . -10) (undo-tree-id786 . -10) (undo-tree-id787 . -11) (undo-tree-id788 . -11) (undo-tree-id789 . -11) (undo-tree-id790 . -11) (undo-tree-id791 . -11) (undo-tree-id792 . -11) (undo-tree-id793 . -11) (undo-tree-id794 . -11) (undo-tree-id795 . -11) (undo-tree-id796 . -11) (undo-tree-id797 . -11) (undo-tree-id798 . -11) (undo-tree-id799 . -11) (undo-tree-id800 . -12) (undo-tree-id801 . -12) (undo-tree-id802 . -12) (undo-tree-id803 . -12) (undo-tree-id804 . -12) (undo-tree-id805 . -12) (undo-tree-id806 . -12) (undo-tree-id807 . -12) (undo-tree-id808 . -12) (undo-tree-id809 . -12) (undo-tree-id810 . -12) (undo-tree-id811 . -12) (undo-tree-id812 . -12) (undo-tree-id813 . -15) (undo-tree-id814 . -15) (undo-tree-id815 . -15) (undo-tree-id816 . -15) (undo-tree-id817 . -15) (undo-tree-id818 . -15) (undo-tree-id819 . -15) (undo-tree-id820 . -15) (undo-tree-id821 . -15) (undo-tree-id822 . -15) (undo-tree-id823 . -15) (undo-tree-id824 . -15) (undo-tree-id825 . -15) (undo-tree-id826 . -15) (undo-tree-id827 . -15) (undo-tree-id828 . -15) (undo-tree-id829 . -15) (undo-tree-id830 . -15) (undo-tree-id831 . -15) (undo-tree-id832 . -15) (undo-tree-id833 . -15) (undo-tree-id834 . -15) (undo-tree-id835 . -15) (undo-tree-id836 . -15) (undo-tree-id837 . -15) (undo-tree-id838 . -15) (undo-tree-id839 . -15) (undo-tree-id840 . -15) (undo-tree-id841 . -15) (undo-tree-id842 . -15) (undo-tree-id843 . -15) (undo-tree-id844 . -15) (undo-tree-id845 . -15) (undo-tree-id846 . -15) (undo-tree-id847 . -15) (undo-tree-id848 . -15) (undo-tree-id849 . -15) (undo-tree-id850 . -15) (undo-tree-id851 . -15) (undo-tree-id852 . -15) (undo-tree-id853 . -15) (undo-tree-id854 . -15) (undo-tree-id855 . -15) (undo-tree-id856 . -15) (undo-tree-id857 . -15) (undo-tree-id858 . -15) (undo-tree-id859 . -15) (undo-tree-id860 . -15) (undo-tree-id861 . -15) (undo-tree-id862 . -15) (undo-tree-id863 . -15) (undo-tree-id864 . -15) (undo-tree-id865 . -15) (undo-tree-id866 . -15) (undo-tree-id867 . -15) (undo-tree-id868 . -15) (undo-tree-id869 . -15) (undo-tree-id870 . -5) (7240 . 7245) 7251 (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -7251) (undo-tree-id871 . -1) (undo-tree-id872 . 1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) 7252) nil (25733 14666 197831 170000) 0 nil])
([nil nil ((7252 . 7253) (7222 . 7258) (#("- 
- Scope
  - Local
  - Global
 ***" 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 2 3 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 3 11 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 11 20 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 20 21 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 21 23 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent))) 23 28 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent))) 28 31 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 31 32 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 32 33 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent))) 33 34 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t org-emphasis t) 34 35 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) face (bold) font-lock-multiline t org-emphasis t) 35 36 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t org-emphasis t)) . 7222) (undo-tree-id138 . -36) (undo-tree-id139 . -36) (undo-tree-id140 . -11) (undo-tree-id141 . -11) (undo-tree-id142 . -11) (undo-tree-id143 . -11) (undo-tree-id144 . -21) (undo-tree-id145 . -11) (undo-tree-id146 . -11) (undo-tree-id147 . -11) (undo-tree-id148 . -11) (undo-tree-id149 . -11) (undo-tree-id150 . -11) (undo-tree-id151 . -11) (undo-tree-id152 . -11) (undo-tree-id153 . -11) (undo-tree-id154 . -11) (undo-tree-id155 . -11) (undo-tree-id156 . -11) (undo-tree-id157 . -11) (undo-tree-id158 . -11) (undo-tree-id159 . -11) (undo-tree-id160 . -11) (undo-tree-id161 . -11) (undo-tree-id162 . -11) (undo-tree-id163 . -11) (undo-tree-id164 . -11) (undo-tree-id165 . -11) (undo-tree-id166 . -11) (undo-tree-id167 . -11) (undo-tree-id168 . -11) (undo-tree-id169 . -11) (undo-tree-id170 . -11) (undo-tree-id171 . -11) (undo-tree-id172 . -11) (undo-tree-id173 . -11) (undo-tree-id174 . -11) (undo-tree-id175 . -11) (undo-tree-id176 . -11) (undo-tree-id177 . -11) (undo-tree-id178 . -11) (undo-tree-id179 . -11) (undo-tree-id180 . -11) (undo-tree-id181 . -11) (undo-tree-id182 . -11) (undo-tree-id183 . -11) (undo-tree-id184 . -11) (undo-tree-id185 . -11) (undo-tree-id186 . -11) (undo-tree-id187 . -11) (undo-tree-id188 . -11) (undo-tree-id189 . -11) (undo-tree-id190 . -11) (undo-tree-id191 . -11) (undo-tree-id192 . -11) (undo-tree-id193 . -11) (undo-tree-id194 . -11) (undo-tree-id195 . -11) (undo-tree-id196 . -11) (undo-tree-id197 . -11) (undo-tree-id198 . -11) (undo-tree-id199 . -11) (undo-tree-id200 . -11) (undo-tree-id201 . -11) (undo-tree-id202 . -11) (undo-tree-id203 . -11) (undo-tree-id204 . -11) (undo-tree-id205 . -11) (undo-tree-id206 . -11) (undo-tree-id207 . -11) (undo-tree-id208 . -11) (undo-tree-id209 . -11) (undo-tree-id210 . -11) (undo-tree-id211 . -11) (undo-tree-id212 . -11) (undo-tree-id213 . -11) (undo-tree-id214 . -11) (undo-tree-id215 . -11) (undo-tree-id216 . -11) (undo-tree-id217 . -11) (undo-tree-id218 . -11) (undo-tree-id219 . -11) (undo-tree-id220 . -11) (undo-tree-id221 . -11) (undo-tree-id222 . -11) (undo-tree-id223 . -11) (undo-tree-id224 . -11) (undo-tree-id225 . -11) (undo-tree-id226 . -11) (undo-tree-id227 . -11) (undo-tree-id228 . -11) (undo-tree-id229 . -11) (undo-tree-id230 . -11) (undo-tree-id231 . -11) (undo-tree-id232 . -11) (undo-tree-id233 . -11) (undo-tree-id234 . -11) (undo-tree-id235 . -11) (undo-tree-id236 . -11) (undo-tree-id237 . -11) (undo-tree-id238 . -11) (undo-tree-id239 . -11) (undo-tree-id240 . -11) (undo-tree-id241 . -11) (undo-tree-id242 . -11) (undo-tree-id243 . -11) (undo-tree-id244 . -11) (undo-tree-id245 . -11) (undo-tree-id246 . -11) (undo-tree-id247 . -11) (undo-tree-id248 . -11) (undo-tree-id249 . -11) (undo-tree-id250 . -11) (undo-tree-id251 . -11) (undo-tree-id252 . -11) (undo-tree-id253 . -11) (undo-tree-id254 . -11) (undo-tree-id255 . -11) (undo-tree-id256 . -11) (undo-tree-id257 . -11) (undo-tree-id258 . -11) (undo-tree-id259 . -11) (undo-tree-id260 . -11) (undo-tree-id261 . -11) (undo-tree-id262 . -11) (undo-tree-id263 . -11) (undo-tree-id264 . -11) (undo-tree-id265 . -11) (undo-tree-id266 . -11) (undo-tree-id267 . -11) (undo-tree-id268 . -11) (undo-tree-id269 . -11) (undo-tree-id270 . -11) (undo-tree-id271 . -11) (undo-tree-id272 . -11) (undo-tree-id273 . -11) (undo-tree-id274 . -11) (undo-tree-id275 . -11) (undo-tree-id276 . -11) (undo-tree-id277 . -11) (undo-tree-id278 . -21) (undo-tree-id279 . -21) (undo-tree-id280 . -21) (undo-tree-id281 . -21) (undo-tree-id282 . -21) (undo-tree-id283 . -21) (undo-tree-id284 . -21) (undo-tree-id285 . -21) (undo-tree-id286 . -21) (undo-tree-id287 . -21) (undo-tree-id288 . -21) (undo-tree-id289 . -21) (undo-tree-id290 . -21) (undo-tree-id291 . -21) (undo-tree-id292 . -21) (undo-tree-id293 . -21) (undo-tree-id294 . -21) (undo-tree-id295 . -21) (undo-tree-id296 . -21) (undo-tree-id297 . -21) (undo-tree-id298 . -21) (undo-tree-id299 . -21) (undo-tree-id300 . -21) (undo-tree-id301 . -21) (undo-tree-id302 . -21) (undo-tree-id303 . -21) (undo-tree-id304 . -21) (undo-tree-id305 . -21) (undo-tree-id306 . -21) (undo-tree-id307 . -21) (undo-tree-id308 . -21) (undo-tree-id309 . -21) (undo-tree-id310 . -21) (undo-tree-id311 . -21) (undo-tree-id312 . -21) (undo-tree-id313 . -21) (undo-tree-id314 . -21) (undo-tree-id315 . -21) (undo-tree-id316 . -21) (undo-tree-id317 . -21) (undo-tree-id318 . -21) (undo-tree-id319 . -21) (undo-tree-id320 . -21) (undo-tree-id321 . -21) (undo-tree-id322 . -21) (undo-tree-id323 . -21) (undo-tree-id324 . -21) (undo-tree-id325 . -21) (undo-tree-id326 . -21) (undo-tree-id327 . -21) (undo-tree-id328 . -21) (undo-tree-id329 . -21) (undo-tree-id330 . -21) (undo-tree-id331 . -21) (undo-tree-id332 . -21) (undo-tree-id333 . -21) (undo-tree-id334 . -21) (undo-tree-id335 . -21) (undo-tree-id336 . -21) (undo-tree-id337 . -21) (undo-tree-id338 . -21) (undo-tree-id339 . -21) (undo-tree-id340 . -21) (undo-tree-id341 . -21) (undo-tree-id342 . -21) (undo-tree-id343 . -21) (undo-tree-id344 . -21) (undo-tree-id345 . -21) (undo-tree-id346 . -21) (undo-tree-id347 . -21) (undo-tree-id348 . -21) (undo-tree-id349 . -21) (undo-tree-id350 . -21) (undo-tree-id351 . -21) (undo-tree-id352 . -21) (undo-tree-id353 . -21) (undo-tree-id354 . -21) (undo-tree-id355 . -21) (undo-tree-id356 . -21) (undo-tree-id357 . -21) (undo-tree-id358 . -21) (undo-tree-id359 . -21) (undo-tree-id360 . -21) (undo-tree-id361 . -21) (undo-tree-id362 . -21) (undo-tree-id363 . -21) (undo-tree-id364 . -21) (undo-tree-id365 . -21) (undo-tree-id366 . -21) (undo-tree-id367 . -21) (undo-tree-id368 . -21) (undo-tree-id369 . -21) (undo-tree-id370 . -21) (undo-tree-id371 . -21) (undo-tree-id372 . -21) (undo-tree-id373 . -21) (undo-tree-id374 . -21) (undo-tree-id375 . -21) (undo-tree-id376 . -21) (undo-tree-id377 . -21) (undo-tree-id378 . -21) (undo-tree-id379 . -21) (undo-tree-id380 . -21) (undo-tree-id381 . -21) (undo-tree-id382 . -21) (undo-tree-id383 . -21) (undo-tree-id384 . -21) (undo-tree-id385 . -21) (undo-tree-id386 . -21) (undo-tree-id387 . -21) (undo-tree-id388 . -21) (undo-tree-id389 . -21) (undo-tree-id390 . -21) (undo-tree-id391 . -21) (undo-tree-id392 . -21) (undo-tree-id393 . -21) (undo-tree-id394 . -21) (undo-tree-id395 . -21) (undo-tree-id396 . -21) (undo-tree-id397 . -21) (undo-tree-id398 . -21) (undo-tree-id399 . -21) (undo-tree-id400 . -21) (undo-tree-id401 . -21) (undo-tree-id402 . -21) (undo-tree-id403 . -21) (undo-tree-id404 . -21) (undo-tree-id405 . -33) (undo-tree-id406 . -33) (undo-tree-id407 . -33) (undo-tree-id408 . -33) (undo-tree-id409 . -33) (undo-tree-id410 . -33) (undo-tree-id411 . -33) (undo-tree-id412 . -33) (undo-tree-id413 . -33) (undo-tree-id414 . -33) (undo-tree-id415 . -33) (undo-tree-id416 . -33) (undo-tree-id417 . -33) (undo-tree-id418 . -33) (undo-tree-id419 . -33) (undo-tree-id420 . -33) (undo-tree-id421 . -33) (undo-tree-id422 . -33) (undo-tree-id423 . -33) (undo-tree-id424 . -33) (undo-tree-id425 . -33) (undo-tree-id426 . -33) (undo-tree-id427 . -33) (undo-tree-id428 . -33) (undo-tree-id429 . -33) (undo-tree-id430 . -33) (undo-tree-id431 . -33) (undo-tree-id432 . -33) (undo-tree-id433 . -33) (undo-tree-id434 . -33) (undo-tree-id435 . -33) (undo-tree-id436 . -33) (undo-tree-id437 . -33) (undo-tree-id438 . -33) (undo-tree-id439 . -33) (undo-tree-id440 . -34) (undo-tree-id441 . -34) (undo-tree-id442 . -34) (undo-tree-id443 . -34) (undo-tree-id444 . -34) (undo-tree-id445 . -34) (undo-tree-id446 . -34) (undo-tree-id447 . -35) (undo-tree-id448 . -35) (undo-tree-id449 . -35) (undo-tree-id450 . -35) (undo-tree-id451 . -35) (undo-tree-id452 . -35) (undo-tree-id453 . -35) (undo-tree-id454 . -32) (undo-tree-id455 . -33) (undo-tree-id456 . -36) (undo-tree-id457 . -36) (undo-tree-id458 . -36) (undo-tree-id459 . -36) (undo-tree-id460 . -36) (undo-tree-id461 . -36) (undo-tree-id462 . -36) (undo-tree-id463 . -32) (undo-tree-id464 . -33) (undo-tree-id465 . -36) (undo-tree-id466 . -36) (undo-tree-id467 . -36) (undo-tree-id468 . -36) (undo-tree-id469 . -36) (undo-tree-id470 . -36) (undo-tree-id471 . -36) (undo-tree-id472 . -32) (undo-tree-id473 . -33) (undo-tree-id474 . -36) (undo-tree-id475 . -36) (undo-tree-id476 . -36) (undo-tree-id477 . -36) (undo-tree-id478 . -36) (undo-tree-id479 . -36) (undo-tree-id480 . -36) (undo-tree-id481 . -32) (undo-tree-id482 . -33) (undo-tree-id483 . -36) (undo-tree-id484 . -36) (undo-tree-id485 . -36) (undo-tree-id486 . -36) (undo-tree-id487 . -36) (undo-tree-id488 . -36) (undo-tree-id489 . -36) (undo-tree-id490 . -32) (undo-tree-id491 . -33) (undo-tree-id492 . -36) (undo-tree-id493 . -36) (undo-tree-id494 . -36) (undo-tree-id495 . -36) (undo-tree-id496 . -36) (undo-tree-id497 . -36) (undo-tree-id498 . -36) (undo-tree-id499 . -32) (undo-tree-id500 . -33) (undo-tree-id501 . -36) (undo-tree-id502 . -36) (undo-tree-id503 . -36) (undo-tree-id504 . -36) (undo-tree-id505 . -36) (undo-tree-id506 . -36) (undo-tree-id507 . -36) (undo-tree-id508 . -36) (undo-tree-id509 . -36) (undo-tree-id510 . -36) (undo-tree-id511 . -36) (undo-tree-id512 . -36) (undo-tree-id513 . -36) (undo-tree-id514 . -36) (undo-tree-id515 . -36) (undo-tree-id516 . -36) (undo-tree-id517 . -36) (undo-tree-id518 . -36) (undo-tree-id519 . -36) (undo-tree-id520 . -36) (undo-tree-id521 . -36) (undo-tree-id522 . -36) (undo-tree-id523 . -36) (undo-tree-id524 . -36) (undo-tree-id525 . -36) (undo-tree-id526 . -36) (undo-tree-id527 . -36) (undo-tree-id528 . -36) (undo-tree-id529 . -36) (undo-tree-id530 . -36) (undo-tree-id531 . -36) (undo-tree-id532 . -36) (undo-tree-id533 . -36) (undo-tree-id534 . -36) (undo-tree-id535 . -36) (undo-tree-id536 . -36) (undo-tree-id537 . -36) (undo-tree-id538 . -36) (undo-tree-id539 . -36) (undo-tree-id540 . -36) (undo-tree-id541 . -36) (undo-tree-id542 . -36) (undo-tree-id543 . -36) (undo-tree-id544 . -36) (undo-tree-id545 . -36) (undo-tree-id546 . -36) (undo-tree-id547 . -36) (undo-tree-id548 . -36) (undo-tree-id549 . -36) (undo-tree-id550 . -36) (undo-tree-id551 . -36) (undo-tree-id552 . -36) (undo-tree-id553 . -36) (undo-tree-id554 . -36) (undo-tree-id555 . -36) (undo-tree-id556 . -36) (undo-tree-id557 . -36) (undo-tree-id558 . -36) (undo-tree-id559 . -36) (undo-tree-id560 . -36) (undo-tree-id561 . -36) (undo-tree-id562 . -36) (undo-tree-id563 . -36) (undo-tree-id564 . -36) (undo-tree-id565 . -36) (undo-tree-id566 . -36) (undo-tree-id567 . -36) (undo-tree-id568 . -36) (undo-tree-id569 . -36) (undo-tree-id570 . -36) (undo-tree-id571 . -36) (undo-tree-id572 . -36) (undo-tree-id573 . -36) (undo-tree-id574 . -36) (undo-tree-id575 . -36) (undo-tree-id576 . -3) (7222 . 7225) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . 7255) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1)) nil (25733 14666 196797 982000) 0 nil])
([nil nil ((#("  ***
" 0 2 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 2 3 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-multiline t org-emphasis t invisible t) 3 4 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t) 4 5 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-multiline t org-emphasis t invisible t) 5 6 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 7251) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) 7252) nil (25733 14666 186135 154000) 0 nil])
([nil nil ((#("- 
" 0 1 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 7251) (undo-tree-id9 . -1) (undo-tree-id10 . 1) (undo-tree-id11 . 1) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -3) (undo-tree-id16 . -3) (undo-tree-id17 . -3) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -3) (undo-tree-id22 . -3) (undo-tree-id23 . -3) (undo-tree-id24 . -3) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) 7252) nil (25733 14666 186077 895000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -7255) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 7256 (7251 . 7256)) nil (25733 14666 180447 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7323 . 7324) (nil fontified nil 7298 . 7324) (nil fontified nil 7232 . 7298) (7232 . 7324) 7231 (t 25733 14666 225112 682000)) nil (25733 14750 746457 757000) 0 nil])
([nil nil ((7229 . 7230) (#("  " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 1 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 7229) (undo-tree-id1546 . -2) (undo-tree-id1547 . -2) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -2) (undo-tree-id1551 . -1) (#("
" 0 1 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -7229) (undo-tree-id1552 . -1) 7228) nil (25733 14750 746452 339000) 0 nil])
([nil nil ((7229 . 7230)) nil (25733 14750 746441 636000) 0 nil])
([nil nil ((#("Since " 0 6 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t)) . 7231) (undo-tree-id1526 . -5) (undo-tree-id1527 . -5) (undo-tree-id1528 . -5) (undo-tree-id1529 . -6) (undo-tree-id1530 . -5) (undo-tree-id1531 . -4) (undo-tree-id1532 . -4) (undo-tree-id1533 . -4) (undo-tree-id1534 . -4) (undo-tree-id1535 . -4) (undo-tree-id1536 . -4) (undo-tree-id1537 . -4) (undo-tree-id1538 . -5) (undo-tree-id1539 . -5) (undo-tree-id1540 . -5) (undo-tree-id1541 . -5) (undo-tree-id1542 . -5) (undo-tree-id1543 . -5) (undo-tree-id1544 . -5) (undo-tree-id1545 . -5) 7236) nil (25733 14750 746439 278000) 0 nil])
([nil nil ((7231 . 7232) (#("t" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t)) . 7231)) nil (25733 14750 746415 263000) 0 nil])
([nil nil ((#(", they" 0 6 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t)) . 7284)) nil (25733 14750 746413 758000) 0 nil])
([nil nil ((#("are called local variables- Local
" 0 25 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 25 26 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t) 26 33 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 33 34 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 7285) (undo-tree-id1499 . -25) (undo-tree-id1500 . -25) (undo-tree-id1501 . -26) (undo-tree-id1502 . -25) (undo-tree-id1503 . -25) (undo-tree-id1504 . -25) (undo-tree-id1505 . -25) (undo-tree-id1506 . -25) (undo-tree-id1507 . -25) (undo-tree-id1508 . -25) (undo-tree-id1509 . -25) (undo-tree-id1510 . -25) (undo-tree-id1511 . -25) (undo-tree-id1512 . -25) (undo-tree-id1513 . -25) (undo-tree-id1514 . -25) (undo-tree-id1515 . -25) (undo-tree-id1516 . -25) (undo-tree-id1517 . -25) (undo-tree-id1518 . -25) (undo-tree-id1519 . -25) (undo-tree-id1520 . -25) (undo-tree-id1521 . -25) (undo-tree-id1522 . -25) (undo-tree-id1523 . -25) (undo-tree-id1524 . -25) (undo-tree-id1525 . -25)) nil (25733 14750 746411 308000) 0 nil])
([nil nil ((7239 . 7243) (#("c" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . -7239) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) 7240 (7235 . 7240) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . -7235) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) 7236 (7233 . 7236) (7231 . 7286) (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 7230) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (7231 . 7232) (#("Their scope is restricted to the body of the function" 0 53 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t)) . 7231) (undo-tree-id1453 . 52) (undo-tree-id1454 . 53) (undo-tree-id1455 . -17) (undo-tree-id1456 . -6) (undo-tree-id1457 . -6) (undo-tree-id1458 . -6) (undo-tree-id1459 . -6) (undo-tree-id1460 . -6) (undo-tree-id1461 . -6) (undo-tree-id1462 . -6) (undo-tree-id1463 . -12) (undo-tree-id1464 . -12) (undo-tree-id1465 . -12) (undo-tree-id1466 . -12) (undo-tree-id1467 . -12) (undo-tree-id1468 . -12) (undo-tree-id1469 . -12) (undo-tree-id1470 . -15) (undo-tree-id1471 . -15) (undo-tree-id1472 . -15) (undo-tree-id1473 . -15) (undo-tree-id1474 . -15) (undo-tree-id1475 . -15) (undo-tree-id1476 . -15) (undo-tree-id1477 . -26) (undo-tree-id1478 . -26) (undo-tree-id1479 . -26) (undo-tree-id1480 . -26) (undo-tree-id1481 . -26) (undo-tree-id1482 . -26) (undo-tree-id1483 . -26) (undo-tree-id1484 . -53) (undo-tree-id1485 . -53) (undo-tree-id1486 . -53) (undo-tree-id1487 . -53) (undo-tree-id1488 . -53) (undo-tree-id1489 . -53) (undo-tree-id1490 . -53) (undo-tree-id1491 . -53) (undo-tree-id1492 . -52) (undo-tree-id1493 . -52) (undo-tree-id1494 . -52) (undo-tree-id1495 . -52) (undo-tree-id1496 . -52) (undo-tree-id1497 . -52) (undo-tree-id1498 . -52)) nil (25733 14750 746306 419000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 7237) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1)) nil (25733 14750 740569 533000) 0 nil])
([nil nil ((7306 . 7308)) nil (25733 14750 740506 351000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7346 . 7347) (nil fontified nil 7313 . 7347) (7313 . 7347) 7312 (t 25733 14750 768073 636000)) nil (25733 14806 408485 760000) 0 nil])
([nil nil ((7347 . 7352)) nil (25733 14806 408454 120000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7363 . 7364) (nil fontified nil 7352 . 7364) (7352 . 7364) 7351 (t 25733 14806 435578 626000)) nil (25733 14828 657505 81000) 0 nil])
([nil nil ((7364 . 7365)) nil (25733 14837 134750 537000) 0 nil] [nil nil ((7363 . 7369) (#("S" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3)) . 7363) (undo-tree-id1553 . -1)) ((7363 . 7364) (#("
*** S" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 1 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 4 5 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 5 6 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3)) . 7363) (undo-tree-id1554 . -5) (undo-tree-id1555 . -5) (undo-tree-id1556 . -5)) (25733 14828 656654 36000) 0 nil])
([nil nil ((7364 . 7369) (#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . 7364) (7365 . 7365) 7364) nil (25733 14837 134716 673000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 7392 . 7393) (nil fontified nil 7369 . 7393) (7369 . 7393) 7368 (t 25733 14837 203362 625000)) nil (25733 14851 840731 555000) 0 nil])
([nil nil ((7393 . 7398)) nil (25733 14851 840699 65000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7422 . 7423) (nil fontified nil 7398 . 7423) (7398 . 7423) 7397 (t 25733 14851 875273 136000)) nil (25733 14871 226397 152000) 0 nil])
([nil nil ((7423 . 7428)) nil (25733 14871 226369 150000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7454 . 7455) (nil fontified nil 7428 . 7455) (7428 . 7455) 7427 (t 25733 14871 259167 734000)) nil (25733 14889 730762 680000) 0 nil])
([nil nil ((7455 . 7460)) nil (25733 14889 730753 9000) 0 nil])
([nil nil ((7349 . 7393) (#("src" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 7349) (undo-tree-id1569 . -1) (undo-tree-id1570 . -3) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -2) (undo-tree-id1594 . -2) (undo-tree-id1595 . -2) (undo-tree-id1596 . -2) (undo-tree-id1597 . -2) (undo-tree-id1598 . -2) (undo-tree-id1599 . -2) (undo-tree-id1600 . -2) (undo-tree-id1601 . -3) (undo-tree-id1602 . -3) (undo-tree-id1603 . -3) (undo-tree-id1604 . -3) (undo-tree-id1605 . -3) (undo-tree-id1606 . -3) (undo-tree-id1607 . -3) (undo-tree-id1608 . -3) 7352 (7349 . 7352) (#("r" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -7349) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) 7350 (7349 . 7350) (7348 . 7349) (7347 . 7348) (t 25733 14889 759080 295000) 7346) nil (25733 14958 301551 711000) 0 nil])
([nil nil ((7360 . 7365)) nil (25733 14958 301165 652000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -7386) (undo-tree-id1557 . -2) (undo-tree-id1558 . -2) (undo-tree-id1559 . -2) (undo-tree-id1560 . -2) (undo-tree-id1561 . -2) (undo-tree-id1562 . -2) (undo-tree-id1563 . -2) (undo-tree-id1564 . -2) (undo-tree-id1565 . -2) (undo-tree-id1566 . -2) (undo-tree-id1567 . -2) 7388 (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 7389) (undo-tree-id1568 . -2) 7386 (7385 . 7388) 7364) nil (25733 14958 301150 234000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7411 . 7412) (nil fontified nil 7386 . 7412) (7386 . 7412)) nil (25733 14958 301001 972000) 0 nil])
([nil nil ((7399 . 7400) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 7399)) nil (25733 14958 300954 335000) 0 nil])
([nil nil ((7386 . 7388) (7412 . 7413) (t 25733 14958 390860 708000) 7411) nil (25733 15197 891233 439000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7429 . 7430) (nil fontified nil 7415 . 7430) (7415 . 7430)) nil (25733 15197 891228 912000) 0 nil])
([nil nil ((7388 . 7390) (7415 . 7417) 7386) nil (25733 15197 891224 802000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 7388) 7386) nil (25733 15197 891222 719000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -7433) (undo-tree-id1656 . -2) (undo-tree-id1657 . -2) (undo-tree-id1658 . -2) (undo-tree-id1659 . -2) (undo-tree-id1660 . -2) (undo-tree-id1661 . -2) (undo-tree-id1662 . -2) (undo-tree-id1663 . -2) (undo-tree-id1664 . -2) (undo-tree-id1665 . -2) (undo-tree-id1666 . -2) 7435 (7432 . 7435) 7429) nil (25733 15197 891219 357000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7445 . 7446) (nil fontified nil 7433 . 7446) (7433 . 7446)) nil (25733 15197 891178 637000) 0 nil])
([nil nil ((7388 . 7390) (7415 . 7416) (7417 . 7418) (7433 . 7435) 7386) nil (25733 15197 891175 600000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -7454) (undo-tree-id1645 . -2) (undo-tree-id1646 . -2) (undo-tree-id1647 . -2) (undo-tree-id1648 . -2) (undo-tree-id1649 . -2) (undo-tree-id1650 . -2) (undo-tree-id1651 . -2) (undo-tree-id1652 . -2) (undo-tree-id1653 . -2) (undo-tree-id1654 . -2) (undo-tree-id1655 . -2) 7456 (7453 . 7456) 7453) nil (25733 15197 891169 629000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7494 . 7495) (nil fontified nil 7466 . 7495) (nil fontified nil 7453 . 7466) (7453 . 7495)) nil (25733 15197 891136 374000) 0 nil])
([nil nil ((7390 . 7392) (7417 . 7418) (7421 . 7422) (7437 . 7438) (7439 . 7440) (7453 . 7455) (7466 . 7468) 7386 (7495 . 7498)) nil (25733 15197 891132 152000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7527 . 7528) (nil fontified nil 7508 . 7528) (7508 . 7528) 7507) nil (25733 15197 891121 197000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7388) 7386) nil (25733 15197 891116 916000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7417) 7386) nil (25733 15197 891112 348000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7435) 7386) nil (25733 15197 891104 841000) 0 nil])
([nil nil ((7466 . 7472) 7386) nil (25733 15197 891099 806000) 0 nil])
([nil nil ((7472 . 7473) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7472)) nil (25733 15197 891093 138000) 0 nil])
([nil nil ((7526 . 7528) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 7525) (undo-tree-id1634 . -2) (undo-tree-id1635 . -2) (undo-tree-id1636 . -2) (undo-tree-id1637 . -2) (undo-tree-id1638 . -2) (undo-tree-id1639 . -2) (undo-tree-id1640 . -2) (undo-tree-id1641 . -2) (undo-tree-id1642 . -2) (undo-tree-id1643 . -2) (undo-tree-id1644 . -2) (7527 . 7528) (7524 . 7527) 7510) nil (25733 15197 891071 268000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7564 . 7565) (nil fontified nil 7528 . 7565) (7528 . 7565) 7527 (t 25733 15197 987147 989000)) nil (25733 15232 644306 75000) 0 nil])
([nil nil ((7544 . 7545) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 7544) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1)) nil (25733 15232 644291 877000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7593 . 7594) (nil fontified nil 7566 . 7594) (7566 . 7594) (t 25733 15232 675298 66000)) nil (25733 15309 524487 506000) 0 nil])
([nil nil ((7388 . 7390) (7415 . 7417) (7435 . 7437) (7449 . 7451) (7472 . 7474) (7502 . 7504) (7528 . 7530) (7566 . 7568) 7386) nil (25733 15309 524485 598000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 7540) 7386) nil (25733 15309 524482 617000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7388) 7386) nil (25733 15309 524481 313000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7417) 7386) nil (25733 15309 524479 610000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7435) 7386) nil (25733 15309 524477 877000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7451) 7386) nil (25733 15309 524475 739000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7472) 7386) nil (25733 15309 524474 531000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 7504) (undo-tree-id1707 . -2) (undo-tree-id1708 . -2) (undo-tree-id1709 . -2) (undo-tree-id1710 . -2) 7386) nil (25733 15309 524471 860000) 0 nil])
([nil nil ((7525 . 7527)) nil (25733 15309 524464 684000) 0 nil])
([nil nil ((7598 . 7600) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 7597) (undo-tree-id1681 . -2) (undo-tree-id1682 . -2) (undo-tree-id1683 . -2) (undo-tree-id1684 . -2) (undo-tree-id1685 . -2) (undo-tree-id1686 . -2) (undo-tree-id1687 . -2) (undo-tree-id1688 . -2) (undo-tree-id1689 . -2) (undo-tree-id1690 . -2) (undo-tree-id1691 . -2) (7599 . 7600) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 7525) (undo-tree-id1692 . -2) (undo-tree-id1693 . -2) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) 7386 (7598 . 7601) 7569) nil (25733 15309 524455 724000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7627 . 7628) (nil fontified nil 7600 . 7628) (7600 . 7628) 7599 (t 25733 15309 559708 18000)) nil (25733 15346 787812 677000) 0 nil])
([nil nil ((7630 . 7632) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 7629) (undo-tree-id1711 . -2) (undo-tree-id1712 . -2) (undo-tree-id1713 . -2) (undo-tree-id1714 . -2) (undo-tree-id1715 . -2) (undo-tree-id1716 . -2) (undo-tree-id1717 . -2) (undo-tree-id1718 . -2) (undo-tree-id1719 . -2) (undo-tree-id1720 . -2) (undo-tree-id1721 . -2) (7628 . 7632)) nil (25733 15346 787800 944000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -7630) (undo-tree-id1722 . -2) (undo-tree-id1723 . -2) (undo-tree-id1724 . -2) (undo-tree-id1725 . -2) (undo-tree-id1726 . -2) (undo-tree-id1727 . -2) (undo-tree-id1728 . -2) (undo-tree-id1729 . -2) (undo-tree-id1730 . -2) (undo-tree-id1731 . -2) (undo-tree-id1732 . -2) (undo-tree-id1733 . -2) (undo-tree-id1734 . -2) (undo-tree-id1735 . -2) (undo-tree-id1736 . -2) (undo-tree-id1737 . -2) (undo-tree-id1738 . -2) (undo-tree-id1739 . -2) (undo-tree-id1740 . -2) (undo-tree-id1741 . -2) (undo-tree-id1742 . -2) (undo-tree-id1743 . -2) (undo-tree-id1744 . -2) (undo-tree-id1745 . -2) 7632 (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 7633) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) 7386 (7629 . 7632) (t 25733 15346 863941 776000) 7629) nil (25733 15354 911477 131000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7645 . 7646) (nil fontified nil 7630 . 7646) (7630 . 7646) (t 25733 15354 951995 227000)) nil (25733 15401 48375 747000) 0 nil])
([nil nil ((7668 . 7670) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 7667) (undo-tree-id1773 . -2) (undo-tree-id1774 . -2) (undo-tree-id1775 . -2) (undo-tree-id1776 . -2) (undo-tree-id1777 . -2) (undo-tree-id1778 . -2) (undo-tree-id1779 . -2) (undo-tree-id1780 . -2) (undo-tree-id1781 . -2) (undo-tree-id1782 . -2) (undo-tree-id1783 . -2) (7669 . 7670) (7388 . 7390) (7415 . 7416) (7417 . 7418) (7433 . 7434) (7435 . 7436) (7449 . 7451) (7464 . 7466) (7504 . 7506) (7526 . 7527) (7528 . 7529) (7566 . 7567) (7568 . 7569) (7598 . 7600) (7630 . 7632) 7386 (7646 . 7649)) nil (25733 15401 48371 807000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7682 . 7683) (nil fontified nil 7667 . 7683) (7667 . 7683)) nil (25733 15401 48323 339000) 0 nil])
([nil nil ((7390 . 7392) (7417 . 7418) (7421 . 7422) (7437 . 7438) (7441 . 7442) (7455 . 7457) (7472 . 7474) (7516 . 7518) (7538 . 7539) (7542 . 7543) (7580 . 7581) (7584 . 7585) (7614 . 7616) (7667 . 7669) 7386 (t 25733 15401 80317 861000)) nil (25733 15437 862368 99000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 7552) (undo-tree-id1797 . -2) (undo-tree-id1798 . -2) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 7704) 7386) nil (25733 15437 862358 368000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7592) 7386) nil (25733 15437 862348 93000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7388) 7386) nil (25733 15437 862342 698000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7417) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7437) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7441) (#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7457) (undo-tree-id1795 . -3) (#("    " 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7484) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7518) (undo-tree-id1796 . -2) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7522) (#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7618) 7386) nil (25733 15457 912688 647000) 0 nil])
([nil nil ((7574 . 7578) (#("tail" 0 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7574) (undo-tree-id1823 . -3) (undo-tree-id1824 . -3) (undo-tree-id1825 . -3) (undo-tree-id1826 . -4) (undo-tree-id1827 . -3) (undo-tree-id1828 . -3) (undo-tree-id1829 . -3) (undo-tree-id1830 . -3) (undo-tree-id1831 . -3) (undo-tree-id1832 . -3) (undo-tree-id1833 . -3) (undo-tree-id1834 . -3) (undo-tree-id1835 . -3) 7577 (t 25733 15437 940596 176000)) nil (25733 15682 596390 858000) 0 nil] [nil nil ((#("(setf long-list '(a b c d e f g h i))" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 1 16 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16 17 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17 18 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 18 35 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 35 36 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 36 37 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block))) . 7528) (undo-tree-id1799 . -35) (undo-tree-id1800 . -15) (undo-tree-id1801 . -15) (undo-tree-id1802 . -15) (undo-tree-id1803 . -15) (undo-tree-id1804 . -15) (undo-tree-id1805 . -15) (undo-tree-id1806 . -15) (undo-tree-id1807 . -15) (undo-tree-id1808 . 37) (undo-tree-id1809 . -1) (undo-tree-id1810 . 1) (undo-tree-id1811 . -37) (t 25733 15437 940596 176000)) ((7528 . 7565)) (25733 15457 909723 187000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 7597)) nil (25733 15682 596337 991000) 0 nil])
nil
([nil nil ((#("*** SIDE EFFECTS
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 15 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 15 16 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 16 17 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 7679) (undo-tree-id1812 . -4) (undo-tree-id1813 . -4) (undo-tree-id1814 . -4) (undo-tree-id1815 . -4) (undo-tree-id1816 . -4) (undo-tree-id1817 . -4) (undo-tree-id1818 . -4) (undo-tree-id1819 . -4) (undo-tree-id1820 . -4) (undo-tree-id1821 . -4) (undo-tree-id1822 . -4) 7683) nil (25733 15682 596317 742000) 0 nil])
([nil nil ((7707 . 7708) (t 25733 15682 646819 388000) 7683) nil (25733 15790 44342 698000) 0 nil])
([nil nil ((7708 . 7752) (#("src" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 7708) (undo-tree-id2375 . -1) (undo-tree-id2376 . -3) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -2) (undo-tree-id2407 . -2) (undo-tree-id2408 . -2) (undo-tree-id2409 . -2) (undo-tree-id2410 . -2) (undo-tree-id2411 . -2) (undo-tree-id2412 . -2) (undo-tree-id2413 . -2) (undo-tree-id2414 . -3) (undo-tree-id2415 . -3) (undo-tree-id2416 . -3) (undo-tree-id2417 . -3) (undo-tree-id2418 . -3) (undo-tree-id2419 . -3) (undo-tree-id2420 . -3) (undo-tree-id2421 . -3) 7711 (7708 . 7711)) nil (25733 15790 44337 102000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t src-block t)) . -7743) (undo-tree-id2365 . -2) (undo-tree-id2366 . -2) (undo-tree-id2367 . -2) (undo-tree-id2368 . -2) (undo-tree-id2369 . -2) (undo-tree-id2370 . -2) (undo-tree-id2371 . -2) (undo-tree-id2372 . -2) (undo-tree-id2373 . -2) (undo-tree-id2374 . -2) 7745 (7742 . 7745) 7740) nil (25733 15790 44272 37000) 0 nil])
([nil nil ((7707 . 7708) 7706) nil (25733 15790 44254 473000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8148 . 8149) (nil fontified nil 8113 . 8149) (nil fontified nil 8092 . 8113) (nil fontified nil 8071 . 8092) (nil fontified nil 8026 . 8071) (nil fontified nil 7942 . 8026) (nil fontified nil 7875 . 7942) (nil fontified nil 7800 . 7875) (nil fontified nil 7723 . 7800) (nil fontified nil 7708 . 7723) (7708 . 8149)) nil (25733 15790 44251 627000) 0 nil])
([nil nil ((#("(defun average (x y)
(let ((sum (+ x y)))
(list x y ’average ’is (/ sum 2.0)))
" 0 21 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 21 42 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 42 77 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 77 78 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t) 78 79 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8071) (undo-tree-id2139 . -61) (undo-tree-id2140 . -19) (undo-tree-id2141 . -61) (undo-tree-id2142 . 1) (undo-tree-id2143 . -77) (undo-tree-id2144 . -61) (undo-tree-id2145 . -79) (undo-tree-id2146 . -79) (undo-tree-id2147 . -79) (undo-tree-id2148 . -79) (undo-tree-id2149 . -79) (undo-tree-id2150 . -79) (undo-tree-id2151 . -79) (undo-tree-id2152 . -79) (undo-tree-id2153 . -79) (undo-tree-id2154 . -79) (undo-tree-id2155 . -79) (undo-tree-id2156 . -79) (undo-tree-id2157 . -79) (undo-tree-id2158 . -79) (undo-tree-id2159 . -79) (undo-tree-id2160 . -79) (undo-tree-id2161 . -79) (undo-tree-id2162 . -79) (undo-tree-id2163 . -79) (undo-tree-id2164 . -79) (undo-tree-id2165 . -79) (undo-tree-id2166 . -79) (undo-tree-id2167 . -79) (undo-tree-id2168 . -79) (undo-tree-id2169 . -79) (undo-tree-id2170 . -79) (undo-tree-id2171 . -79) (undo-tree-id2172 . -79) (undo-tree-id2173 . -79) (undo-tree-id2174 . -79) (undo-tree-id2175 . -79) (undo-tree-id2176 . -79) (undo-tree-id2177 . -79) (undo-tree-id2178 . -79) (undo-tree-id2179 . -79) (undo-tree-id2180 . -79) (undo-tree-id2181 . -79) (undo-tree-id2182 . -79) (undo-tree-id2183 . -79) (undo-tree-id2184 . -79) (undo-tree-id2185 . -79) (undo-tree-id2186 . -79) (undo-tree-id2187 . -79) (undo-tree-id2188 . -79) (undo-tree-id2189 . -79) (undo-tree-id2190 . -79) (undo-tree-id2191 . -79) (undo-tree-id2192 . -79) (undo-tree-id2193 . -79) (undo-tree-id2194 . -79) (undo-tree-id2195 . -79) (undo-tree-id2196 . -79) (undo-tree-id2197 . -79) (undo-tree-id2198 . -79) (undo-tree-id2199 . -79) (undo-tree-id2200 . -79) (undo-tree-id2201 . -79) (undo-tree-id2202 . -79) (undo-tree-id2203 . -79) (undo-tree-id2204 . -79) (undo-tree-id2205 . -79) (undo-tree-id2206 . -79) (undo-tree-id2207 . -79) (undo-tree-id2208 . -79) (undo-tree-id2209 . -79) (undo-tree-id2210 . -79) (undo-tree-id2211 . -79) (undo-tree-id2212 . -79) (undo-tree-id2213 . -79) (undo-tree-id2214 . -79) (undo-tree-id2215 . -79) (undo-tree-id2216 . -79) (undo-tree-id2217 . -79) (undo-tree-id2218 . -79) (undo-tree-id2219 . -79) (undo-tree-id2220 . -79) (undo-tree-id2221 . -79) (undo-tree-id2222 . -79) (undo-tree-id2223 . -79) (undo-tree-id2224 . -79) (undo-tree-id2225 . -79) (undo-tree-id2226 . -79) (undo-tree-id2227 . -79) (undo-tree-id2228 . -79) (undo-tree-id2229 . -79) (undo-tree-id2230 . -79) (undo-tree-id2231 . -79) (undo-tree-id2232 . -79) (undo-tree-id2233 . -79) (undo-tree-id2234 . -79) (undo-tree-id2235 . -79) (undo-tree-id2236 . -79) (undo-tree-id2237 . -79) (undo-tree-id2238 . -79) (undo-tree-id2239 . -79) (undo-tree-id2240 . -79) (undo-tree-id2241 . -79) (undo-tree-id2242 . -79) (undo-tree-id2243 . -79) (undo-tree-id2244 . -79) (undo-tree-id2245 . -79) (undo-tree-id2246 . -79) (undo-tree-id2247 . -79) (undo-tree-id2248 . -79) (undo-tree-id2249 . -79) (undo-tree-id2250 . -79) (undo-tree-id2251 . -79) (undo-tree-id2252 . -79) (undo-tree-id2253 . -79) (undo-tree-id2254 . -79) (undo-tree-id2255 . -79) (undo-tree-id2256 . -79) (undo-tree-id2257 . -79) (undo-tree-id2258 . -79) (undo-tree-id2259 . -79) (undo-tree-id2260 . -79) (undo-tree-id2261 . -79) (undo-tree-id2262 . -79) (undo-tree-id2263 . -79) (undo-tree-id2264 . -79) (undo-tree-id2265 . -79) (undo-tree-id2266 . -79) (undo-tree-id2267 . -79) (undo-tree-id2268 . -79) (undo-tree-id2269 . -79) (undo-tree-id2270 . -79) (undo-tree-id2271 . -79) (undo-tree-id2272 . -79) (undo-tree-id2273 . -79) (undo-tree-id2274 . -79) (undo-tree-id2275 . -79) (undo-tree-id2276 . -79) (undo-tree-id2277 . -79) (undo-tree-id2278 . -79) (undo-tree-id2279 . -79) (undo-tree-id2280 . -79) (undo-tree-id2281 . -79) (undo-tree-id2282 . -79) (undo-tree-id2283 . -79) (undo-tree-id2284 . -79) (undo-tree-id2285 . -79) (undo-tree-id2286 . -79) (undo-tree-id2287 . -79) (undo-tree-id2288 . -79) (undo-tree-id2289 . -79) (undo-tree-id2290 . -79) (undo-tree-id2291 . -79) (undo-tree-id2292 . -79) (undo-tree-id2293 . -79) (undo-tree-id2294 . -79) (undo-tree-id2295 . -79) (undo-tree-id2296 . -79) (undo-tree-id2297 . -79) (undo-tree-id2298 . -79) (undo-tree-id2299 . -79) (undo-tree-id2300 . -79) (undo-tree-id2301 . -79) (undo-tree-id2302 . -79) (undo-tree-id2303 . -79) (undo-tree-id2304 . -79) (undo-tree-id2305 . -79) (undo-tree-id2306 . -79) (undo-tree-id2307 . -79) (undo-tree-id2308 . -79) (undo-tree-id2309 . -79) (undo-tree-id2310 . -79) (undo-tree-id2311 . -79) (undo-tree-id2312 . -79) (undo-tree-id2313 . -79) (undo-tree-id2314 . -79) (undo-tree-id2315 . -79) (undo-tree-id2316 . -79) (undo-tree-id2317 . -79) (undo-tree-id2318 . -79) (undo-tree-id2319 . -79) (undo-tree-id2320 . -79) (undo-tree-id2321 . -79) (undo-tree-id2322 . -79) (undo-tree-id2323 . -79) (undo-tree-id2324 . -42) (undo-tree-id2325 . -78) (undo-tree-id2326 . -77) (undo-tree-id2327 . -77) (undo-tree-id2328 . -77) (undo-tree-id2329 . -77) (undo-tree-id2330 . -77) (undo-tree-id2331 . -77) (undo-tree-id2332 . -77) (undo-tree-id2333 . -77) (undo-tree-id2334 . -77) (undo-tree-id2335 . -77) (undo-tree-id2336 . -77) (undo-tree-id2337 . -77) (undo-tree-id2338 . -40) (undo-tree-id2339 . -40) (undo-tree-id2340 . -40) (undo-tree-id2341 . -40) (undo-tree-id2342 . -40) (undo-tree-id2343 . -40) (undo-tree-id2344 . -40) (undo-tree-id2345 . -19) (undo-tree-id2346 . -79) (undo-tree-id2347 . -19) (undo-tree-id2348 . -61) (undo-tree-id2349 . -19) (undo-tree-id2350 . -19) (undo-tree-id2351 . -19) (undo-tree-id2352 . -19) (undo-tree-id2353 . -19) (undo-tree-id2354 . -19) (undo-tree-id2355 . -19) (undo-tree-id2356 . -19) (undo-tree-id2357 . -19) (undo-tree-id2358 . -19) (undo-tree-id2359 . -19) (undo-tree-id2360 . -19) (undo-tree-id2361 . -19) (undo-tree-id2362 . -40) (undo-tree-id2363 . -61) (undo-tree-id2364 . -61) 8132) nil (25733 15790 44223 118000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8105 . 8106) (#("
" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8184) (8105 . 8185) 8104) nil (25733 15790 36690 331000) 0 nil])
([nil nil ((#("Another way to
create a local variable is with the LET special function. For example, since
the average of two numbers is half their sum, we might want to use a local
variable called SUM inside our AVERAGE function. " 0 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 15 92 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 92 167 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 167 216 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . 7708) (undo-tree-id1839 . -215) (undo-tree-id1840 . -215) (undo-tree-id1841 . -215) (undo-tree-id1842 . -167) (undo-tree-id1843 . -92) (undo-tree-id1844 . -15) (undo-tree-id1845 . -216) (undo-tree-id1846 . -215) (undo-tree-id1847 . -6) (undo-tree-id1848 . -6) (undo-tree-id1849 . -6) (undo-tree-id1850 . -6) (undo-tree-id1851 . -6) (undo-tree-id1852 . -6) (undo-tree-id1853 . -6) (undo-tree-id1854 . -10) (undo-tree-id1855 . -10) (undo-tree-id1856 . -10) (undo-tree-id1857 . -10) (undo-tree-id1858 . -10) (undo-tree-id1859 . -10) (undo-tree-id1860 . -10) (undo-tree-id1861 . -13) (undo-tree-id1862 . -13) (undo-tree-id1863 . -13) (undo-tree-id1864 . -13) (undo-tree-id1865 . -13) (undo-tree-id1866 . -13) (undo-tree-id1867 . -13) (undo-tree-id1868 . -20) (undo-tree-id1869 . -20) (undo-tree-id1870 . -20) (undo-tree-id1871 . -20) (undo-tree-id1872 . -20) (undo-tree-id1873 . -20) (undo-tree-id1874 . -20) (undo-tree-id1875 . -22) (undo-tree-id1876 . -22) (undo-tree-id1877 . -22) (undo-tree-id1878 . -22) (undo-tree-id1879 . -22) (undo-tree-id1880 . -22) (undo-tree-id1881 . -22) (undo-tree-id1882 . -28) (undo-tree-id1883 . -28) (undo-tree-id1884 . -28) (undo-tree-id1885 . -28) (undo-tree-id1886 . -28) (undo-tree-id1887 . -28) (undo-tree-id1888 . -28) (undo-tree-id1889 . -37) (undo-tree-id1890 . -37) (undo-tree-id1891 . -37) (undo-tree-id1892 . -37) (undo-tree-id1893 . -37) (undo-tree-id1894 . -37) (undo-tree-id1895 . -37) (undo-tree-id1896 . -40) (undo-tree-id1897 . -45) (undo-tree-id1898 . -49) (undo-tree-id1899 . -49) (undo-tree-id1900 . -49) (undo-tree-id1901 . -49) (undo-tree-id1902 . -49) (undo-tree-id1903 . -49) (undo-tree-id1904 . -49) (undo-tree-id1905 . -53) (undo-tree-id1906 . -53) (undo-tree-id1907 . -53) (undo-tree-id1908 . -53) (undo-tree-id1909 . -53) (undo-tree-id1910 . -53) (undo-tree-id1911 . -53) (undo-tree-id1912 . -61) (undo-tree-id1913 . -61) (undo-tree-id1914 . -61) (undo-tree-id1915 . -61) (undo-tree-id1916 . -61) (undo-tree-id1917 . -61) (undo-tree-id1918 . -61) (undo-tree-id1919 . -70) (undo-tree-id1920 . -70) (undo-tree-id1921 . -70) (undo-tree-id1922 . -70) (undo-tree-id1923 . -70) (undo-tree-id1924 . -70) (undo-tree-id1925 . -70) (undo-tree-id1926 . -71) (undo-tree-id1927 . -71) (undo-tree-id1928 . -71) (undo-tree-id1929 . -71) (undo-tree-id1930 . -71) (undo-tree-id1931 . -71) (undo-tree-id1932 . -71) (undo-tree-id1933 . -75) (undo-tree-id1934 . -83) (undo-tree-id1935 . -83) (undo-tree-id1936 . -83) (undo-tree-id1937 . -83) (undo-tree-id1938 . -83) (undo-tree-id1939 . -83) (undo-tree-id1940 . -83) (undo-tree-id1941 . -84) (undo-tree-id1942 . -84) (undo-tree-id1943 . -84) (undo-tree-id1944 . -84) (undo-tree-id1945 . -84) (undo-tree-id1946 . -84) (undo-tree-id1947 . -84) (undo-tree-id1948 . -90) (undo-tree-id1949 . -90) (undo-tree-id1950 . -90) (undo-tree-id1951 . -90) (undo-tree-id1952 . -90) (undo-tree-id1953 . -90) (undo-tree-id1954 . -90) (undo-tree-id1955 . -94) (undo-tree-id1956 . -94) (undo-tree-id1957 . -94) (undo-tree-id1958 . -94) (undo-tree-id1959 . -94) (undo-tree-id1960 . -94) (undo-tree-id1961 . -94) (undo-tree-id1962 . -102) (undo-tree-id1963 . -102) (undo-tree-id1964 . -102) (undo-tree-id1965 . -102) (undo-tree-id1966 . -102) (undo-tree-id1967 . -102) (undo-tree-id1968 . -102) (undo-tree-id1969 . -105) (undo-tree-id1970 . -105) (undo-tree-id1971 . -105) (undo-tree-id1972 . -105) (undo-tree-id1973 . -105) (undo-tree-id1974 . -105) (undo-tree-id1975 . -105) (undo-tree-id1976 . -109) (undo-tree-id1977 . -109) (undo-tree-id1978 . -109) (undo-tree-id1979 . -109) (undo-tree-id1980 . -109) (undo-tree-id1981 . -109) (undo-tree-id1982 . -109) (undo-tree-id1983 . -117) (undo-tree-id1984 . -117) (undo-tree-id1985 . -117) (undo-tree-id1986 . -117) (undo-tree-id1987 . -117) (undo-tree-id1988 . -117) (undo-tree-id1989 . -117) (undo-tree-id1990 . -120) (undo-tree-id1991 . -120) (undo-tree-id1992 . -120) (undo-tree-id1993 . -120) (undo-tree-id1994 . -120) (undo-tree-id1995 . -120) (undo-tree-id1996 . -120) (undo-tree-id1997 . -125) (undo-tree-id1998 . -131) (undo-tree-id1999 . -131) (undo-tree-id2000 . -131) (undo-tree-id2001 . -131) (undo-tree-id2002 . -131) (undo-tree-id2003 . -131) (undo-tree-id2004 . -131) (undo-tree-id2005 . -135) (undo-tree-id2006 . -135) (undo-tree-id2007 . -135) (undo-tree-id2008 . -135) (undo-tree-id2009 . -135) (undo-tree-id2010 . -135) (undo-tree-id2011 . -135) (undo-tree-id2012 . -136) (undo-tree-id2013 . -136) (undo-tree-id2014 . -136) (undo-tree-id2015 . -136) (undo-tree-id2016 . -136) (undo-tree-id2017 . -136) (undo-tree-id2018 . -136) (undo-tree-id2019 . -139) (undo-tree-id2020 . -139) (undo-tree-id2021 . -139) (undo-tree-id2022 . -139) (undo-tree-id2023 . -139) (undo-tree-id2024 . -139) (undo-tree-id2025 . -139) (undo-tree-id2026 . -145) (undo-tree-id2027 . -145) (undo-tree-id2028 . -145) (undo-tree-id2029 . -145) (undo-tree-id2030 . -145) (undo-tree-id2031 . -145) (undo-tree-id2032 . -145) (undo-tree-id2033 . -150) (undo-tree-id2034 . -150) (undo-tree-id2035 . -150) (undo-tree-id2036 . -150) (undo-tree-id2037 . -150) (undo-tree-id2038 . -150) (undo-tree-id2039 . -150) (undo-tree-id2040 . -153) (undo-tree-id2041 . -153) (undo-tree-id2042 . -153) (undo-tree-id2043 . -153) (undo-tree-id2044 . -153) (undo-tree-id2045 . -153) (undo-tree-id2046 . -153) (undo-tree-id2047 . -157) (undo-tree-id2048 . -157) (undo-tree-id2049 . -157) (undo-tree-id2050 . -157) (undo-tree-id2051 . -157) (undo-tree-id2052 . -157) (undo-tree-id2053 . -157) (undo-tree-id2054 . -159) (undo-tree-id2055 . -159) (undo-tree-id2056 . -159) (undo-tree-id2057 . -159) (undo-tree-id2058 . -159) (undo-tree-id2059 . -159) (undo-tree-id2060 . -159) (undo-tree-id2061 . -165) (undo-tree-id2062 . -165) (undo-tree-id2063 . -165) (undo-tree-id2064 . -165) (undo-tree-id2065 . -165) (undo-tree-id2066 . -165) (undo-tree-id2067 . -165) (undo-tree-id2068 . -174) (undo-tree-id2069 . -174) (undo-tree-id2070 . -174) (undo-tree-id2071 . -174) (undo-tree-id2072 . -174) (undo-tree-id2073 . -174) (undo-tree-id2074 . -174) (undo-tree-id2075 . -181) (undo-tree-id2076 . -181) (undo-tree-id2077 . -181) (undo-tree-id2078 . -181) (undo-tree-id2079 . -181) (undo-tree-id2080 . -181) (undo-tree-id2081 . -181) (undo-tree-id2082 . -185) (undo-tree-id2083 . -185) (undo-tree-id2084 . -185) (undo-tree-id2085 . -185) (undo-tree-id2086 . -185) (undo-tree-id2087 . -185) (undo-tree-id2088 . -185) (undo-tree-id2089 . -192) (undo-tree-id2090 . -192) (undo-tree-id2091 . -192) (undo-tree-id2092 . -192) (undo-tree-id2093 . -192) (undo-tree-id2094 . -192) (undo-tree-id2095 . -192) (undo-tree-id2096 . -196) (undo-tree-id2097 . -196) (undo-tree-id2098 . -196) (undo-tree-id2099 . -196) (undo-tree-id2100 . -196) (undo-tree-id2101 . -196) (undo-tree-id2102 . -196) (undo-tree-id2103 . -204) (undo-tree-id2104 . -204) (undo-tree-id2105 . -204) (undo-tree-id2106 . -204) (undo-tree-id2107 . -204) (undo-tree-id2108 . -204) (undo-tree-id2109 . -204) (undo-tree-id2110 . -213) (undo-tree-id2111 . -213) (undo-tree-id2112 . -213) (undo-tree-id2113 . -213) (undo-tree-id2114 . -213) (undo-tree-id2115 . -213) (undo-tree-id2116 . -213) (undo-tree-id2117 . -214) (undo-tree-id2118 . -214) (undo-tree-id2119 . -214) (undo-tree-id2120 . -214) (undo-tree-id2121 . -214) (undo-tree-id2122 . -214) (undo-tree-id2123 . -214) (undo-tree-id2124 . -216) (undo-tree-id2125 . -216) (undo-tree-id2126 . -216) (undo-tree-id2127 . -216) (undo-tree-id2128 . -216) (undo-tree-id2129 . -216) (undo-tree-id2130 . -216) (undo-tree-id2131 . -215) (undo-tree-id2132 . -215) (undo-tree-id2133 . -215) (undo-tree-id2134 . -215) (undo-tree-id2135 . -215) (undo-tree-id2136 . -215) (undo-tree-id2137 . -215) (undo-tree-id2138 . -215) 7923) nil (25733 15790 36661 987000) 0 nil])
([nil nil ((7725 . 7726) (#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . -7725) (undo-tree-id1838 . -1) 7708) nil (25733 15790 21821 109000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t)) . -7785) (nil fontified nil 7784 . 7785) (nil wrap-prefix #("      " 0 6 (face org-indent)) 7784 . 7785) (7784 . 7785) 7725) nil (25733 15790 21817 172000) 0 nil])
([nil nil ((7809 . 7810) (#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . -7809) (undo-tree-id1836 . -1) (undo-tree-id1837 . 1) 7785) nil (25733 15790 21809 211000) 0 nil])
([nil nil ((7854 . 7855) (t 25733 15790 67955 862000) 7809) nil (25733 15801 582728 136000) 0 nil])
([nil nil ((7867 . 7872)) nil (25733 15801 582722 403000) 0 nil])
([nil nil ((7896 . 7898) (7917 . 7919) (7938 . 7940) 7893) nil (25733 15801 582716 410000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 7893) (undo-tree-id2422 . -2) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (7919 . 7921) 7893) nil (25733 15801 582699 731000) 0 nil])
([nil nil ((7944 . 7948) 7893) nil (25733 15801 582523 990000) 0 nil])
([nil nil ((7958 . 7959) (#("’" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 7958) (t 25733 15801 628082 727000)) nil (25733 15806 437366 18000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8092 . 8093) (nil fontified nil 8055 . 8093) (nil fontified nil 8034 . 8055) (nil fontified nil 8011 . 8034) (nil fontified nil 7985 . 8011) (7985 . 8093) (t 25733 15806 468136 86000)) nil (25733 15872 168628 949000) 0 nil])
([nil nil ((7985 . 7989) (8011 . 8017) (8034 . 8046) (8055 . 8063) 7893) nil (25733 15872 168616 347000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -8124) (undo-tree-id2432 . -4) (undo-tree-id2433 . -4) (undo-tree-id2434 . -2) (undo-tree-id2435 . -4) (undo-tree-id2436 . -4) (undo-tree-id2437 . -4) (undo-tree-id2438 . -4) (undo-tree-id2439 . -4) (undo-tree-id2440 . -4) (undo-tree-id2441 . -4) (undo-tree-id2442 . -4) (undo-tree-id2443 . -4) (undo-tree-id2444 . -4) (undo-tree-id2445 . -4) (undo-tree-id2446 . -4) (undo-tree-id2447 . -4) (undo-tree-id2448 . -4) (undo-tree-id2449 . -4) (undo-tree-id2450 . -4) (undo-tree-id2451 . -4) (undo-tree-id2452 . -4) (undo-tree-id2453 . -4) (undo-tree-id2454 . -4) (undo-tree-id2455 . -4) 8128 (8126 . 8128) 7893 (8123 . 8126) (t 25733 15872 204874 246000) 8094) nil (25733 15885 386807 852000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -7985) (undo-tree-id2529 . -4) (undo-tree-id2530 . -4) (undo-tree-id2531 . -2) (undo-tree-id2532 . -4) (undo-tree-id2533 . -4) (undo-tree-id2534 . -4) (undo-tree-id2535 . -4) (undo-tree-id2536 . -4) (undo-tree-id2537 . -4) (undo-tree-id2538 . -4) (undo-tree-id2539 . -4) (undo-tree-id2540 . -4) (undo-tree-id2541 . -4) (undo-tree-id2542 . -4) (undo-tree-id2543 . -4) (undo-tree-id2544 . -4) (undo-tree-id2545 . -4) (undo-tree-id2546 . -4) (undo-tree-id2547 . -4) (undo-tree-id2548 . -4) (undo-tree-id2549 . -4) (undo-tree-id2550 . -4) (undo-tree-id2551 . -4) (undo-tree-id2552 . -4) 7989 (7987 . 7989) 7893 (7984 . 7987) (t 25733 15885 429025 607000) 7942) nil (25733 15909 969502 803000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7986) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1)) nil (25733 15909 969458 642000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7986) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1)) nil (25733 15909 969441 749000) 0 nil])
([nil nil ((7988 . 7990) 7893) nil (25733 15909 969425 976000) 0 nil])
([nil nil ((7984 . 7985)) nil (25733 15909 969423 351000) 0 nil])
([nil nil ((7986 . 7988)) nil (25733 15909 969420 254000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7986) (undo-tree-id2470 . -2) (undo-tree-id2471 . -2) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 7989) (undo-tree-id2485 . -1) (undo-tree-id2486 . -2) (undo-tree-id2487 . -2) (undo-tree-id2488 . -2) (undo-tree-id2489 . -2) (undo-tree-id2490 . -2) (undo-tree-id2491 . -2) (undo-tree-id2492 . -2) (undo-tree-id2493 . -2) (undo-tree-id2494 . -2) (undo-tree-id2495 . -2) (undo-tree-id2496 . -2) (undo-tree-id2497 . -2) (undo-tree-id2498 . -2) (undo-tree-id2499 . -2) (undo-tree-id2500 . -2) (undo-tree-id2501 . -2) (undo-tree-id2502 . -2) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) 7893) nil (25733 15909 969409 974000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8019) (undo-tree-id2456 . -2) (undo-tree-id2457 . -2) (undo-tree-id2458 . -2) (undo-tree-id2459 . -2) (undo-tree-id2460 . -2) (undo-tree-id2461 . -2) (undo-tree-id2462 . -2) (undo-tree-id2463 . -2) (undo-tree-id2464 . -2) (undo-tree-id2465 . -2) (undo-tree-id2466 . -2) (undo-tree-id2467 . -2) (undo-tree-id2468 . -2) (undo-tree-id2469 . -2) 7893) nil (25733 15909 969326 780000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8052) 7893) nil (25733 15909 969280 342000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8079) 7893) nil (25733 15909 969267 264000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -8118) (undo-tree-id2553 . -2) (undo-tree-id2554 . -2) (undo-tree-id2555 . -2) (undo-tree-id2556 . -2) (undo-tree-id2557 . -2) (undo-tree-id2558 . -2) (undo-tree-id2559 . -2) (undo-tree-id2560 . -2) (undo-tree-id2561 . -2) (undo-tree-id2562 . -2) (undo-tree-id2563 . -2) (undo-tree-id2564 . -2) (undo-tree-id2565 . -2) (undo-tree-id2566 . -2) (undo-tree-id2567 . -2) (undo-tree-id2568 . -2) (undo-tree-id2569 . -2) (undo-tree-id2570 . -2) (undo-tree-id2571 . -2) (undo-tree-id2572 . -2) (undo-tree-id2573 . -2) (undo-tree-id2574 . -2) (undo-tree-id2575 . -2) (undo-tree-id2576 . -2) 8120 (8117 . 8120) (t 25733 15910 9309 329000) 8081) nil (25733 15914 165450 811000) 0 nil])
([nil nil ((8160 . 8163) (8159 . 8160) (t 25733 15914 197357 971000) 8157) nil (25733 16283 931851 491000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9099 . 9100) (nil fontified nil 9056 . 9100) (nil fontified nil 8983 . 9056) (nil fontified nil 8919 . 8983) (nil fontified nil 8844 . 8919) (nil fontified nil 8766 . 8844) (nil fontified nil 8697 . 8766) (nil fontified nil 8621 . 8697) (nil fontified nil 8548 . 8621) (nil fontified nil 8473 . 8548) (nil fontified nil 8396 . 8473) (nil fontified nil 8317 . 8396) (nil fontified nil 8233 . 8317) (nil fontified nil 8160 . 8233) (8160 . 9100)) nil (25733 16283 931849 30000) 0 nil])
([nil nil ((9101 . 9102) (9100 . 9101) 9099) nil (25733 16283 931838 846000) 0 nil])
([nil nil ((8159 . 8160) 8158) nil (25733 16283 931835 864000) 0 nil])
([nil nil ((#("Therefore, the first local variable
forms part of the lexical context in which the value of the second variable is
computed, and so on. This way of creating local variables is useful when one
wants to assign names to several intermediate steps in a long computation.
For example, suppose we want a function that computes the percent change
in the price of widgets given the old and new prices as input. Our function
must compute the difference between the two prices, then divide this
difference by the old price to get the proportional change in price, and then
multiply that by 100 to get the percent change. We can use local variables
named DIFF, PROPORTION, and PERCENTAGE to hold these values. We
use LET* instead of LET because these variables must be created one at a
time, since each depends on its predecessor.
" 0 36 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 36 115 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 115 192 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 192 267 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 267 340 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 340 379 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 379 416 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 416 485 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 485 563 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 563 638 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 638 702 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 702 775 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 775 818 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 818 819 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t) 819 820 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8282) (undo-tree-id2693 . -819) (undo-tree-id2694 . -819) (undo-tree-id2695 . -818) (undo-tree-id2696 . -819) (undo-tree-id2697 . -775) (undo-tree-id2698 . -819) (undo-tree-id2699 . -818) (undo-tree-id2700 . -818) (undo-tree-id2701 . -818) (undo-tree-id2702 . -818) (undo-tree-id2703 . -818) (undo-tree-id2704 . -818) (undo-tree-id2705 . -818) (undo-tree-id2706 . -820) (undo-tree-id2707 . -820) (undo-tree-id2708 . -820) (undo-tree-id2709 . -820) (undo-tree-id2710 . -820) (undo-tree-id2711 . -820) (undo-tree-id2712 . -820) (undo-tree-id2713 . -820) (undo-tree-id2714 . -820) (undo-tree-id2715 . -819) (undo-tree-id2716 . -8) (undo-tree-id2717 . -8) (undo-tree-id2718 . -8) (undo-tree-id2719 . -8) (undo-tree-id2720 . -8) (undo-tree-id2721 . -8) (undo-tree-id2722 . -8) (undo-tree-id2723 . -9) (undo-tree-id2724 . -9) (undo-tree-id2725 . -9) (undo-tree-id2726 . -9) (undo-tree-id2727 . -9) (undo-tree-id2728 . -9) (undo-tree-id2729 . -9) (undo-tree-id2730 . -13) (undo-tree-id2731 . -13) (undo-tree-id2732 . -13) (undo-tree-id2733 . -13) (undo-tree-id2734 . -13) (undo-tree-id2735 . -13) (undo-tree-id2736 . -13) (undo-tree-id2737 . -19) (undo-tree-id2738 . -19) (undo-tree-id2739 . -19) (undo-tree-id2740 . -19) (undo-tree-id2741 . -19) (undo-tree-id2742 . -19) (undo-tree-id2743 . -19) (undo-tree-id2744 . -25) (undo-tree-id2745 . -25) (undo-tree-id2746 . -25) (undo-tree-id2747 . -25) (undo-tree-id2748 . -25) (undo-tree-id2749 . -25) (undo-tree-id2750 . -25) (undo-tree-id2751 . -34) (undo-tree-id2752 . -34) (undo-tree-id2753 . -34) (undo-tree-id2754 . -34) (undo-tree-id2755 . -34) (undo-tree-id2756 . -34) (undo-tree-id2757 . -34) (undo-tree-id2758 . -40) (undo-tree-id2759 . -40) (undo-tree-id2760 . -40) (undo-tree-id2761 . -40) (undo-tree-id2762 . -40) (undo-tree-id2763 . -40) (undo-tree-id2764 . -40) (undo-tree-id2765 . -45) (undo-tree-id2766 . -45) (undo-tree-id2767 . -45) (undo-tree-id2768 . -45) (undo-tree-id2769 . -45) (undo-tree-id2770 . -45) (undo-tree-id2771 . -45) (undo-tree-id2772 . -48) (undo-tree-id2773 . -48) (undo-tree-id2774 . -48) (undo-tree-id2775 . -48) (undo-tree-id2776 . -48) (undo-tree-id2777 . -48) (undo-tree-id2778 . -48) (undo-tree-id2779 . -52) (undo-tree-id2780 . -52) (undo-tree-id2781 . -52) (undo-tree-id2782 . -52) (undo-tree-id2783 . -52) (undo-tree-id2784 . -52) (undo-tree-id2785 . -52) (undo-tree-id2786 . -60) (undo-tree-id2787 . -60) (undo-tree-id2788 . -60) (undo-tree-id2789 . -60) (undo-tree-id2790 . -60) (undo-tree-id2791 . -60) (undo-tree-id2792 . -60) (undo-tree-id2793 . -68) (undo-tree-id2794 . -68) (undo-tree-id2795 . -68) (undo-tree-id2796 . -68) (undo-tree-id2797 . -68) (undo-tree-id2798 . -68) (undo-tree-id2799 . -68) (undo-tree-id2800 . -71) (undo-tree-id2801 . -71) (undo-tree-id2802 . -71) (undo-tree-id2803 . -71) (undo-tree-id2804 . -71) (undo-tree-id2805 . -71) (undo-tree-id2806 . -71) (undo-tree-id2807 . -77) (undo-tree-id2808 . -77) (undo-tree-id2809 . -77) (undo-tree-id2810 . -77) (undo-tree-id2811 . -77) (undo-tree-id2812 . -77) (undo-tree-id2813 . -77) (undo-tree-id2814 . -81) (undo-tree-id2815 . -81) (undo-tree-id2816 . -81) (undo-tree-id2817 . -81) (undo-tree-id2818 . -81) (undo-tree-id2819 . -81) (undo-tree-id2820 . -81) (undo-tree-id2821 . -87) (undo-tree-id2822 . -87) (undo-tree-id2823 . -87) (undo-tree-id2824 . -87) (undo-tree-id2825 . -87) (undo-tree-id2826 . -87) (undo-tree-id2827 . -87) (undo-tree-id2828 . -90) (undo-tree-id2829 . -90) (undo-tree-id2830 . -90) (undo-tree-id2831 . -90) (undo-tree-id2832 . -90) (undo-tree-id2833 . -90) (undo-tree-id2834 . -90) (undo-tree-id2835 . -94) (undo-tree-id2836 . -94) (undo-tree-id2837 . -94) (undo-tree-id2838 . -94) (undo-tree-id2839 . -94) (undo-tree-id2840 . -94) (undo-tree-id2841 . -94) (undo-tree-id2842 . -101) (undo-tree-id2843 . -101) (undo-tree-id2844 . -101) (undo-tree-id2845 . -101) (undo-tree-id2846 . -101) (undo-tree-id2847 . -101) (undo-tree-id2848 . -101) (undo-tree-id2849 . -110) (undo-tree-id2850 . -110) (undo-tree-id2851 . -110) (undo-tree-id2852 . -110) (undo-tree-id2853 . -110) (undo-tree-id2854 . -110) (undo-tree-id2855 . -110) (undo-tree-id2856 . -113) (undo-tree-id2857 . -113) (undo-tree-id2858 . -113) (undo-tree-id2859 . -113) (undo-tree-id2860 . -113) (undo-tree-id2861 . -113) (undo-tree-id2862 . -113) (undo-tree-id2863 . -122) (undo-tree-id2864 . -122) (undo-tree-id2865 . -122) (undo-tree-id2866 . -122) (undo-tree-id2867 . -122) (undo-tree-id2868 . -122) (undo-tree-id2869 . -122) (undo-tree-id2870 . -123) (undo-tree-id2871 . -123) (undo-tree-id2872 . -123) (undo-tree-id2873 . -123) (undo-tree-id2874 . -123) (undo-tree-id2875 . -123) (undo-tree-id2876 . -123) (undo-tree-id2877 . -127) (undo-tree-id2878 . -127) (undo-tree-id2879 . -127) (undo-tree-id2880 . -127) (undo-tree-id2881 . -127) (undo-tree-id2882 . -127) (undo-tree-id2883 . -127) (undo-tree-id2884 . -130) (undo-tree-id2885 . -130) (undo-tree-id2886 . -130) (undo-tree-id2887 . -130) (undo-tree-id2888 . -130) (undo-tree-id2889 . -130) (undo-tree-id2890 . -130) (undo-tree-id2891 . -133) (undo-tree-id2892 . -133) (undo-tree-id2893 . -133) (undo-tree-id2894 . -133) (undo-tree-id2895 . -133) (undo-tree-id2896 . -133) (undo-tree-id2897 . -133) (undo-tree-id2898 . -134) (undo-tree-id2899 . -134) (undo-tree-id2900 . -134) (undo-tree-id2901 . -134) (undo-tree-id2902 . -134) (undo-tree-id2903 . -134) (undo-tree-id2904 . -134) (undo-tree-id2905 . -139) (undo-tree-id2906 . -139) (undo-tree-id2907 . -139) (undo-tree-id2908 . -139) (undo-tree-id2909 . -139) (undo-tree-id2910 . -139) (undo-tree-id2911 . -139) (undo-tree-id2912 . -143) (undo-tree-id2913 . -143) (undo-tree-id2914 . -143) (undo-tree-id2915 . -143) (undo-tree-id2916 . -143) (undo-tree-id2917 . -143) (undo-tree-id2918 . -143) (undo-tree-id2919 . -146) (undo-tree-id2920 . -146) (undo-tree-id2921 . -146) (undo-tree-id2922 . -146) (undo-tree-id2923 . -146) (undo-tree-id2924 . -146) (undo-tree-id2925 . -146) (undo-tree-id2926 . -155) (undo-tree-id2927 . -155) (undo-tree-id2928 . -155) (undo-tree-id2929 . -155) (undo-tree-id2930 . -155) (undo-tree-id2931 . -155) (undo-tree-id2932 . -155) (undo-tree-id2933 . -161) (undo-tree-id2934 . -161) (undo-tree-id2935 . -161) (undo-tree-id2936 . -161) (undo-tree-id2937 . -161) (undo-tree-id2938 . -161) (undo-tree-id2939 . -161) (undo-tree-id2940 . -171) (undo-tree-id2941 . -171) (undo-tree-id2942 . -171) (undo-tree-id2943 . -171) (undo-tree-id2944 . -171) (undo-tree-id2945 . -171) (undo-tree-id2946 . -171) (undo-tree-id2947 . -174) (undo-tree-id2948 . -174) (undo-tree-id2949 . -174) (undo-tree-id2950 . -174) (undo-tree-id2951 . -174) (undo-tree-id2952 . -174) (undo-tree-id2953 . -174) (undo-tree-id2954 . -181) (undo-tree-id2955 . -181) (undo-tree-id2956 . -181) (undo-tree-id2957 . -181) (undo-tree-id2958 . -181) (undo-tree-id2959 . -181) (undo-tree-id2960 . -181) (undo-tree-id2961 . -186) (undo-tree-id2962 . -186) (undo-tree-id2963 . -186) (undo-tree-id2964 . -186) (undo-tree-id2965 . -186) (undo-tree-id2966 . -186) (undo-tree-id2967 . -186) (undo-tree-id2968 . -190) (undo-tree-id2969 . -190) (undo-tree-id2970 . -190) (undo-tree-id2971 . -190) (undo-tree-id2972 . -190) (undo-tree-id2973 . -190) (undo-tree-id2974 . -190) (undo-tree-id2975 . -196) (undo-tree-id2976 . -196) (undo-tree-id2977 . -196) (undo-tree-id2978 . -196) (undo-tree-id2979 . -196) (undo-tree-id2980 . -196) (undo-tree-id2981 . -196) (undo-tree-id2982 . -199) (undo-tree-id2983 . -199) (undo-tree-id2984 . -199) (undo-tree-id2985 . -199) (undo-tree-id2986 . -199) (undo-tree-id2987 . -199) (undo-tree-id2988 . -199) (undo-tree-id2989 . -206) (undo-tree-id2990 . -206) (undo-tree-id2991 . -206) (undo-tree-id2992 . -206) (undo-tree-id2993 . -206) (undo-tree-id2994 . -206) (undo-tree-id2995 . -206) (undo-tree-id2996 . -212) (undo-tree-id2997 . -212) (undo-tree-id2998 . -212) (undo-tree-id2999 . -212) (undo-tree-id3000 . -212) (undo-tree-id3001 . -212) (undo-tree-id3002 . -212) (undo-tree-id3003 . -215) (undo-tree-id3004 . -215) (undo-tree-id3005 . -215) (undo-tree-id3006 . -215) (undo-tree-id3007 . -215) (undo-tree-id3008 . -215) (undo-tree-id3009 . -215) (undo-tree-id3010 . -223) (undo-tree-id3011 . -223) (undo-tree-id3012 . -223) (undo-tree-id3013 . -223) (undo-tree-id3014 . -223) (undo-tree-id3015 . -223) (undo-tree-id3016 . -223) (undo-tree-id3017 . -236) (undo-tree-id3018 . -236) (undo-tree-id3019 . -236) (undo-tree-id3020 . -236) (undo-tree-id3021 . -236) (undo-tree-id3022 . -236) (undo-tree-id3023 . -236) (undo-tree-id3024 . -242) (undo-tree-id3025 . -242) (undo-tree-id3026 . -242) (undo-tree-id3027 . -242) (undo-tree-id3028 . -242) (undo-tree-id3029 . -242) (undo-tree-id3030 . -242) (undo-tree-id3031 . -245) (undo-tree-id3032 . -245) (undo-tree-id3033 . -245) (undo-tree-id3034 . -245) (undo-tree-id3035 . -245) (undo-tree-id3036 . -245) (undo-tree-id3037 . -245) (undo-tree-id3038 . -247) (undo-tree-id3039 . -247) (undo-tree-id3040 . -247) (undo-tree-id3041 . -247) (undo-tree-id3042 . -247) (undo-tree-id3043 . -247) (undo-tree-id3044 . -247) (undo-tree-id3045 . -252) (undo-tree-id3046 . -252) (undo-tree-id3047 . -252) (undo-tree-id3048 . -252) (undo-tree-id3049 . -252) (undo-tree-id3050 . -252) (undo-tree-id3051 . -252) (undo-tree-id3052 . -264) (undo-tree-id3053 . -264) (undo-tree-id3054 . -264) (undo-tree-id3055 . -264) (undo-tree-id3056 . -264) (undo-tree-id3057 . -264) (undo-tree-id3058 . -264) (undo-tree-id3059 . -265) (undo-tree-id3060 . -265) (undo-tree-id3061 . -265) (undo-tree-id3062 . -265) (undo-tree-id3063 . -265) (undo-tree-id3064 . -265) (undo-tree-id3065 . -265) (undo-tree-id3066 . -269) (undo-tree-id3067 . -269) (undo-tree-id3068 . -269) (undo-tree-id3069 . -269) (undo-tree-id3070 . -269) (undo-tree-id3071 . -269) (undo-tree-id3072 . -269) (undo-tree-id3073 . -269) (undo-tree-id3074 . -269) (undo-tree-id3075 . -269) (undo-tree-id3076 . -269) (undo-tree-id3077 . -269) (undo-tree-id3078 . -194) (undo-tree-id3079 . -269) (undo-tree-id3080 . -277) (undo-tree-id3081 . -277) (undo-tree-id3082 . -277) (undo-tree-id3083 . -277) (undo-tree-id3084 . -277) (undo-tree-id3085 . -277) (undo-tree-id3086 . -277) (undo-tree-id3087 . -278) (undo-tree-id3088 . -278) (undo-tree-id3089 . -278) (undo-tree-id3090 . -278) (undo-tree-id3091 . -278) (undo-tree-id3092 . -278) (undo-tree-id3093 . -278) (undo-tree-id3094 . -286) (undo-tree-id3095 . -286) (undo-tree-id3096 . -286) (undo-tree-id3097 . -286) (undo-tree-id3098 . -286) (undo-tree-id3099 . -286) (undo-tree-id3100 . -286) (undo-tree-id3101 . -289) (undo-tree-id3102 . -289) (undo-tree-id3103 . -289) (undo-tree-id3104 . -289) (undo-tree-id3105 . -289) (undo-tree-id3106 . -289) (undo-tree-id3107 . -289) (undo-tree-id3108 . -294) (undo-tree-id3109 . -294) (undo-tree-id3110 . -294) (undo-tree-id3111 . -294) (undo-tree-id3112 . -294) (undo-tree-id3113 . -294) (undo-tree-id3114 . -294) (undo-tree-id3115 . -296) (undo-tree-id3116 . -296) (undo-tree-id3117 . -296) (undo-tree-id3118 . -296) (undo-tree-id3119 . -296) (undo-tree-id3120 . -296) (undo-tree-id3121 . -296) (undo-tree-id3122 . -305) (undo-tree-id3123 . -305) (undo-tree-id3124 . -305) (undo-tree-id3125 . -305) (undo-tree-id3126 . -305) (undo-tree-id3127 . -305) (undo-tree-id3128 . -305) (undo-tree-id3129 . -310) (undo-tree-id3130 . -310) (undo-tree-id3131 . -310) (undo-tree-id3132 . -310) (undo-tree-id3133 . -310) (undo-tree-id3134 . -310) (undo-tree-id3135 . -310) (undo-tree-id3136 . -319) (undo-tree-id3137 . -319) (undo-tree-id3138 . -319) (undo-tree-id3139 . -319) (undo-tree-id3140 . -319) (undo-tree-id3141 . -319) (undo-tree-id3142 . -319) (undo-tree-id3143 . -323) (undo-tree-id3144 . -323) (undo-tree-id3145 . -323) (undo-tree-id3146 . -323) (undo-tree-id3147 . -323) (undo-tree-id3148 . -323) (undo-tree-id3149 . -323) (undo-tree-id3150 . -331) (undo-tree-id3151 . -331) (undo-tree-id3152 . -331) (undo-tree-id3153 . -331) (undo-tree-id3154 . -331) (undo-tree-id3155 . -331) (undo-tree-id3156 . -331) (undo-tree-id3157 . -338) (undo-tree-id3158 . -338) (undo-tree-id3159 . -338) (undo-tree-id3160 . -338) (undo-tree-id3161 . -338) (undo-tree-id3162 . -338) (undo-tree-id3163 . -338) (undo-tree-id3164 . -341) (undo-tree-id3165 . -341) (undo-tree-id3166 . -341) (undo-tree-id3167 . -341) (undo-tree-id3168 . -341) (undo-tree-id3169 . -341) (undo-tree-id3170 . -341) (undo-tree-id3171 . -345) (undo-tree-id3172 . -345) (undo-tree-id3173 . -345) (undo-tree-id3174 . -345) (undo-tree-id3175 . -345) (undo-tree-id3176 . -345) (undo-tree-id3177 . -345) (undo-tree-id3178 . -351) (undo-tree-id3179 . -351) (undo-tree-id3180 . -351) (undo-tree-id3181 . -351) (undo-tree-id3182 . -351) (undo-tree-id3183 . -351) (undo-tree-id3184 . -351) (undo-tree-id3185 . -354) (undo-tree-id3186 . -354) (undo-tree-id3187 . -354) (undo-tree-id3188 . -354) (undo-tree-id3189 . -354) (undo-tree-id3190 . -354) (undo-tree-id3191 . -354) (undo-tree-id3192 . -362) (undo-tree-id3193 . -362) (undo-tree-id3194 . -362) (undo-tree-id3195 . -362) (undo-tree-id3196 . -362) (undo-tree-id3197 . -362) (undo-tree-id3198 . -362) (undo-tree-id3199 . -368) (undo-tree-id3200 . -368) (undo-tree-id3201 . -368) (undo-tree-id3202 . -368) (undo-tree-id3203 . -368) (undo-tree-id3204 . -368) (undo-tree-id3205 . -368) (undo-tree-id3206 . -372) (undo-tree-id3207 . -372) (undo-tree-id3208 . -372) (undo-tree-id3209 . -372) (undo-tree-id3210 . -372) (undo-tree-id3211 . -372) (undo-tree-id3212 . -372) (undo-tree-id3213 . -376) (undo-tree-id3214 . -376) (undo-tree-id3215 . -376) (undo-tree-id3216 . -376) (undo-tree-id3217 . -376) (undo-tree-id3218 . -376) (undo-tree-id3219 . -376) (undo-tree-id3220 . -380) (undo-tree-id3221 . -380) (undo-tree-id3222 . -380) (undo-tree-id3223 . -380) (undo-tree-id3224 . -380) (undo-tree-id3225 . -380) (undo-tree-id3226 . -380) (undo-tree-id3227 . -384) (undo-tree-id3228 . -384) (undo-tree-id3229 . -384) (undo-tree-id3230 . -384) (undo-tree-id3231 . -384) (undo-tree-id3232 . -384) (undo-tree-id3233 . -384) (undo-tree-id3234 . -391) (undo-tree-id3235 . -391) (undo-tree-id3236 . -391) (undo-tree-id3237 . -391) (undo-tree-id3238 . -391) (undo-tree-id3239 . -391) (undo-tree-id3240 . -391) (undo-tree-id3241 . -394) (undo-tree-id3242 . -394) (undo-tree-id3243 . -394) (undo-tree-id3244 . -394) (undo-tree-id3245 . -394) (undo-tree-id3246 . -394) (undo-tree-id3247 . -394) (undo-tree-id3248 . -400) (undo-tree-id3249 . -400) (undo-tree-id3250 . -400) (undo-tree-id3251 . -400) (undo-tree-id3252 . -400) (undo-tree-id3253 . -400) (undo-tree-id3254 . -400) (undo-tree-id3255 . -401) (undo-tree-id3256 . -401) (undo-tree-id3257 . -401) (undo-tree-id3258 . -401) (undo-tree-id3259 . -401) (undo-tree-id3260 . -401) (undo-tree-id3261 . -401) (undo-tree-id3262 . -405) (undo-tree-id3263 . -405) (undo-tree-id3264 . -405) (undo-tree-id3265 . -405) (undo-tree-id3266 . -405) (undo-tree-id3267 . -405) (undo-tree-id3268 . -405) (undo-tree-id3269 . -414) (undo-tree-id3270 . -414) (undo-tree-id3271 . -414) (undo-tree-id3272 . -414) (undo-tree-id3273 . -414) (undo-tree-id3274 . -414) (undo-tree-id3275 . -414) (undo-tree-id3276 . -419) (undo-tree-id3277 . -419) (undo-tree-id3278 . -419) (undo-tree-id3279 . -419) (undo-tree-id3280 . -419) (undo-tree-id3281 . -419) (undo-tree-id3282 . -419) (undo-tree-id3283 . -427) (undo-tree-id3284 . -427) (undo-tree-id3285 . -427) (undo-tree-id3286 . -427) (undo-tree-id3287 . -427) (undo-tree-id3288 . -427) (undo-tree-id3289 . -427) (undo-tree-id3290 . -431) (undo-tree-id3291 . -431) (undo-tree-id3292 . -431) (undo-tree-id3293 . -431) (undo-tree-id3294 . -431) (undo-tree-id3295 . -431) (undo-tree-id3296 . -431) (undo-tree-id3297 . -442) (undo-tree-id3298 . -442) (undo-tree-id3299 . -442) (undo-tree-id3300 . -442) (undo-tree-id3301 . -442) (undo-tree-id3302 . -442) (undo-tree-id3303 . -442) (undo-tree-id3304 . -450) (undo-tree-id3305 . -450) (undo-tree-id3306 . -450) (undo-tree-id3307 . -450) (undo-tree-id3308 . -450) (undo-tree-id3309 . -450) (undo-tree-id3310 . -450) (undo-tree-id3311 . -454) (undo-tree-id3312 . -454) (undo-tree-id3313 . -454) (undo-tree-id3314 . -454) (undo-tree-id3315 . -454) (undo-tree-id3316 . -454) (undo-tree-id3317 . -454) (undo-tree-id3318 . -458) (undo-tree-id3319 . -458) (undo-tree-id3320 . -458) (undo-tree-id3321 . -458) (undo-tree-id3322 . -458) (undo-tree-id3323 . -458) (undo-tree-id3324 . -458) (undo-tree-id3325 . -465) (undo-tree-id3326 . -465) (undo-tree-id3327 . -465) (undo-tree-id3328 . -465) (undo-tree-id3329 . -465) (undo-tree-id3330 . -465) (undo-tree-id3331 . -465) (undo-tree-id3332 . -466) (undo-tree-id3333 . -466) (undo-tree-id3334 . -466) (undo-tree-id3335 . -466) (undo-tree-id3336 . -466) (undo-tree-id3337 . -466) (undo-tree-id3338 . -466) (undo-tree-id3339 . -471) (undo-tree-id3340 . -471) (undo-tree-id3341 . -471) (undo-tree-id3342 . -471) (undo-tree-id3343 . -471) (undo-tree-id3344 . -471) (undo-tree-id3345 . -471) (undo-tree-id3346 . -478) (undo-tree-id3347 . -478) (undo-tree-id3348 . -478) (undo-tree-id3349 . -478) (undo-tree-id3350 . -478) (undo-tree-id3351 . -478) (undo-tree-id3352 . -478) (undo-tree-id3353 . -483) (undo-tree-id3354 . -483) (undo-tree-id3355 . -483) (undo-tree-id3356 . -483) (undo-tree-id3357 . -483) (undo-tree-id3358 . -483) (undo-tree-id3359 . -483) (undo-tree-id3360 . -494) (undo-tree-id3361 . -494) (undo-tree-id3362 . -494) (undo-tree-id3363 . -494) (undo-tree-id3364 . -494) (undo-tree-id3365 . -494) (undo-tree-id3366 . -494) (undo-tree-id3367 . -497) (undo-tree-id3368 . -497) (undo-tree-id3369 . -497) (undo-tree-id3370 . -497) (undo-tree-id3371 . -497) (undo-tree-id3372 . -497) (undo-tree-id3373 . -497) (undo-tree-id3374 . -501) (undo-tree-id3375 . -501) (undo-tree-id3376 . -501) (undo-tree-id3377 . -501) (undo-tree-id3378 . -501) (undo-tree-id3379 . -501) (undo-tree-id3380 . -501) (undo-tree-id3381 . -505) (undo-tree-id3382 . -505) (undo-tree-id3383 . -505) (undo-tree-id3384 . -505) (undo-tree-id3385 . -505) (undo-tree-id3386 . -505) (undo-tree-id3387 . -505) (undo-tree-id3388 . -511) (undo-tree-id3389 . -511) (undo-tree-id3390 . -511) (undo-tree-id3391 . -511) (undo-tree-id3392 . -511) (undo-tree-id3393 . -511) (undo-tree-id3394 . -511) (undo-tree-id3395 . -514) (undo-tree-id3396 . -514) (undo-tree-id3397 . -514) (undo-tree-id3398 . -514) (undo-tree-id3399 . -514) (undo-tree-id3400 . -514) (undo-tree-id3401 . -514) (undo-tree-id3402 . -518) (undo-tree-id3403 . -518) (undo-tree-id3404 . -518) (undo-tree-id3405 . -518) (undo-tree-id3406 . -518) (undo-tree-id3407 . -518) (undo-tree-id3408 . -518) (undo-tree-id3409 . -522) (undo-tree-id3410 . -522) (undo-tree-id3411 . -522) (undo-tree-id3412 . -522) (undo-tree-id3413 . -522) (undo-tree-id3414 . -522) (undo-tree-id3415 . -522) (undo-tree-id3416 . -535) (undo-tree-id3417 . -535) (undo-tree-id3418 . -535) (undo-tree-id3419 . -535) (undo-tree-id3420 . -535) (undo-tree-id3421 . -535) (undo-tree-id3422 . -535) (undo-tree-id3423 . -542) (undo-tree-id3424 . -542) (undo-tree-id3425 . -542) (undo-tree-id3426 . -542) (undo-tree-id3427 . -542) (undo-tree-id3428 . -542) (undo-tree-id3429 . -542) (undo-tree-id3430 . -545) (undo-tree-id3431 . -545) (undo-tree-id3432 . -545) (undo-tree-id3433 . -545) (undo-tree-id3434 . -545) (undo-tree-id3435 . -545) (undo-tree-id3436 . -545) (undo-tree-id3437 . -551) (undo-tree-id3438 . -551) (undo-tree-id3439 . -551) (undo-tree-id3440 . -551) (undo-tree-id3441 . -551) (undo-tree-id3442 . -551) (undo-tree-id3443 . -551) (undo-tree-id3444 . -552) (undo-tree-id3445 . -552) (undo-tree-id3446 . -552) (undo-tree-id3447 . -552) (undo-tree-id3448 . -552) (undo-tree-id3449 . -552) (undo-tree-id3450 . -552) (undo-tree-id3451 . -556) (undo-tree-id3452 . -556) (undo-tree-id3453 . -556) (undo-tree-id3454 . -556) (undo-tree-id3455 . -556) (undo-tree-id3456 . -556) (undo-tree-id3457 . -556) (undo-tree-id3458 . -561) (undo-tree-id3459 . -561) (undo-tree-id3460 . -561) (undo-tree-id3461 . -561) (undo-tree-id3462 . -561) (undo-tree-id3463 . -561) (undo-tree-id3464 . -561) (undo-tree-id3465 . -570) (undo-tree-id3466 . -570) (undo-tree-id3467 . -570) (undo-tree-id3468 . -570) (undo-tree-id3469 . -570) (undo-tree-id3470 . -570) (undo-tree-id3471 . -570) (undo-tree-id3472 . -575) (undo-tree-id3473 . -575) (undo-tree-id3474 . -575) (undo-tree-id3475 . -575) (undo-tree-id3476 . -575) (undo-tree-id3477 . -575) (undo-tree-id3478 . -575) (undo-tree-id3479 . -578) (undo-tree-id3480 . -578) (undo-tree-id3481 . -578) (undo-tree-id3482 . -578) (undo-tree-id3483 . -578) (undo-tree-id3484 . -578) (undo-tree-id3485 . -578) (undo-tree-id3486 . -582) (undo-tree-id3487 . -582) (undo-tree-id3488 . -582) (undo-tree-id3489 . -582) (undo-tree-id3490 . -582) (undo-tree-id3491 . -582) (undo-tree-id3492 . -582) (undo-tree-id3493 . -585) (undo-tree-id3494 . -585) (undo-tree-id3495 . -585) (undo-tree-id3496 . -585) (undo-tree-id3497 . -585) (undo-tree-id3498 . -585) (undo-tree-id3499 . -585) (undo-tree-id3500 . -589) (undo-tree-id3501 . -589) (undo-tree-id3502 . -589) (undo-tree-id3503 . -589) (undo-tree-id3504 . -589) (undo-tree-id3505 . -589) (undo-tree-id3506 . -589) (undo-tree-id3507 . -593) (undo-tree-id3508 . -593) (undo-tree-id3509 . -593) (undo-tree-id3510 . -593) (undo-tree-id3511 . -593) (undo-tree-id3512 . -593) (undo-tree-id3513 . -593) (undo-tree-id3514 . -601) (undo-tree-id3515 . -601) (undo-tree-id3516 . -601) (undo-tree-id3517 . -601) (undo-tree-id3518 . -601) (undo-tree-id3519 . -601) (undo-tree-id3520 . -601) (undo-tree-id3521 . -608) (undo-tree-id3522 . -608) (undo-tree-id3523 . -608) (undo-tree-id3524 . -608) (undo-tree-id3525 . -608) (undo-tree-id3526 . -608) (undo-tree-id3527 . -608) (undo-tree-id3528 . -609) (undo-tree-id3529 . -609) (undo-tree-id3530 . -609) (undo-tree-id3531 . -609) (undo-tree-id3532 . -609) (undo-tree-id3533 . -609) (undo-tree-id3534 . -609) (undo-tree-id3535 . -612) (undo-tree-id3536 . -612) (undo-tree-id3537 . -612) (undo-tree-id3538 . -612) (undo-tree-id3539 . -612) (undo-tree-id3540 . -612) (undo-tree-id3541 . -612) (undo-tree-id3542 . -616) (undo-tree-id3543 . -616) (undo-tree-id3544 . -616) (undo-tree-id3545 . -616) (undo-tree-id3546 . -616) (undo-tree-id3547 . -616) (undo-tree-id3548 . -616) (undo-tree-id3549 . -620) (undo-tree-id3550 . -620) (undo-tree-id3551 . -620) (undo-tree-id3552 . -620) (undo-tree-id3553 . -620) (undo-tree-id3554 . -620) (undo-tree-id3555 . -620) (undo-tree-id3556 . -626) (undo-tree-id3557 . -626) (undo-tree-id3558 . -626) (undo-tree-id3559 . -626) (undo-tree-id3560 . -626) (undo-tree-id3561 . -626) (undo-tree-id3562 . -626) (undo-tree-id3563 . -636) (undo-tree-id3564 . -636) (undo-tree-id3565 . -636) (undo-tree-id3566 . -636) (undo-tree-id3567 . -636) (undo-tree-id3568 . -636) (undo-tree-id3569 . -636) (undo-tree-id3570 . -642) (undo-tree-id3571 . -642) (undo-tree-id3572 . -642) (undo-tree-id3573 . -642) (undo-tree-id3574 . -642) (undo-tree-id3575 . -642) (undo-tree-id3576 . -642) (undo-tree-id3577 . -647) (undo-tree-id3578 . -647) (undo-tree-id3579 . -647) (undo-tree-id3580 . -647) (undo-tree-id3581 . -647) (undo-tree-id3582 . -647) (undo-tree-id3583 . -647) (undo-tree-id3584 . -648) (undo-tree-id3585 . -648) (undo-tree-id3586 . -648) (undo-tree-id3587 . -648) (undo-tree-id3588 . -648) (undo-tree-id3589 . -648) (undo-tree-id3590 . -648) (undo-tree-id3591 . -659) (undo-tree-id3592 . -659) (undo-tree-id3593 . -659) (undo-tree-id3594 . -659) (undo-tree-id3595 . -659) (undo-tree-id3596 . -659) (undo-tree-id3597 . -659) (undo-tree-id3598 . -660) (undo-tree-id3599 . -660) (undo-tree-id3600 . -660) (undo-tree-id3601 . -660) (undo-tree-id3602 . -660) (undo-tree-id3603 . -660) (undo-tree-id3604 . -660) (undo-tree-id3605 . -664) (undo-tree-id3606 . -664) (undo-tree-id3607 . -664) (undo-tree-id3608 . -664) (undo-tree-id3609 . -664) (undo-tree-id3610 . -664) (undo-tree-id3611 . -664) (undo-tree-id3612 . -675) (undo-tree-id3613 . -675) (undo-tree-id3614 . -675) (undo-tree-id3615 . -675) (undo-tree-id3616 . -675) (undo-tree-id3617 . -675) (undo-tree-id3618 . -675) (undo-tree-id3619 . -678) (undo-tree-id3620 . -678) (undo-tree-id3621 . -678) (undo-tree-id3622 . -678) (undo-tree-id3623 . -678) (undo-tree-id3624 . -678) (undo-tree-id3625 . -678) (undo-tree-id3626 . -683) (undo-tree-id3627 . -683) (undo-tree-id3628 . -683) (undo-tree-id3629 . -683) (undo-tree-id3630 . -683) (undo-tree-id3631 . -683) (undo-tree-id3632 . -683) (undo-tree-id3633 . -689) (undo-tree-id3634 . -689) (undo-tree-id3635 . -689) (undo-tree-id3636 . -689) (undo-tree-id3637 . -689) (undo-tree-id3638 . -689) (undo-tree-id3639 . -689) (undo-tree-id3640 . -696) (undo-tree-id3641 . -696) (undo-tree-id3642 . -696) (undo-tree-id3643 . -696) (undo-tree-id3644 . -696) (undo-tree-id3645 . -696) (undo-tree-id3646 . -696) (undo-tree-id3647 . -697) (undo-tree-id3648 . -697) (undo-tree-id3649 . -697) (undo-tree-id3650 . -697) (undo-tree-id3651 . -697) (undo-tree-id3652 . -697) (undo-tree-id3653 . -697) (undo-tree-id3654 . -700) (undo-tree-id3655 . -700) (undo-tree-id3656 . -700) (undo-tree-id3657 . -700) (undo-tree-id3658 . -700) (undo-tree-id3659 . -700) (undo-tree-id3660 . -700) (undo-tree-id3661 . -704) (undo-tree-id3662 . -704) (undo-tree-id3663 . -704) (undo-tree-id3664 . -704) (undo-tree-id3665 . -704) (undo-tree-id3666 . -704) (undo-tree-id3667 . -704) (undo-tree-id3668 . -708) (undo-tree-id3669 . -708) (undo-tree-id3670 . -708) (undo-tree-id3671 . -708) (undo-tree-id3672 . -708) (undo-tree-id3673 . -708) (undo-tree-id3674 . -708) (undo-tree-id3675 . -709) (undo-tree-id3676 . -709) (undo-tree-id3677 . -709) (undo-tree-id3678 . -709) (undo-tree-id3679 . -709) (undo-tree-id3680 . -709) (undo-tree-id3681 . -709) (undo-tree-id3682 . -717) (undo-tree-id3683 . -717) (undo-tree-id3684 . -717) (undo-tree-id3685 . -717) (undo-tree-id3686 . -717) (undo-tree-id3687 . -717) (undo-tree-id3688 . -717) (undo-tree-id3689 . -720) (undo-tree-id3690 . -720) (undo-tree-id3691 . -720) (undo-tree-id3692 . -720) (undo-tree-id3693 . -720) (undo-tree-id3694 . -720) (undo-tree-id3695 . -720) (undo-tree-id3696 . -724) (undo-tree-id3697 . -724) (undo-tree-id3698 . -724) (undo-tree-id3699 . -724) (undo-tree-id3700 . -724) (undo-tree-id3701 . -724) (undo-tree-id3702 . -724) (undo-tree-id3703 . -732) (undo-tree-id3704 . -732) (undo-tree-id3705 . -732) (undo-tree-id3706 . -732) (undo-tree-id3707 . -732) (undo-tree-id3708 . -732) (undo-tree-id3709 . -732) (undo-tree-id3710 . -738) (undo-tree-id3711 . -738) (undo-tree-id3712 . -738) (undo-tree-id3713 . -738) (undo-tree-id3714 . -738) (undo-tree-id3715 . -738) (undo-tree-id3716 . -738) (undo-tree-id3717 . -748) (undo-tree-id3718 . -748) (undo-tree-id3719 . -748) (undo-tree-id3720 . -748) (undo-tree-id3721 . -748) (undo-tree-id3722 . -748) (undo-tree-id3723 . -748) (undo-tree-id3724 . -753) (undo-tree-id3725 . -753) (undo-tree-id3726 . -753) (undo-tree-id3727 . -753) (undo-tree-id3728 . -753) (undo-tree-id3729 . -753) (undo-tree-id3730 . -753) (undo-tree-id3731 . -756) (undo-tree-id3732 . -756) (undo-tree-id3733 . -756) (undo-tree-id3734 . -756) (undo-tree-id3735 . -756) (undo-tree-id3736 . -756) (undo-tree-id3737 . -756) (undo-tree-id3738 . -764) (undo-tree-id3739 . -764) (undo-tree-id3740 . -764) (undo-tree-id3741 . -764) (undo-tree-id3742 . -764) (undo-tree-id3743 . -764) (undo-tree-id3744 . -764) (undo-tree-id3745 . -768) (undo-tree-id3746 . -768) (undo-tree-id3747 . -768) (undo-tree-id3748 . -768) (undo-tree-id3749 . -768) (undo-tree-id3750 . -768) (undo-tree-id3751 . -768) (undo-tree-id3752 . -768) (undo-tree-id3753 . -768) (undo-tree-id3754 . -768) (undo-tree-id3755 . -768) (undo-tree-id3756 . -768) (undo-tree-id3757 . -819) (undo-tree-id3758 . -819) (undo-tree-id3759 . -819) (undo-tree-id3760 . -819) (undo-tree-id3761 . -819) (undo-tree-id3762 . -819) (undo-tree-id3763 . -819) (undo-tree-id3764 . -819) 9101) nil (25733 16283 931683 526000) 0 nil])
([nil nil ((8283 . 8284) (8282 . 8283) 8281) nil (25733 16283 912869 333000) 0 nil])
([nil nil ((8284 . 8328) (#("src" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8284) (undo-tree-id2679 . -1) (undo-tree-id2680 . -3) (undo-tree-id2681 . -1) (undo-tree-id2682 . -2) (undo-tree-id2683 . -3) (undo-tree-id2684 . -3) (undo-tree-id2685 . -3) (undo-tree-id2686 . -3) (undo-tree-id2687 . -3) (undo-tree-id2688 . -3) (undo-tree-id2689 . -3) (undo-tree-id2690 . -3) 8287 (8284 . 8287) (#("r" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8284) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) 8285 (8284 . 8285)) nil (25733 16283 912861 517000) 0 nil])
([nil nil ((8295 . 8300)) nil (25733 16283 912830 468000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 8297) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1)) nil (25733 16283 912826 194000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8298 . 8299) (nil fontified nil 8298 . 8299) (8298 . 8299) 8297) nil (25733 16283 912688 222000) 0 nil])
([nil nil ((8322 . 8324) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 8321) (undo-tree-id2637 . -2) (undo-tree-id2638 . -2) (undo-tree-id2639 . -2) (undo-tree-id2640 . -2) (undo-tree-id2641 . -2) (undo-tree-id2642 . -2) (undo-tree-id2643 . -2) (undo-tree-id2644 . -2) (undo-tree-id2645 . -2) (undo-tree-id2646 . -2) (undo-tree-id2647 . -2) (8323 . 8324) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 8324) (undo-tree-id2648 . -2) 8321 (8320 . 8323) 8298) nil (25733 16283 912680 902000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8514 . 8515) (nil fontified nil 8489 . 8515) (nil fontified nil 8477 . 8489) (nil fontified nil 8438 . 8477) (nil fontified nil 8403 . 8438) (nil fontified nil 8377 . 8403) (nil fontified nil 8351 . 8377) (nil fontified nil 8321 . 8351) (8321 . 8515)) nil (25733 16283 912644 59000) 0 nil])
([nil nil ((8321 . 8323) (8351 . 8353) (8377 . 8379) (8403 . 8405) (8438 . 8440) (8477 . 8479) (8489 . 8491) 8321) nil (25733 16283 912637 636000) 0 nil])
([nil nil ((8355 . 8357) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 8530) (undo-tree-id2579 . -2) (undo-tree-id2580 . -2) (undo-tree-id2581 . -2) (undo-tree-id2582 . -2) (undo-tree-id2583 . -2) (undo-tree-id2584 . -2) (undo-tree-id2585 . -2) (undo-tree-id2586 . -2) (undo-tree-id2587 . -2) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) 8321) nil (25733 16283 912628 204000) 0 nil])
([nil nil ((8385 . 8394) 8321) nil (25733 16283 912369 845000) 0 nil])
([nil nil ((8422 . 8431) 8321) nil (25733 16283 912367 674000) 0 nil])
([nil nil ((8468 . 8472) 8321) nil (25733 16283 912363 102000) 0 nil])
([nil nil ((8513 . 8524) 8321) nil (25733 16283 912356 175000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8538) (undo-tree-id2577 . 1) (undo-tree-id2578 . -1)) nil (25733 16283 912339 638000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8538)) nil (25733 16283 912207 187000) 0 nil])
([nil nil ((8478 . 8479) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8478) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (t 25733 16283 962044 439000)) nil (25733 16307 410321 99000) 0 nil])
([nil nil ((8478 . 8479) (#("'" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8478)) nil (25733 16307 410268 917000) 0 nil])
([nil nil ((8487 . 8488) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8487)) nil (25733 16307 410265 136000) 0 nil])
([nil nil ((8496 . 8497) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8496)) nil (25733 16307 410210 443000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -8536) (undo-tree-id3857 . -2) (undo-tree-id3858 . -2) 8538 (8535 . 8538) (t 25733 16307 498600 967000) 8534) nil (25733 16768 917825 475000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -8321) (undo-tree-id3856 . -2) 8323 (8320 . 8323) 8284) nil (25733 16768 917822 617000) 0 nil])
([nil nil ((#("*** SIDE EFFECTS CAN CAUSE BUGS
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 30 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 30 31 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 31 32 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 8581) (undo-tree-id3839 . -4) (undo-tree-id3840 . -4) (undo-tree-id3841 . -4) (undo-tree-id3842 . -4) (undo-tree-id3843 . -4) (undo-tree-id3844 . -4) (undo-tree-id3845 . -4) (undo-tree-id3846 . -4) (undo-tree-id3847 . -4) (undo-tree-id3848 . -4) (undo-tree-id3849 . -4) (undo-tree-id3850 . -4) (undo-tree-id3851 . -4) (undo-tree-id3852 . -4) (undo-tree-id3853 . -4) (undo-tree-id3854 . -4) (undo-tree-id3855 . -4) 8585) nil (25733 16768 917820 355000) 0 nil])
([nil nil ((#("*** 
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 5 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 8581) (undo-tree-id3821 . -3) (undo-tree-id3822 . -4) (undo-tree-id3823 . -3) (undo-tree-id3824 . -3) (undo-tree-id3825 . -3) (undo-tree-id3826 . -3) (undo-tree-id3827 . -3) (undo-tree-id3828 . -3) (undo-tree-id3829 . -3) (undo-tree-id3830 . -3) (undo-tree-id3831 . -3) (undo-tree-id3832 . -3) (undo-tree-id3833 . -3) (undo-tree-id3834 . -3) (undo-tree-id3835 . -3) (undo-tree-id3836 . -3) (undo-tree-id3837 . -3) (undo-tree-id3838 . -3) 8584) nil (25733 16768 917808 110000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8581 . 8582) (#("
" 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . -8586) (8581 . 8587)) nil (25733 16768 917795 617000) 0 nil])
([nil nil ((8594 . 8608) (#("o" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8594) (undo-tree-id3796 . -1) (#("n" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8595) (undo-tree-id3797 . -1) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8596) (undo-tree-id3798 . -1) 8597 (8593 . 8597) (#("o" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8593) (undo-tree-id3799 . -1) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8594) (undo-tree-id3800 . -1) (#("o" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8595) (undo-tree-id3801 . -1) 8596 (8594 . 8596) (#("n" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8594) (undo-tree-id3802 . -1) 8595 (8593 . 8595) (#("t" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8593) (undo-tree-id3803 . -1) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8594) (undo-tree-id3804 . -1) (#("o" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8595) (undo-tree-id3805 . -1) 8596 (8593 . 8596) (#("e" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8593) (undo-tree-id3806 . -1) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8594) (undo-tree-id3807 . -1) 8595 (8593 . 8595) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8593) (undo-tree-id3808 . -1) (#("v" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8594) (undo-tree-id3809 . -1) (#("e" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8595) (undo-tree-id3810 . -1) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8596) (undo-tree-id3811 . -1) 8597 (8587 . 8597) (#("p" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8587) (undo-tree-id3812 . -1) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8588) (undo-tree-id3813 . -1) (#("c" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8589) (undo-tree-id3814 . -1) (#("a" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8590) (undo-tree-id3815 . -1) (#("t" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8591) (undo-tree-id3816 . -1) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8592) (undo-tree-id3817 . -1) (#("v" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8593) (undo-tree-id3818 . -1) (#("e" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8594) (undo-tree-id3819 . -1) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8595) (undo-tree-id3820 . -1) 8596 (8585 . 8596) (8582 . 8585) (8581 . 8582) 8581) nil (25733 16768 917789 435000) 0 nil])
([nil nil ((8613 . 8614) 8612) nil (25733 16768 917769 847000) 0 nil])
([nil nil ((8608 . 8609) 8587) nil (25733 16768 917769 64000) 0 nil])
([nil nil ((8621 . 8627) (#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . 8621) (8622 . 8622) 8621 (8613 . 8621)) nil (25733 16768 917767 942000) 0 nil])
([nil nil ((8645 . 8651) (8643 . 8645) (8638 . 8643) (#("p" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8638) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) 8639 (8638 . 8639) (#("F" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8638) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (#("E" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8639) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (#("R" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8640) (undo-tree-id3780 . -1) (#("A" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8641) (undo-tree-id3781 . -1) (#("T" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8642) (undo-tree-id3782 . -1) (#("O" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8643) (undo-tree-id3783 . -1) (#("R" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8644) (undo-tree-id3784 . -1) (#("
" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . -8645) (undo-tree-id3785 . -1) (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8646) (undo-tree-id3786 . -1) (#("*" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8647) (undo-tree-id3787 . -1) (#("*" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8648) (undo-tree-id3788 . -1) (#("*" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t org-emphasis t)) . -8649) (undo-tree-id3789 . -1) (#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . -8650) (undo-tree-id3790 . -1) 8651 (8645 . 8651) (8642 . 8645) (8638 . 8642) (#("E" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8638) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) 8639 (8628 . 8639) (#("M" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8628) (undo-tree-id3794 . -1) 8629 (8628 . 8629) (#("h" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8628) (undo-tree-id3795 . -1) 8629 (8627 . 8629)) nil (25733 16768 921760 573000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 8650) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (8651 . 8652)) nil (25733 16800 957340 816000) 0 nil] [nil nil ((nil fontified t 8651 . 8652) (nil line-prefix #("**" 0 2 (face org-indent)) 8651 . 8652) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 8651 . 8652) (nil keymap (keymap) 8651 . 8652) (nil face org-level-3 8651 . 8652) (nil fontified t 8650 . 8651) (nil line-prefix #("**" 0 2 (face org-indent)) 8650 . 8651) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 8650 . 8651) (nil composition (2 1 [9675]) 8650 . 8651) (nil keymap (keymap) 8650 . 8651) (nil face org-level-3 8650 . 8651) (nil fontified t 8648 . 8650) (nil line-prefix #("**" 0 2 (face org-indent)) 8648 . 8650) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 8648 . 8650) (nil face org-hide 8648 . 8650) (nil keymap (keymap) 8648 . 8650) (#("*** " 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 8647) (8651 . 8656) 8650) ((#("**** " 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 3 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 3 4 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 4 5 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 8651) (8647 . 8651) (nil keymap (keymap) 8648 . 8650) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 8648 . 8650) (nil line-prefix #("***" 0 3 (face org-indent)) 8648 . 8650) (nil fontified nil 8648 . 8650) (nil face org-level-4 8650 . 8651) (nil keymap (keymap) 8650 . 8651) (nil composition (1 1 [9679]) 8650 . 8651) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 8650 . 8651) (nil line-prefix #("***" 0 3 (face org-indent)) 8650 . 8651) (nil fontified nil 8650 . 8651) (nil face org-level-4 8651 . 8652) (nil keymap (keymap) 8651 . 8652) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 8651 . 8652) (nil line-prefix #("***" 0 3 (face org-indent)) 8651 . 8652)) (25733 16768 917726 174000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8681 . 8682) (nil fontified nil 8651 . 8682) (8651 . 8682)) nil (25733 16800 957333 394000) 0 nil])
nil
([nil nil ((8650 . 8651) (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8650) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . 1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) 8649) nil (25733 16800 957330 845000) 0 nil])
([nil nil ((8683 . 8684) (8682 . 8683) 8650) nil (25733 16800 957304 698000) 0 nil])
([nil nil ((8684 . 8688)) nil (25733 16800 957303 349000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8705 . 8706) (nil fontified nil 8688 . 8706) (8688 . 8706) 8687) nil (25733 16800 957301 863000) 0 nil])
([nil nil ((8706 . 8712)) nil (25733 16800 957296 150000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8731 . 8732) (nil fontified nil 8712 . 8732) (8712 . 8732) 8711 (t 25733 16801 20803 964000)) nil (25733 16812 417171 925000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . 8732) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (8733 . 8734) (8732 . 8733)) nil (25733 16819 222854 770000) 0 nil] [nil nil ((8731 . 8738) (#("R" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3)) . 8731) (undo-tree-id3895 . -1)) ((8731 . 8732) (#("

*** R" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 2 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 4 5 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 5 6 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 6 7 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3)) . 8731) (undo-tree-id3896 . -6) (undo-tree-id3897 . -6) (undo-tree-id3898 . -6)) (25733 16812 416745 233000) 0 nil])
([nil nil ((8734 . 8738) (8732 . 8734) (#("
" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . -8732) (undo-tree-id3899 . -1) (undo-tree-id3900 . 1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) 8733) nil (25733 16819 222843 960000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 8763 . 8764) (nil fontified nil 8738 . 8764) (8738 . 8764) 8737 (t 25733 16819 233142 620000)) nil (25733 16846 159707 507000) 0 nil])
([nil nil ((8764 . 8770)) nil (25733 16846 159705 951000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8796 . 8797) (nil fontified nil 8770 . 8797) (8770 . 8797) 8769) nil (25733 16846 159704 387000) 0 nil])
([nil nil ((8797 . 8803)) nil (25733 16846 159698 760000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8821 . 8822) (nil fontified nil 8803 . 8822) (8803 . 8822) 8802 (t 25733 16846 173640 189000)) nil (25733 16876 958856 783000) 0 nil])
([nil nil ((8822 . 8828) (t 25733 16876 974204 344000)) nil (25733 16961 490311 44000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8832 . 8833) (nil fontified nil 8828 . 8833) (8828 . 8833) 8827) nil (25733 16961 490310 120000) 0 nil])
([nil nil ((8622 . 8623)) nil (25733 16961 490308 933000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8643 . 8644) (nil fontified nil 8623 . 8644) (8623 . 8644)) nil (25733 16961 490308 255000) 0 nil])
([nil nil ((8644 . 8645)) nil (25733 16961 490307 401000) 0 nil])
([nil nil ((8623 . 8667) (#("src" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8623) (undo-tree-id3941 . -2) (undo-tree-id3942 . -2) (undo-tree-id3943 . -3) (undo-tree-id3944 . -2) (undo-tree-id3945 . -3) (undo-tree-id3946 . -3) (undo-tree-id3947 . -3) (undo-tree-id3948 . -3) (undo-tree-id3949 . -3) (undo-tree-id3950 . -3) (undo-tree-id3951 . -3) (undo-tree-id3952 . -3) (undo-tree-id3953 . -3) (undo-tree-id3954 . -3) (undo-tree-id3955 . -3) (undo-tree-id3956 . -3) (undo-tree-id3957 . -3) (undo-tree-id3958 . -3) (undo-tree-id3959 . -3) (undo-tree-id3960 . -3) (undo-tree-id3961 . -3) (undo-tree-id3962 . -3) (undo-tree-id3963 . -3) (undo-tree-id3964 . -3) (undo-tree-id3965 . -3) (undo-tree-id3966 . -3) (undo-tree-id3967 . -3) (undo-tree-id3968 . -3) (undo-tree-id3969 . -3) (undo-tree-id3970 . -3) (undo-tree-id3971 . -3) (undo-tree-id3972 . -3) (undo-tree-id3973 . -3) (undo-tree-id3974 . 3) (undo-tree-id3975 . -3) (undo-tree-id3976 . -3) (undo-tree-id3977 . -3) (undo-tree-id3978 . -3) (undo-tree-id3979 . -3) (undo-tree-id3980 . -3) (undo-tree-id3981 . -3) (undo-tree-id3982 . -3) (undo-tree-id3983 . -3) 8626 (#("p" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8626) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8627) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) 8628 (8623 . 8628) (#("r" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8623) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) 8624 (8623 . 8624) (8622 . 8623)) nil (25733 16961 490302 792000) 0 nil])
([nil nil ((8634 . 8639)) nil (25733 16961 490233 343000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8719 . 8720) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8769) (8719 . 8770)) nil (25733 16961 490232 504000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8805 . 8806) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8855) (8805 . 8856) 8774) nil (25733 16961 490231 416000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8879 . 8880) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8929) (8879 . 8930) 8861) nil (25733 16961 490230 303000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8955 . 8956) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -9005) (8955 . 9006) 8935) nil (25733 16961 490229 299000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9037 . 9038) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -9087) (9037 . 9088) 9011) nil (25733 16961 490228 167000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9120 . 9121) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -9170) (9120 . 9171) 9093) nil (25733 16961 490226 905000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9195 . 9196) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -9245) (9195 . 9246) 9176) nil (25733 16961 490225 79000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9256 . 9257) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -9306) (9256 . 9307) 9251) nil (25733 16961 490220 46000) 0 nil])
([nil nil ((#("(funcall #’cons ’a ’b)
" 0 20 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 20 21 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t) 21 22 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 22 23 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8673) (undo-tree-id4040 . 23) (undo-tree-id4041 . -1) (undo-tree-id4042 . 2) (undo-tree-id4043 . -22) (t 25733 16961 507729 139000)) nil (25733 16984 36223 513000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8659 . 8660) (#("
" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8682) (8659 . 8683) 8623) nil (25733 16984 36217 824000) 0 nil])
([nil nil ((8670 . 8671) (#("’" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8670) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1)) nil (25733 16984 36215 192000) 0 nil])
([nil nil ((8676 . 8677) (#("’" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8676)) nil (25733 16984 36200 122000) 0 nil])
([nil nil ((8679 . 8680) (#("’" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8679)) nil (25733 17024 383069 522000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8839 . 8840) (nil fontified nil 8833 . 8840) (nil fontified nil 8812 . 8833) (nil fontified nil 8794 . 8812) (nil fontified nil 8779 . 8794) (nil fontified nil 8743 . 8779) (nil fontified nil 8738 . 8743) (nil fontified nil 8702 . 8738) (nil fontified nil 8685 . 8702) (8685 . 8840) 8686 (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 8685) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) 8686 (t 25733 16984 48130 391000)) nil (25733 17090 282921 137000) 0 nil] [nil nil ((8670 . 8671) (#("'" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8670) (t 25733 16984 48130 391000)) ((8670 . 8671) (#("`" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8670)) (25733 17024 382523 315000) 0 nil])
([nil nil ((#("#<Compiled-function CONS {6041410}>
" 0 36 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8702) (undo-tree-id4127 . -6) (undo-tree-id4128 . -6) (undo-tree-id4129 . -6) (undo-tree-id4130 . -6) (undo-tree-id4131 . -6) (undo-tree-id4132 . -6) (undo-tree-id4133 . -6) (undo-tree-id4134 . -6) (undo-tree-id4135 . -6) (undo-tree-id4136 . -6) (undo-tree-id4137 . -6) (undo-tree-id4138 . -6) (undo-tree-id4139 . -6) (undo-tree-id4140 . -6) (undo-tree-id4141 . -6) (undo-tree-id4142 . -6) 8708) nil (25733 17090 282907 979000) 0 nil])
nil
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8702) (undo-tree-id4125 . 1) (undo-tree-id4126 . -1)) nil (25733 17090 282898 408000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8702) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1)) nil (25733 17090 282895 432000) 0 nil])
([nil nil ((#("#<Compiled-function CONS {6041410}>
" 0 36 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8705) (undo-tree-id4117 . -6)) nil (25733 17090 282890 670000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8705) (undo-tree-id4115 . 1) (undo-tree-id4116 . -1)) nil (25733 17090 282889 264000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8705)) nil (25733 17090 282887 425000) 0 nil])
([nil nil ((#("COMPILED-FUNCTION
" 0 18 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8718) (undo-tree-id4114 . -6)) nil (25733 17090 282886 648000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8718) (undo-tree-id4112 . 1) (undo-tree-id4113 . -1)) nil (25733 17090 282884 828000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8718)) nil (25733 17090 282883 46000) 0 nil])
([nil nil ((#("(C . D)#+END_SRC
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 1 6 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 7 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 7 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 13 16 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 16 17 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 8737) (undo-tree-id4078 . 10) (undo-tree-id4079 . -6) (undo-tree-id4080 . -17) (undo-tree-id4081 . -17) (undo-tree-id4082 . -6) (undo-tree-id4083 . -6) (undo-tree-id4084 . -6) (undo-tree-id4085 . -6) (undo-tree-id4086 . -6) (undo-tree-id4087 . -6) (undo-tree-id4088 . -6) (undo-tree-id4089 . -6) (undo-tree-id4090 . -6) (undo-tree-id4091 . -6) (undo-tree-id4092 . -6) (undo-tree-id4093 . -6) (undo-tree-id4094 . -6) (undo-tree-id4095 . -6) (undo-tree-id4096 . -6) (undo-tree-id4097 . -6) (undo-tree-id4098 . -6) (undo-tree-id4099 . -6) (undo-tree-id4100 . -6) (undo-tree-id4101 . -6) (undo-tree-id4102 . -6) (undo-tree-id4103 . -6) (undo-tree-id4104 . -6) (undo-tree-id4105 . -6) (undo-tree-id4106 . -6) (undo-tree-id4107 . -6) (undo-tree-id4108 . 17) (undo-tree-id4109 . -1) (undo-tree-id4110 . 11) (undo-tree-id4111 . -7)) nil (25733 17090 282880 748000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 8683) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1)) nil (25733 17090 282297 785000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 8683) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1)) nil (25733 17090 283150 765000) 0 nil])
([nil nil ((8728 . 8729) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8728) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1)) nil (25733 17130 624622 337000) 0 nil] [nil nil ((#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8728)) ((8728 . 8729)) (25733 17090 282248 70000) 0 nil])
([nil nil ((8731 . 8732) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8731)) nil (25733 17130 624617 299000) 0 nil])
nil
([nil nil ((8716 . 8717) (8715 . 8716) 8714) nil (25733 17130 624616 172000) 0 nil])
([nil nil ((8699 . 8700) 8683) nil (25733 17130 624615 226000) 0 nil])
([nil nil ((8659 . 8660) 8623) nil (25733 17130 624614 167000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8701) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1)) nil (25733 17130 624612 461000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8717) (undo-tree-id4162 . 1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1)) nil (25733 17130 624595 216000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8717) (undo-tree-id4160 . -1) (undo-tree-id4161 . 1)) nil (25733 17130 624571 314000) 0 nil])
([nil nil ((8735 . 8736) 8717) nil (25733 17130 624569 164000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8736 . 8737) (#("
" 0 1 (font-lock-fontified t font-lock-multiline t face org-block-begin-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -8773) (8736 . 8774)) nil (25733 17130 624568 57000) 0 nil])
([nil nil ((8739 . 8742) (#("BEGIN" 0 5 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8739) (undo-tree-id4147 . -4) (undo-tree-id4148 . -4) (undo-tree-id4149 . -4) (undo-tree-id4150 . -5) (undo-tree-id4151 . -4) (undo-tree-id4152 . -4) (undo-tree-id4153 . -4) (undo-tree-id4154 . -4) (undo-tree-id4155 . -4) (undo-tree-id4156 . -4) (undo-tree-id4157 . -4) (undo-tree-id4158 . -4) (undo-tree-id4159 . -4) 8743) nil (25733 17130 624565 617000) 0 nil])
([nil nil ((#(":results output " 0 8 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil src-block t font-lock-multiline t face org-block-end-line) 8 16 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) src-block t font-lock-multiline t face org-block-end-line)) . 8755)) nil (25733 17130 624543 99000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8769 . 8770) (nil fontified nil 8764 . 8770) (8764 . 8770) 8769 (#("MACRO" 0 5 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . 8764) (undo-tree-id4219 . -5) (undo-tree-id4220 . -4) (undo-tree-id4221 . -4) (undo-tree-id4222 . -5) (undo-tree-id4223 . -4) (undo-tree-id4224 . -4) (undo-tree-id4225 . -4) (undo-tree-id4226 . -4) (undo-tree-id4227 . -4) (undo-tree-id4228 . -4) (undo-tree-id4229 . -4) (undo-tree-id4230 . -5) (undo-tree-id4231 . -5) 8769 (t 25733 17130 690694 341000)) nil (25733 17146 839801 209000) 0 nil])
([nil nil ((8756 . 8759) (8755 . 8756) (t 25733 17146 850972 523000) 8746) nil (25733 17183 460807 9000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t face org-block-end-line)) . 8759) (undo-tree-id4296 . 1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1)) nil (25733 17183 460805 773000) 0 nil])
([nil nil ((8834 . 8835) (8834 . 8835)) nil (25733 17183 460803 333000) 0 nil])
([nil nil ((8872 . 8873) (8872 . 8873)) nil (25733 17183 460802 578000) 0 nil])
([nil nil ((8925 . 8926) (8925 . 8926) 8929) nil (25733 17183 460801 684000) 0 nil])
([nil nil ((8950 . 8951) (8950 . 8951)) nil (25733 17183 460800 816000) 0 nil])
([nil nil ((8951 . 8952) (8951 . 8952)) nil (25733 17183 460799 908000) 0 nil])
([nil nil ((9030 . 9031) (9030 . 9031)) nil (25733 17183 460799 72000) 0 nil])
([nil nil ((9114 . 9115) (9114 . 9115)) nil (25733 17183 460798 299000) 0 nil])
([nil nil ((9199 . 9200) (9199 . 9200)) nil (25733 17183 460797 460000) 0 nil])
([nil nil ((9276 . 9277) (9276 . 9277)) nil (25733 17183 460796 484000) 0 nil])
([nil nil ((9339 . 9340) (9339 . 9340)) nil (25733 17183 460795 361000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8925) (undo-tree-id4267 . 1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1)) nil (25733 17183 460793 292000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8925) (undo-tree-id4266 . 1)) nil (25733 17183 460773 934000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8948) (undo-tree-id4253 . 1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1)) nil (25733 17183 460771 911000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8948) (undo-tree-id4236 . 1) (undo-tree-id4237 . 1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1)) nil (25733 17183 460762 455000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8948) (undo-tree-id4232 . 1) (undo-tree-id4233 . 1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1)) nil (25733 17183 460746 680000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8835) (t 25733 17183 475600 170000)) nil (25733 17191 915395 682000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8871) (undo-tree-id4308 . -1)) nil (25733 17191 915394 542000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8757) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1)) nil (25733 17191 915392 140000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8757) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1)) nil (25733 17191 915383 989000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8846 . 8847) (nil fontified nil 8821 . 8847) (8821 . 8847) 8820 (t 25733 17191 931744 550000)) nil (25733 17263 149201 795000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -8848) (undo-tree-id4320 . -2) (undo-tree-id4321 . -2) (undo-tree-id4322 . -2) (undo-tree-id4323 . -2) (undo-tree-id4324 . -2) (undo-tree-id4325 . -2) (undo-tree-id4326 . -2) (undo-tree-id4327 . -2) (undo-tree-id4328 . -2) (undo-tree-id4329 . -2) (undo-tree-id4330 . -2) 8850 (8847 . 8850) 8846) nil (25733 17263 149200 47000) 0 nil])
([nil nil ((8821 . 8822) (8839 . 8843) 8819 (8838 . 8839)) nil (25733 17263 149191 779000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8821) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8840) 8819) nil (25733 17263 149190 7000) 0 nil])
([nil nil ((8853 . 8855) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 8852) (undo-tree-id4309 . -2) (undo-tree-id4310 . -2) (undo-tree-id4311 . -2) (undo-tree-id4312 . -2) (undo-tree-id4313 . -2) (undo-tree-id4314 . -2) (undo-tree-id4315 . -2) (undo-tree-id4316 . -2) (undo-tree-id4317 . -2) (undo-tree-id4318 . -2) (undo-tree-id4319 . -2) (8854 . 8855) (8851 . 8854) 8843) nil (25733 17263 149185 201000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8884 . 8885) (nil fontified nil 8855 . 8885) (8855 . 8885) 8854 (t 25733 17263 164953 425000)) nil (25733 17283 162679 19000) 0 nil])
([nil nil ((8864 . 8865) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 8864) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1)) nil (25733 17283 162676 507000) 0 nil])
([nil nil ((8872 . 8873) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8872)) nil (25733 17283 162656 515000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9048 . 9049) (nil fontified nil 9036 . 9049) (nil fontified nil 9022 . 9036) (nil fontified nil 9008 . 9022) (nil fontified nil 8997 . 9008) (nil fontified nil 8986 . 8997) (nil fontified nil 8974 . 8986) (8974 . 9049) 8973 (t 25733 17283 177290 834000)) nil (25733 17315 290498 140000) 0 nil])
([nil nil ((8986 . 8988) (8997 . 8999) (9008 . 9010) (9022 . 9024) (9036 . 9038) 8972) nil (25733 17315 290496 134000) 0 nil])
([nil nil ((9001 . 9003) 8972) nil (25733 17315 290494 766000) 0 nil])
([nil nil ((9016 . 9018) 8972) nil (25733 17315 290493 933000) 0 nil])
([nil nil ((9034 . 9036) 8972) nil (25733 17315 290493 68000) 0 nil])
([nil nil ((9052 . 9054) 8972) nil (25733 17315 290491 789000) 0 nil])
([nil nil ((8988 . 8989) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8988)) nil (25733 17315 290486 811000) 0 nil])
([nil nil ((9069 . 9071) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 9068) (undo-tree-id4442 . -2) (undo-tree-id4443 . -2) (undo-tree-id4444 . -2) (undo-tree-id4445 . -2) (undo-tree-id4446 . -2) (undo-tree-id4447 . -2) (undo-tree-id4448 . -2) (undo-tree-id4449 . -2) (undo-tree-id4450 . -2) (undo-tree-id4451 . -2) (undo-tree-id4452 . -2) (undo-tree-id4453 . -2) (undo-tree-id4454 . -2) (undo-tree-id4455 . -2) (undo-tree-id4456 . -2) (undo-tree-id4457 . -2) (undo-tree-id4458 . -2) (undo-tree-id4459 . -2) (undo-tree-id4460 . -2) (undo-tree-id4461 . -2) (undo-tree-id4462 . -2) (undo-tree-id4463 . -2) (undo-tree-id4464 . -2) (undo-tree-id4465 . -2) (9067 . 9071) (t 25733 17315 305830 643000)) nil (25733 17370 566284 865000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9685 . 9686) (nil fontified nil 9661 . 9686) (nil fontified nil 9611 . 9661) (nil fontified nil 9585 . 9611) (nil fontified nil 9564 . 9585) (nil fontified nil 9509 . 9564) (nil fontified nil 9441 . 9509) (nil fontified nil 9428 . 9441) (nil fontified nil 9414 . 9428) (nil fontified nil 9400 . 9414) (nil fontified nil 9389 . 9400) (nil fontified nil 9379 . 9389) (nil fontified nil 9352 . 9379) (nil fontified nil 9322 . 9352) (nil fontified nil 9249 . 9322) (nil fontified nil 9221 . 9249) (nil fontified nil 9195 . 9221) (nil fontified nil 9188 . 9195) (nil fontified nil 9117 . 9188) (nil fontified nil 9091 . 9117) (nil fontified nil 9068 . 9091) (9068 . 9686)) nil (25733 17370 566268 503000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 9743) (undo-tree-id4402 . -2) (undo-tree-id4403 . -2) (undo-tree-id4404 . -2) (undo-tree-id4405 . -2) (undo-tree-id4406 . -2) (undo-tree-id4407 . -2) (undo-tree-id4408 . -2) (undo-tree-id4409 . -2) (undo-tree-id4410 . -2) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) 8972 (9081 . 9083) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9080) (undo-tree-id4431 . -2) (undo-tree-id4432 . -2) (undo-tree-id4433 . -2) (undo-tree-id4434 . -2) (undo-tree-id4435 . -2) (undo-tree-id4436 . -2) (undo-tree-id4437 . -2) (undo-tree-id4438 . -2) (undo-tree-id4439 . -2) (undo-tree-id4440 . -2) (undo-tree-id4441 . -2) (9082 . 9083) (8974 . 8976) (8986 . 8988) (9003 . 9005) (9014 . 9015) (9018 . 9019) (9032 . 9034) (9054 . 9056) (9071 . 9073) (9094 . 9096) (9120 . 9122) (9191 . 9193) (9198 . 9200) (9224 . 9226) (9252 . 9254) (9325 . 9327) (9355 . 9357) (9382 . 9384) (9392 . 9394) (9403 . 9405) (9417 . 9419) (9431 . 9433) (9444 . 9446) (9512 . 9514) (9567 . 9569) (9588 . 9590) (9614 . 9616) (9664 . 9666) 8972 (9067 . 9070) 9066) nil (25733 17370 566262 972000) 0 nil])
([nil nil ((9095 . 9096) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9095)) nil (25733 17370 566231 141000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -9107) (undo-tree-id4362 . -2) (undo-tree-id4363 . -2) (undo-tree-id4364 . -2) (undo-tree-id4365 . -2) (undo-tree-id4366 . -2) (undo-tree-id4367 . -2) (undo-tree-id4368 . -2) (undo-tree-id4369 . -2) (undo-tree-id4370 . -2) (undo-tree-id4371 . -2) (undo-tree-id4372 . -2) 9109 (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9081) (undo-tree-id4373 . -2) (undo-tree-id4374 . -2) (undo-tree-id4375 . -2) (undo-tree-id4376 . -2) (undo-tree-id4377 . -2) (undo-tree-id4378 . -2) (undo-tree-id4379 . -2) (undo-tree-id4380 . -2) (undo-tree-id4381 . -2) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) 8972 (9108 . 9111) 9102) nil (25733 17370 566228 716000) 0 nil])
([nil nil ((#("  (ONE TWO THREE FOUR FIVE)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 3 26 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26 27 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 27 28 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9108) (undo-tree-id4361 . -26)) nil (25733 17370 566197 288000) 0 nil])
([nil nil ((#("  We can extract the French words by taking the second component of each
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 73 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9108) (undo-tree-id4354 . -26) (undo-tree-id4355 . -26) (undo-tree-id4356 . -26) (undo-tree-id4357 . -26) (undo-tree-id4358 . -26) (undo-tree-id4359 . -26) (undo-tree-id4360 . -26)) nil (25733 17370 566195 634000) 0 nil])
([nil nil ((#("  entry:
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9108) (undo-tree-id4347 . -7) (undo-tree-id4348 . -7) (undo-tree-id4349 . -7) (undo-tree-id4350 . -7) (undo-tree-id4351 . -7) (undo-tree-id4352 . -7) (undo-tree-id4353 . -7)) nil (25733 17370 566189 297000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9110) (undo-tree-id4345 . 1) (undo-tree-id4346 . -1)) nil (25733 17370 566182 592000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9110)) nil (25733 17370 566579 786000) 0 nil])
([nil nil ((9119 . 9120) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9119) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1)) nil (25733 17411 606199 113000) 0 nil] [nil nil ((#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9119) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1)) ((9119 . 9120)) (25733 17370 566175 554000) 0 nil])
([nil nil ((9135 . 9137) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 9134) (undo-tree-id4743 . -2) (undo-tree-id4744 . -2) (undo-tree-id4745 . -2) (undo-tree-id4746 . -2) (undo-tree-id4747 . -2) (undo-tree-id4748 . -2) (undo-tree-id4749 . -2) (undo-tree-id4750 . -2) (undo-tree-id4751 . -2) (undo-tree-id4752 . -2) (undo-tree-id4753 . -2) (9136 . 9137) (9133 . 9136) 9132) nil (25733 17411 606193 330000) 0 nil])
nil
([nil nil ((#("  
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9135) (undo-tree-id4709 . 1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -2) (undo-tree-id4712 . -2) (undo-tree-id4713 . -2) (undo-tree-id4714 . -2) (undo-tree-id4715 . -2) (undo-tree-id4716 . -2) (undo-tree-id4717 . -2) (undo-tree-id4718 . -2) (undo-tree-id4719 . -2) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) 9136) nil (25733 17411 606184 997000) 0 nil])
([nil nil ((#("  (UN DEUX TROIS QUATRE CINQ)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 3 28 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28 29 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 29 30 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9135) (undo-tree-id4680 . 30) (undo-tree-id4681 . -2) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -2) (undo-tree-id4691 . -2) (undo-tree-id4692 . -2) (undo-tree-id4693 . -2) (undo-tree-id4694 . -2) (undo-tree-id4695 . -2) (undo-tree-id4696 . 28) (undo-tree-id4697 . -3) (undo-tree-id4698 . 2) (undo-tree-id4699 . -29) (undo-tree-id4700 . -2) (undo-tree-id4701 . -2) (undo-tree-id4702 . -2) (undo-tree-id4703 . -2) (undo-tree-id4704 . -2) (undo-tree-id4705 . -2) (undo-tree-id4706 . -2) (undo-tree-id4707 . -2) (undo-tree-id4708 . -2) 9137) nil (25733 17411 606162 203000) 0 nil])
([nil nil ((#("  We can create a French–English dictionary from the English–French one by
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 75 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9135) (undo-tree-id4662 . 75) (undo-tree-id4663 . -2) (undo-tree-id4664 . -2) (undo-tree-id4665 . -2) (undo-tree-id4666 . -2) (undo-tree-id4667 . -2) (undo-tree-id4668 . -2) (undo-tree-id4669 . -2) (undo-tree-id4670 . -2) (undo-tree-id4671 . -2) (undo-tree-id4672 . -2) (undo-tree-id4673 . -2) (undo-tree-id4674 . -2) (undo-tree-id4675 . -2) (undo-tree-id4676 . -2) (undo-tree-id4677 . -2) (undo-tree-id4678 . -2) (undo-tree-id4679 . -2) 9137) nil (25733 17411 606143 189000) 0 nil])
([nil nil ((#("  reversing each table element:
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 32 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9135) (undo-tree-id4644 . 32) (undo-tree-id4645 . -2) (undo-tree-id4646 . -2) (undo-tree-id4647 . -2) (undo-tree-id4648 . -2) (undo-tree-id4649 . -2) (undo-tree-id4650 . -2) (undo-tree-id4651 . -2) (undo-tree-id4652 . -2) (undo-tree-id4653 . -2) (undo-tree-id4654 . -2) (undo-tree-id4655 . -2) (undo-tree-id4656 . -2) (undo-tree-id4657 . -2) (undo-tree-id4658 . -2) (undo-tree-id4659 . -2) (undo-tree-id4660 . -2) (undo-tree-id4661 . -2) 9137) nil (25733 17411 606130 140000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9137) (undo-tree-id4642 . 1) (undo-tree-id4643 . -1)) nil (25733 17411 606116 537000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9137)) nil (25733 17411 606112 950000) 0 nil])
([nil nil ((9146 . 9147) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9146)) nil (25733 17411 606111 358000) 0 nil])
([nil nil ((#("  ((UN ONE)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 3 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 4 10 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10 11 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 11 12 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9162) (undo-tree-id4622 . -10) (undo-tree-id4623 . -10) (undo-tree-id4624 . -10) (undo-tree-id4625 . -10) (undo-tree-id4626 . -10) (undo-tree-id4627 . -10) (undo-tree-id4628 . -10) (undo-tree-id4629 . 2) (undo-tree-id4630 . -11) (undo-tree-id4631 . 9) (undo-tree-id4632 . -4) (undo-tree-id4633 . -10) (undo-tree-id4634 . -10) (undo-tree-id4635 . -10) (undo-tree-id4636 . -10) (undo-tree-id4637 . -10) (undo-tree-id4638 . -10) (undo-tree-id4639 . -10) (undo-tree-id4640 . -10) (undo-tree-id4641 . -10) 9172) nil (25733 17411 606108 971000) 0 nil])
([nil nil ((#("  (DEUX TWO)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 3 11 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11 12 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 12 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9162) (undo-tree-id4605 . -10) (undo-tree-id4606 . -10) (undo-tree-id4607 . -10) (undo-tree-id4608 . -10) (undo-tree-id4609 . -10) (undo-tree-id4610 . -10) (undo-tree-id4611 . -10) (undo-tree-id4612 . -10) (undo-tree-id4613 . -10) (undo-tree-id4614 . -10) (undo-tree-id4615 . -10) (undo-tree-id4616 . -10) (undo-tree-id4617 . -10) (undo-tree-id4618 . -10) (undo-tree-id4619 . -10) (undo-tree-id4620 . -10) (undo-tree-id4621 . -10) 9172) nil (25733 17411 606085 29000) 0 nil])
([nil nil ((#("  (TROIS THREE)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 3 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 15 16 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9162) (undo-tree-id4588 . -10) (undo-tree-id4589 . -10) (undo-tree-id4590 . -10) (undo-tree-id4591 . -10) (undo-tree-id4592 . -10) (undo-tree-id4593 . -10) (undo-tree-id4594 . -10) (undo-tree-id4595 . -10) (undo-tree-id4596 . -10) (undo-tree-id4597 . -10) (undo-tree-id4598 . -10) (undo-tree-id4599 . -10) (undo-tree-id4600 . -10) (undo-tree-id4601 . -10) (undo-tree-id4602 . -10) (undo-tree-id4603 . -10) (undo-tree-id4604 . -10) 9172) nil (25733 17411 606072 191000) 0 nil])
([nil nil ((#("  (QUATRE FOUR)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 3 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 15 16 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9162) (undo-tree-id4571 . -10) (undo-tree-id4572 . -10) (undo-tree-id4573 . -10) (undo-tree-id4574 . -10) (undo-tree-id4575 . -10) (undo-tree-id4576 . -10) (undo-tree-id4577 . -10) (undo-tree-id4578 . -10) (undo-tree-id4579 . -10) (undo-tree-id4580 . -10) (undo-tree-id4581 . -10) (undo-tree-id4582 . -10) (undo-tree-id4583 . -10) (undo-tree-id4584 . -10) (undo-tree-id4585 . -10) (undo-tree-id4586 . -10) (undo-tree-id4587 . -10) 9172) nil (25733 17411 606058 282000) 0 nil])
([nil nil ((#("  (CINQ FIVE))
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 3 12 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 13 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 14 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9162) (undo-tree-id4554 . -10) (undo-tree-id4555 . -10) (undo-tree-id4556 . -10) (undo-tree-id4557 . -10) (undo-tree-id4558 . -10) (undo-tree-id4559 . -10) (undo-tree-id4560 . -10) (undo-tree-id4561 . -10) (undo-tree-id4562 . -10) (undo-tree-id4563 . -10) (undo-tree-id4564 . -10) (undo-tree-id4565 . -10) (undo-tree-id4566 . -10) (undo-tree-id4567 . -10) (undo-tree-id4568 . -10) (undo-tree-id4569 . -10) (undo-tree-id4570 . -10) 9172) nil (25733 17411 605672 13000) 0 nil])
([nil nil ((#("  Given a function TRANSLATE, defined using ASSOC, we can translate a
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4 32 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32 70 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9162) (undo-tree-id4537 . -10) (undo-tree-id4538 . -10) (undo-tree-id4539 . -10) (undo-tree-id4540 . -10) (undo-tree-id4541 . -10) (undo-tree-id4542 . -10) (undo-tree-id4543 . -10) (undo-tree-id4544 . -10) (undo-tree-id4545 . -10) (undo-tree-id4546 . -10) (undo-tree-id4547 . -10) (undo-tree-id4548 . -10) (undo-tree-id4549 . -10) (undo-tree-id4550 . -10) (undo-tree-id4551 . -10) (undo-tree-id4552 . -10) (undo-tree-id4553 . -10) 9172) nil (25733 17411 605659 895000) 0 nil])
([nil nil ((#("  string of English digits into a string of French ones:
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 35 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 35 42 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42 43 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 43 44 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 44 45 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 45 46 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46 47 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47 57 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9162) (undo-tree-id4520 . -10) (undo-tree-id4521 . -10) (undo-tree-id4522 . -10) (undo-tree-id4523 . -10) (undo-tree-id4524 . -10) (undo-tree-id4525 . -10) (undo-tree-id4526 . -10) (undo-tree-id4527 . -10) (undo-tree-id4528 . -10) (undo-tree-id4529 . -10) (undo-tree-id4530 . -10) (undo-tree-id4531 . -10) (undo-tree-id4532 . -10) (undo-tree-id4533 . -10) (undo-tree-id4534 . -10) (undo-tree-id4535 . -10) (undo-tree-id4536 . -10) 9172) nil (25733 17411 605648 124000) 0 nil])
([nil nil ((9163 . 9165) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 9162) (undo-tree-id4509 . -2) (undo-tree-id4510 . -2) (undo-tree-id4511 . -2) (undo-tree-id4512 . -2) (undo-tree-id4513 . -2) (undo-tree-id4514 . -2) (undo-tree-id4515 . -2) (undo-tree-id4516 . -2) (undo-tree-id4517 . -2) (undo-tree-id4518 . -2) (undo-tree-id4519 . -2) (9164 . 9165) (9161 . 9164) 9145) nil (25733 17411 605634 781000) 0 nil])
([nil nil ((9216 . 9218) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 9215) (undo-tree-id4469 . -2) (undo-tree-id4470 . -2) (undo-tree-id4471 . -2) (undo-tree-id4472 . -2) (undo-tree-id4473 . -2) (undo-tree-id4474 . -2) (undo-tree-id4475 . -2) (undo-tree-id4476 . -2) (undo-tree-id4477 . -2) (undo-tree-id4478 . -2) (undo-tree-id4479 . -2) (9217 . 9218) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9163) (undo-tree-id4480 . -2) (undo-tree-id4481 . -2) (undo-tree-id4482 . -2) (undo-tree-id4483 . -2) (undo-tree-id4484 . -2) (undo-tree-id4485 . -2) (undo-tree-id4486 . -2) (undo-tree-id4487 . -2) (undo-tree-id4488 . -2) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) 8972 (9216 . 9219) 9191) nil (25733 17411 605623 500000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9220) (undo-tree-id4468 . -1)) nil (25733 17411 605590 907000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9220) (undo-tree-id4466 . 1) (undo-tree-id4467 . -1)) nil (25733 17411 605588 543000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9220)) nil (25733 17411 605490 511000) 0 nil])
([nil nil ((8976 . 8977) (8988 . 8989) (9009 . 9010) (9020 . 9021) (9046 . 9047) (9060 . 9061) (9082 . 9083) (9110 . 9111) (9135 . 9136) (9189 . 9190) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9216) (undo-tree-id4761 . -1) (9219 . 9220) (9268 . 9269) 8972 (t 25733 17411 691437 458000)) nil (25733 17449 836192 995000) 0 nil])
([nil nil ((9199 . 9200) 8972) nil (25733 17449 836121 644000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9280) 8972) nil (25733 17449 836120 410000) 0 nil])
([nil nil ((9239 . 9240) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9239)) nil (25733 17449 836118 823000) 0 nil])
([nil nil ((9250 . 9251) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9250)) nil (25733 17449 836113 743000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -9278) (undo-tree-id4762 . -2) (undo-tree-id4763 . -2) (undo-tree-id4764 . -2) (undo-tree-id4765 . -2) (undo-tree-id4766 . -2) (undo-tree-id4767 . -2) (undo-tree-id4768 . -2) (undo-tree-id4769 . -2) (undo-tree-id4770 . -2) (undo-tree-id4771 . -2) (undo-tree-id4772 . -2) (undo-tree-id4773 . -2) (undo-tree-id4774 . -2) (undo-tree-id4775 . -2) (undo-tree-id4776 . -2) (undo-tree-id4777 . -2) (undo-tree-id4778 . -2) (undo-tree-id4779 . -2) (undo-tree-id4780 . -2) (undo-tree-id4781 . -2) (undo-tree-id4782 . -2) (undo-tree-id4783 . -2) (undo-tree-id4784 . -2) (undo-tree-id4785 . -2) 9280 (9277 . 9280) (t 25733 17449 848068 870000) 9271) nil (25733 17461 394262 211000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9114) (undo-tree-id4818 . -1) (t 25733 17461 408259 688000)) nil (25733 17491 29123 684000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9141) (undo-tree-id4817 . -1)) nil (25733 17491 29121 312000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9169) (undo-tree-id4816 . -1)) nil (25733 17491 29119 870000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9223) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1)) nil (25733 17491 29118 439000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9223) (undo-tree-id4813 . -1)) nil (25733 17491 29116 257000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9273) (undo-tree-id4812 . 1)) nil (25733 17491 29114 766000) 0 nil])
([nil nil ((#("   " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 8974) 8972) nil (25733 17491 29113 144000) 0 nil])
([nil nil ((8991 . 8994) 8972) nil (25733 17491 29112 378000) 0 nil])
([nil nil ((9012 . 9015) 8972) nil (25733 17491 29111 613000) 0 nil])
([nil nil ((9033 . 9036) 8972) nil (25733 17491 29110 911000) 0 nil])
([nil nil ((9057 . 9060) 8972) nil (25733 17491 29110 151000) 0 nil])
([nil nil ((9081 . 9084) 8972) nil (25733 17491 29109 87000) 0 nil])
([nil nil ((9098 . 9100)) nil (25733 17491 29108 258000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9098) (undo-tree-id4786 . -2) (undo-tree-id4787 . -2) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9102) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) 8972) nil (25733 17491 29106 66000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9127) 8972) nil (25733 17491 29079 671000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9153) 8972) nil (25733 17491 29074 833000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9645 . 9646) (nil fontified nil 9633 . 9646) (nil fontified nil 9619 . 9633) (nil fontified nil 9586 . 9619) (nil fontified nil 9548 . 9586) (nil fontified nil 9476 . 9548) (nil fontified nil 9405 . 9476) (nil fontified nil 9385 . 9405) (9385 . 9646) 9384 (t 25733 17491 48747 986000)) nil (25733 17616 379759 507000) 0 nil])
([nil nil (9645) nil (25733 17616 379756 766000) 0 nil])
([nil nil ((9384 . 9385)) nil (25733 17616 379755 804000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 9385) (undo-tree-id4970 . -1) (undo-tree-id4971 . 1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1)) nil (25733 17616 379754 168000) 0 nil])
([nil nil ((#("Since lambda expressions are functions, they can be passed directly to
" 0 71 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9405) (undo-tree-id4959 . -2) (undo-tree-id4960 . -71) (undo-tree-id4961 . -2) (undo-tree-id4962 . -2) (undo-tree-id4963 . -2) (undo-tree-id4964 . -2) (undo-tree-id4965 . -2) (undo-tree-id4966 . -2) (undo-tree-id4967 . -2) (undo-tree-id4968 . -2) (undo-tree-id4969 . -2) 9407) nil (25733 17616 379733 824000) 0 nil])
([nil nil ((#("MAPCAR by quoting them with #’. This saves you the trouble of writing a
" 0 71 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 71 72 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9405) (undo-tree-id4940 . -2) (undo-tree-id4941 . -72) (undo-tree-id4942 . -71) (undo-tree-id4943 . -2) (undo-tree-id4944 . -2) (undo-tree-id4945 . -2) (undo-tree-id4946 . -2) (undo-tree-id4947 . -2) (undo-tree-id4948 . -2) (undo-tree-id4949 . -2) (undo-tree-id4950 . -2) (undo-tree-id4951 . -2) (undo-tree-id4952 . -2) (undo-tree-id4953 . -2) (undo-tree-id4954 . -2) (undo-tree-id4955 . -2) (undo-tree-id4956 . -2) (undo-tree-id4957 . -2) (undo-tree-id4958 . -2) 9407) nil (25733 17616 379724 902000) 0 nil])
([nil nil ((#("separate DEFUN before calling MAPCAR.
" 0 37 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37 38 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9405) (undo-tree-id4921 . -2) (undo-tree-id4922 . -38) (undo-tree-id4923 . -37) (undo-tree-id4924 . -2) (undo-tree-id4925 . -2) (undo-tree-id4926 . -2) (undo-tree-id4927 . -2) (undo-tree-id4928 . -2) (undo-tree-id4929 . -2) (undo-tree-id4930 . -2) (undo-tree-id4931 . -2) (undo-tree-id4932 . -2) (undo-tree-id4933 . -2) (undo-tree-id4934 . -2) (undo-tree-id4935 . -2) (undo-tree-id4936 . -2) (undo-tree-id4937 . -2) (undo-tree-id4938 . -2) (undo-tree-id4939 . -2) 9407) nil (25733 17616 379710 883000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9405) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . 1) (undo-tree-id4920 . -1)) nil (25733 17616 379696 646000) 0 nil])
([nil nil ((9415 . 9416) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9415) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1)) nil (25733 17616 379690 658000) 0 nil])
([nil nil ((9436 . 9437) (#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -9436) (undo-tree-id4904 . -1) 9428) nil (25733 17616 379685 588000) 0 nil])
([nil nil ((#("(1 4 9 16 25)" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 1 12 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block))) . 9437) (undo-tree-id4893 . -12) (undo-tree-id4894 . -12) (undo-tree-id4895 . -12) (undo-tree-id4896 . -12) (undo-tree-id4897 . -12) (undo-tree-id4898 . -12) (undo-tree-id4899 . -12) (undo-tree-id4900 . 13) (undo-tree-id4901 . -1) (undo-tree-id4902 . 1) (undo-tree-id4903 . -13)) nil (25733 17616 379683 329000) 0 nil])
([nil nil ((9436 . 9437) (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9436) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -9437) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) 9436) nil (25733 17616 379672 344000) 0 nil])
([nil nil ((9437 . 9438) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9437)) nil (25733 17616 379611 951000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -9453) (undo-tree-id4990 . -2) (undo-tree-id4991 . -2) (undo-tree-id4992 . -2) (undo-tree-id4993 . -2) (undo-tree-id4994 . -2) (undo-tree-id4995 . -2) (undo-tree-id4996 . -2) (undo-tree-id4997 . -2) (undo-tree-id4998 . -2) (undo-tree-id4999 . -2) (undo-tree-id5000 . -2) (undo-tree-id5001 . -2) (undo-tree-id5002 . -2) (undo-tree-id5003 . -2) (undo-tree-id5004 . -2) (undo-tree-id5005 . -2) (undo-tree-id5006 . -2) (undo-tree-id5007 . -2) (undo-tree-id5008 . -2) (undo-tree-id5009 . -2) (undo-tree-id5010 . -2) (undo-tree-id5011 . -2) (undo-tree-id5012 . -2) (undo-tree-id5013 . -2) 9455 (9384 . 9385) (9405 . 9406) (9451 . 9452) 9383 (9450 . 9452) (t 25733 17616 402799 319000) 9406) nil (25733 17719 673875 123000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9497 . 9498) (nil fontified nil 9453 . 9498) (9453 . 9498)) nil (25733 17719 673857 142000) 0 nil])
([nil nil ((9385 . 9387) (9406 . 9407) (9408 . 9409) (9453 . 9455) 9383) nil (25733 17719 673856 46000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 9385) 9383) nil (25733 17719 673854 659000) 0 nil])
([nil nil ((#("  " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9408) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) 9383) nil (25733 17719 673853 124000) 0 nil])
([nil nil ((9464 . 9465) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9464)) nil (25733 17719 673838 780000) 0 nil])
([nil nil ((9487 . 9488) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9487)) nil (25733 17719 673833 310000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -9501) (undo-tree-id5014 . -2) (undo-tree-id5015 . -2) (undo-tree-id5016 . -2) (undo-tree-id5017 . -2) (undo-tree-id5018 . -2) (undo-tree-id5019 . -2) (undo-tree-id5020 . -2) (undo-tree-id5021 . -2) (undo-tree-id5022 . -2) (undo-tree-id5023 . -2) (undo-tree-id5024 . -2) (undo-tree-id5025 . -2) (undo-tree-id5026 . -2) (undo-tree-id5027 . -2) (undo-tree-id5028 . -2) (undo-tree-id5029 . -2) (undo-tree-id5030 . -2) (undo-tree-id5031 . -2) (undo-tree-id5032 . -2) (undo-tree-id5033 . -2) (undo-tree-id5034 . -2) (undo-tree-id5035 . -2) (undo-tree-id5036 . -2) (undo-tree-id5037 . -2) 9503 (9500 . 9503) (t 25733 17719 736476 117000) 9495) nil (25733 17724 169080 29000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9662 . 9663) (nil fontified nil 9648 . 9663) (nil fontified nil 9614 . 9648) (nil fontified nil 9612 . 9614) (nil fontified nil 9578 . 9612) (9578 . 9663) 9577 (t 25733 17724 180547 987000)) nil (25733 17784 175875 146000) 0 nil])
([nil nil ((#("7
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 9612)) nil (25733 17784 175873 470000) 0 nil])
([nil nil ((#("’(2 4 6 7 8 9)) 
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 2 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 14 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 15 17 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block))) . 9646) (undo-tree-id5045 . -14) (undo-tree-id5046 . -14) (undo-tree-id5047 . -15) (undo-tree-id5048 . -14) (undo-tree-id5049 . -14) (undo-tree-id5050 . -14) (undo-tree-id5051 . -14) (undo-tree-id5052 . -14) (undo-tree-id5053 . -14) (undo-tree-id5054 . -14) (undo-tree-id5055 . -14) (undo-tree-id5056 . -14) (undo-tree-id5057 . -14) (undo-tree-id5058 . -14) (undo-tree-id5059 . -14) (undo-tree-id5060 . -14) (undo-tree-id5061 . -14) (undo-tree-id5062 . -14) (undo-tree-id5063 . -14) (undo-tree-id5064 . -14) (undo-tree-id5065 . -14) (undo-tree-id5066 . -14) (undo-tree-id5067 . -14) (undo-tree-id5068 . -14) (undo-tree-id5069 . -14) (undo-tree-id5070 . -14) (undo-tree-id5071 . -14) (undo-tree-id5072 . -14)) nil (25733 17784 175871 847000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 9577) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1)) nil (25733 17784 175852 498000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9577) (undo-tree-id5040 . 1) (undo-tree-id5041 . -1)) nil (25733 17784 175849 425000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9610) (undo-tree-id5038 . 1) (undo-tree-id5039 . -1)) nil (25733 17784 175847 91000) 0 nil])
([nil nil ((9588 . 9589) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9588)) nil (25733 17784 175837 654000) 0 nil])
([nil nil ((9594 . 9595) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9594)) nil (25733 17784 175835 937000) 0 nil])
([nil nil ((9621 . 9622) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9621)) nil (25733 17784 175830 858000) 0 nil])
([nil nil ((9578 . 9579) (9610 . 9611) (9643 . 9653) 9577 (9642 . 9644) (t 25733 17784 193516 723000)) nil (25733 17829 498417 976000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9670 . 9671) (nil fontified nil 9656 . 9671) (9656 . 9671) 9655) nil (25733 17829 498734 671000) 0 nil])
([nil nil ((9656 . 9657) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                 " 0 6 (face org-indent) 6 17 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9656) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1)) nil (25733 17832 1640 324000) 0 nil] [nil nil ((nil rear-nonsticky nil 9671 . 9672) (nil fontified nil 9657 . 9672) (9657 . 9672) 9656) ((#("’(2 4 6 7 8 9))" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                 " 0 6 (face org-indent) 6 17 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                 " 0 6 (face org-indent) 6 17 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) help-echo nil src-block t) 2 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                 " 0 6 (face org-indent) 6 17 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 13 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                 " 0 6 (face org-indent) 6 17 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) help-echo nil src-block t) 14 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                 " 0 6 (face org-indent) 6 17 (face org-indent)) fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block) help-echo nil src-block t)) . 9657) (undo-tree-id5073 . -14) (undo-tree-id5074 . -14) (undo-tree-id5075 . 1) (undo-tree-id5076 . -15) (undo-tree-id5077 . -14) (undo-tree-id5078 . -14) (nil rear-nonsticky t 9671 . 9672)) (25733 17829 498410 333000) 0 nil])
([nil nil ((9671 . 9674) (t 25733 17832 18286 510000)) nil (25733 17855 760110 116000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 9717) (t 25733 17855 774668 223000)) nil (25733 17866 465932 23000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 1252) (t 25733 17866 482840 144000)) nil (25733 28639 395516 772000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8580)) nil (25733 28639 395514 176000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 10000)) nil (25733 28639 395510 830000) 0 nil])
([nil nil ((#(" 
" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)))) . 10014)) nil (25733 28639 395498 987000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9976 . 9977) (nil fontified nil 9970 . 9977) (nil fontified nil 9943 . 9970) (nil fontified nil 9916 . 9943) (nil fontified nil 9888 . 9916) (nil fontified nil 9832 . 9888) (nil fontified nil 9755 . 9832) (9755 . 9977) 9754 (t 25733 28639 467945 811000)) nil (25733 28767 611200 420000) 0 nil])
([nil nil ((#("  ASSOC searches for a table entry with a specified key. We can write a simple
version of ASSOC that uses FIND-IF to search the table.
" 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 1 2 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 2 79 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 79 135 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 9753) (undo-tree-id5156 . -85) (undo-tree-id5157 . -6) (undo-tree-id5158 . -85) (undo-tree-id5159 . -85) (undo-tree-id5160 . -2) (undo-tree-id5161 . -2) (undo-tree-id5162 . -2) (undo-tree-id5163 . -2) (undo-tree-id5164 . -2) (undo-tree-id5165 . -2) (undo-tree-id5166 . -2) (undo-tree-id5167 . -2) (undo-tree-id5168 . -2) (undo-tree-id5169 . -2) (undo-tree-id5170 . -2) (undo-tree-id5171 . -2) (undo-tree-id5172 . -2) (undo-tree-id5173 . -2) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -2) (undo-tree-id5185 . -1) (undo-tree-id5186 . -85) (undo-tree-id5187 . -6) (undo-tree-id5188 . -135) (undo-tree-id5189 . -6) (undo-tree-id5190 . -85) (undo-tree-id5191 . -6) (undo-tree-id5192 . -6) (undo-tree-id5193 . -6) (undo-tree-id5194 . -6) (undo-tree-id5195 . -6) (undo-tree-id5196 . -6) (undo-tree-id5197 . -6) (undo-tree-id5198 . -6) (undo-tree-id5199 . -6) (undo-tree-id5200 . -6) (undo-tree-id5201 . -6) (undo-tree-id5202 . -6) (undo-tree-id5203 . -6) (undo-tree-id5204 . -85) (undo-tree-id5205 . -85) 9838) nil (25733 28767 611194 590000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9716 . 9717) (#("
" 0 1 (font-lock-fontified t font-lock-multiline t face (org-block) src-block t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -9849) (9714 . 9850) 9694) nil (25733 28767 612388 436000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . -9715) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) 9716 (#(" " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) rear-nonsticky t)) . -9716) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) 9717) nil (25733 28775 412332 89000) 0 nil] [nil nil ((#("
" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . -9714) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (#(" " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . -9715) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (#(" " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) rear-nonsticky t)) . -9716) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) 9717) ((9714 . 9717)) (25733 28767 611078 644000) 0 nil])
([nil nil ((9886 . 9888) (9914 . 9916) (9941 . 9943) (9968 . 9970) 9886) nil (25733 28775 412168 909000) 0 nil])
nil
([nil nil ((9918 . 9920) 9886) nil (25733 28775 412167 617000) 0 nil])
([nil nil ((9949 . 9964) 9886) nil (25733 28775 412166 189000) 0 nil])
([nil nil ((9993 . 10006) 9886) nil (25733 28775 412160 644000) 0 nil])
([nil nil ((9930 . 9931) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9930) (t 25733 28775 427753 5000)) nil (25733 28782 877879 610000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -9886) (undo-tree-id5327 . -2) (undo-tree-id5328 . -2) (undo-tree-id5329 . -2) (undo-tree-id5330 . -2) (undo-tree-id5331 . -2) (undo-tree-id5332 . -2) (undo-tree-id5333 . -2) (undo-tree-id5334 . -2) (undo-tree-id5335 . -2) (undo-tree-id5336 . -2) (undo-tree-id5337 . -2) (undo-tree-id5338 . -2) (undo-tree-id5339 . -2) (undo-tree-id5340 . -2) (undo-tree-id5341 . -2) (undo-tree-id5342 . -2) (undo-tree-id5343 . -2) (undo-tree-id5344 . -2) (undo-tree-id5345 . -2) (undo-tree-id5346 . -2) (undo-tree-id5347 . -2) (undo-tree-id5348 . -2) (undo-tree-id5349 . -2) (undo-tree-id5350 . -2) 9888 (9885 . 9888) (t 25733 28782 895960 825000) 9870) nil (25733 28873 435245 852000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -10015) (undo-tree-id5316 . -2) (undo-tree-id5317 . -2) (undo-tree-id5318 . -2) (undo-tree-id5319 . -2) (undo-tree-id5320 . -2) (undo-tree-id5321 . -2) (undo-tree-id5322 . -2) (undo-tree-id5323 . -2) (undo-tree-id5324 . -2) (undo-tree-id5325 . -2) (undo-tree-id5326 . -2) 10017 (10014 . 10017) 9992) nil (25733 28873 435225 881000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -9965) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) 9966 (9965 . 9966)) nil (25733 28873 435211 867000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10035 . 10036) (nil fontified nil 10015 . 10036) (10015 . 10036) (t 25733 28873 458471 727000)) nil (25733 28923 909982 875000) 0 nil])
([nil nil ((9889 . 9891) (9917 . 9918) (9921 . 9922) (9948 . 9949) (9965 . 9966) (9992 . 9994) (10015 . 10017) 9886 (10036 . 10039) (#("o" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -10036) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) 10037 (10036 . 10037)) nil (25733 28923 909979 800000) 0 nil])
([nil nil ((10035 . 10036) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10035)) nil (25733 28923 909944 18000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 10047) 9886 (t 25733 28923 931864 388000)) nil (25733 28933 73151 716000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9889) 9886) nil (25733 28933 73150 220000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9921) 9886) nil (25733 28933 73149 60000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                         " 0 6 (face org-indent) 6 25 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                         " 0 6 (face org-indent) 6 25 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9965) 9886) nil (25733 28933 73148 14000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10005) (undo-tree-id5387 . -4) (undo-tree-id5388 . -4) (undo-tree-id5389 . -4) (undo-tree-id5390 . -4) (undo-tree-id5391 . -4) 9886) nil (25733 28933 73146 421000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -10013) (undo-tree-id5376 . -2) (undo-tree-id5377 . -2) (undo-tree-id5378 . -2) (undo-tree-id5379 . -2) (undo-tree-id5380 . -2) (undo-tree-id5381 . -2) (undo-tree-id5382 . -2) (undo-tree-id5383 . -2) (undo-tree-id5384 . -2) (undo-tree-id5385 . -2) (undo-tree-id5386 . -2) 10015 (10012 . 10015) 10005) nil (25733 28933 73138 97000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -10039) (undo-tree-id5392 . -2) (undo-tree-id5393 . -2) (undo-tree-id5394 . -2) (undo-tree-id5395 . -2) (undo-tree-id5396 . -2) (undo-tree-id5397 . -2) (undo-tree-id5398 . -2) (undo-tree-id5399 . -2) (undo-tree-id5400 . -2) (undo-tree-id5401 . -2) (undo-tree-id5402 . -2) (undo-tree-id5403 . -2) (undo-tree-id5404 . -2) (undo-tree-id5405 . -2) (undo-tree-id5406 . -2) (undo-tree-id5407 . -2) (undo-tree-id5408 . -2) (undo-tree-id5409 . -2) (undo-tree-id5410 . -2) (undo-tree-id5411 . -2) (undo-tree-id5412 . -2) (undo-tree-id5413 . -2) (undo-tree-id5414 . -2) (undo-tree-id5415 . -2) 10041 (10038 . 10041) (t 25733 28933 88116 558000) 10038) nil (25733 29378 525154 702000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block))) . 10039) (undo-tree-id5416 . 1) (t 25733 29378 540257 59000)) nil (25733 29714 299686 979000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10450 . 10451) (nil fontified nil 10450 . 10451) (nil fontified nil 10448 . 10450) (nil fontified nil 10430 . 10448) (nil fontified nil 10406 . 10430) (nil fontified nil 10404 . 10406) (nil fontified nil 10382 . 10404) (nil fontified nil 10363 . 10382) (nil fontified nil 10295 . 10363) (nil fontified nil 10292 . 10295) (nil fontified nil 10290 . 10292) (nil fontified nil 10271 . 10290) (nil fontified nil 10251 . 10271) (nil fontified nil 10224 . 10251) (nil fontified nil 10222 . 10224) (nil fontified nil 10200 . 10222) (10200 . 10451) 10199) nil (25733 29760 287449 215000) 0 nil] [nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -10014) (undo-tree-id5417 . -2) (undo-tree-id5418 . -2) (undo-tree-id5420 . -2) (undo-tree-id5422 . -2) (undo-tree-id5424 . -2) (undo-tree-id5426 . -2) (undo-tree-id5428 . -2) (undo-tree-id5430 . -2) (undo-tree-id5432 . -2) (undo-tree-id5434 . -2) (undo-tree-id5436 . -2) (undo-tree-id5438 . -2) (undo-tree-id5440 . -2) 10016 (10013 . 10016) (t 25733 29383 272385 33000) 10013) ((#("
  " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 3 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 10013) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (10014 . 10016) (t 25733 29423 409469 893000)) (25733 29713 752774 775000) 0 nil])
([nil nil ((#("  " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 1 2 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil)) . 10198) (undo-tree-id5455 . -2) (undo-tree-id5456 . -2) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -2) (undo-tree-id5486 . -2) (undo-tree-id5487 . -2) (undo-tree-id5488 . -2) (undo-tree-id5489 . -2) (undo-tree-id5490 . -2) (undo-tree-id5491 . -2) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -2) (undo-tree-id5503 . -2) (undo-tree-id5504 . -1)) nil (25733 29760 287444 205000) 0 nil])
([nil nil ((10135 . 10136) (t 25733 29423 409469 893000) 10055) ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 10135) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1)) (25733 29713 752292 248000) 0 nil])
([nil nil ((10207 . 10208) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10207)) nil (25733 29760 287410 304000) 0 nil])
nil
([nil nil ((10210 . 10211) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10210)) nil (25733 29760 287409 208000) 0 nil])
([nil nil ((#("6
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10220) (undo-tree-id5454 . -2)) nil (25733 29760 287718 728000) 0 nil])
([nil nil ((10229 . 10230) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10229)) nil (25733 29775 392654 496000) 0 nil] [nil nil ((#("(reduce #’+ ’(10 9 8 7 6))
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 1 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 14 24 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24 25 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 25 26 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 26 27 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10220) (undo-tree-id5448 . -27) (undo-tree-id5449 . -26) (undo-tree-id5450 . 27) (undo-tree-id5451 . -1) (undo-tree-id5452 . 2) (undo-tree-id5453 . -26)) ((10220 . 10247)) (25733 29760 287403 131000) 0 nil])
([nil nil ((10232 . 10233) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10232)) nil (25733 29793 216682 550000) 0 nil] [nil nil ((10232 . 10233) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10232)) ((10232 . 10233) (#("." 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 10232)) (25733 29775 392122 945000) 0 nil])
nil
([nil nil ((10256 . 10257) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10256) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1)) nil (25733 29793 216681 274000) 0 nil])
nil
([nil nil ((10259 . 10260) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10259)) nil (25733 29793 216674 439000) 0 nil])
([nil nil ((#("⇒5" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10264) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1)) nil (25733 29793 216993 153000) 0 nil])
([nil nil ((10274 . 10275) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10274) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1)) nil (25733 29814 732209 687000) 0 nil] [nil nil ((#("’+ nil)⇒0" 0 6 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 7 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 7 9 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10274) (undo-tree-id5505 . -3) (undo-tree-id5506 . -3) (undo-tree-id5507 . -3) (undo-tree-id5508 . -3) (undo-tree-id5509 . -3) (undo-tree-id5510 . -3) (undo-tree-id5511 . -3) (undo-tree-id5512 . -2) (undo-tree-id5513 . -2) (undo-tree-id5514 . -2) (undo-tree-id5515 . -2) (undo-tree-id5516 . -2) (undo-tree-id5517 . -2) (undo-tree-id5518 . -2) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1)) ((10274 . 10283)) (25733 29793 216663 268000) 0 nil])
([nil nil ((#("⇒0" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10281)) nil (25733 29814 732200 794000) 0 nil])
nil
([nil nil ((#("⇒
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10282)) nil (25733 29814 732199 577000) 0 nil])
([nil nil ((#("40
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10282) (undo-tree-id5616 . -2)) nil (25733 29814 732198 212000) 0 nil])
([nil nil ((#("Similarly, to multiply a bunch of numbers together, we use * as the
" 0 67 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 67 68 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10282) (undo-tree-id5615 . -67)) nil (25733 29814 732195 779000) 0 nil])
([nil nil ((#("reducing function:
" 0 18 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 18 19 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10282) (undo-tree-id5614 . -18)) nil (25733 29814 732193 361000) 0 nil])
([nil nil ((10291 . 10292) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10291) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1)) nil (25733 29814 732190 175000) 0 nil])
([nil nil ((10294 . 10295) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10294)) nil (25733 29814 732181 123000) 0 nil])
([nil nil ((#("⇒
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10304)) nil (25733 29814 732621 749000) 0 nil])
([nil nil ((10313 . 10314) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10313)) nil (25733 29827 163840 971000) 0 nil] [nil nil ((#("(reduce #’* ’(3 4 0 7))
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 1 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 14 21 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 21 22 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 22 23 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 23 24 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10304) (undo-tree-id5540 . -9) (undo-tree-id5541 . -23) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -2) (undo-tree-id5550 . -2) (undo-tree-id5551 . -2) (undo-tree-id5552 . -2) (undo-tree-id5553 . -2) (undo-tree-id5554 . -2) (undo-tree-id5555 . -2) (undo-tree-id5556 . -3) (undo-tree-id5557 . -3) (undo-tree-id5558 . -3) (undo-tree-id5559 . -3) (undo-tree-id5560 . -3) (undo-tree-id5561 . -3) (undo-tree-id5562 . -3) (undo-tree-id5563 . -4) (undo-tree-id5564 . -4) (undo-tree-id5565 . -4) (undo-tree-id5566 . -4) (undo-tree-id5567 . -4) (undo-tree-id5568 . -4) (undo-tree-id5569 . -4) (undo-tree-id5570 . -5) (undo-tree-id5571 . -5) (undo-tree-id5572 . -5) (undo-tree-id5573 . -5) (undo-tree-id5574 . -5) (undo-tree-id5575 . -5) (undo-tree-id5576 . -5) (undo-tree-id5577 . -6) (undo-tree-id5578 . -6) (undo-tree-id5579 . -6) (undo-tree-id5580 . -6) (undo-tree-id5581 . -6) (undo-tree-id5582 . -6) (undo-tree-id5583 . -6) (undo-tree-id5584 . -7) (undo-tree-id5585 . -7) (undo-tree-id5586 . -7) (undo-tree-id5587 . -7) (undo-tree-id5588 . -7) (undo-tree-id5589 . -7) (undo-tree-id5590 . -7) (undo-tree-id5591 . -8) (undo-tree-id5592 . -8) (undo-tree-id5593 . -8) (undo-tree-id5594 . -8) (undo-tree-id5595 . -8) (undo-tree-id5596 . -8) (undo-tree-id5597 . -8) (undo-tree-id5598 . -9) (undo-tree-id5599 . -9) (undo-tree-id5600 . -9) (undo-tree-id5601 . -9) (undo-tree-id5602 . -9) (undo-tree-id5603 . -9) (undo-tree-id5604 . -9) (undo-tree-id5605 . -9) (undo-tree-id5606 . -9) 10313) ((10304 . 10328)) (25733 29814 732168 997000) 0 nil])
([nil nil ((10316 . 10317) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10316)) nil (25733 29827 163837 541000) 0 nil])
nil
([nil nil ((10337 . 10338) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10337) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1)) nil (25733 29827 163834 432000) 0 nil])
([nil nil ((10340 . 10341) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10340)) nil (25733 29827 163811 551000) 0 nil])
([nil nil ((#("⇒
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 10346) (undo-tree-id5625 . -2)) nil (25733 29827 163806 358000) 0 nil])
([nil nil ((#("8
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 1 2 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block))) . 10346) (undo-tree-id5624 . -1)) nil (25733 29827 163791 661000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10474 . 10475) (nil fontified nil 10441 . 10475) (nil fontified nil 10439 . 10441) (nil fontified nil 10408 . 10439) (10408 . 10475) 10407 (t 25733 29827 234256 190000)) nil (25733 29893 440409 798000) 0 nil])
([nil nil ((#("T
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 10439) (undo-tree-id5667 . -2)) nil (25733 29893 440408 194000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10439) (undo-tree-id5665 . 1) (undo-tree-id5666 . -1)) nil (25733 29893 440406 753000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 10406) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1)) nil (25733 29893 440404 365000) 0 nil])
([nil nil ((10415 . 10416) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10415)) nil (25733 29893 440390 633000) 0 nil])
([nil nil ((10424 . 10425) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10424)) nil (25733 29893 440389 557000) 0 nil])
([nil nil ((10456 . 10457) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10456) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1)) nil (25733 29893 440387 863000) 0 nil])
([nil nil ((10447 . 10448) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10447) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1)) nil (25733 29893 440379 131000) 0 nil])
([nil nil ((10475 . 10477) (#("  " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 1 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 10474) (undo-tree-id5668 . -2) (undo-tree-id5669 . -2) (undo-tree-id5670 . -2) (undo-tree-id5671 . -2) (undo-tree-id5672 . -2) (undo-tree-id5673 . -2) (undo-tree-id5674 . -2) (undo-tree-id5675 . -2) (undo-tree-id5676 . -2) (undo-tree-id5677 . -2) (undo-tree-id5678 . -2) (undo-tree-id5679 . -2) (undo-tree-id5680 . -2) (undo-tree-id5681 . -2) (undo-tree-id5682 . -2) (undo-tree-id5683 . -2) (undo-tree-id5684 . -2) (undo-tree-id5685 . -2) (undo-tree-id5686 . -2) (undo-tree-id5687 . -2) (undo-tree-id5688 . -2) (undo-tree-id5689 . -2) (undo-tree-id5690 . -2) (undo-tree-id5691 . -2) (10476 . 10477) (10407 . 10408) (10438 . 10439) (10472 . 10473) 10406 (10471 . 10473) (t 25733 29893 507469 986000) 10447) nil (25733 29898 321954 525000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10902 . 10903) (nil fontified nil 10902 . 10903) (nil fontified nil 10860 . 10902) (nil fontified nil 10843 . 10860) (nil fontified nil 10770 . 10843) (nil fontified nil 10768 . 10770) (nil fontified nil 10746 . 10768) (nil fontified nil 10744 . 10746) (nil fontified nil 10723 . 10744) (nil fontified nil 10644 . 10723) (nil fontified nil 10571 . 10644) (nil fontified nil 10567 . 10571) (nil fontified nil 10520 . 10567) (nil fontified nil 10518 . 10520) (nil fontified nil 10474 . 10518) (10474 . 10903) (t 25733 29898 339033 311000)) nil (25733 30023 597762 224000) 0 nil])
([nil nil ((#("T
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 10518) (undo-tree-id6091 . -2)) nil (25733 30023 597759 408000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10518) (undo-tree-id6088 . 1) (undo-tree-id6089 . 1) (undo-tree-id6090 . -1)) nil (25733 30023 597757 849000) 0 nil])
([nil nil ((10408 . 10410) (10439 . 10441) (10474 . 10476) (10518 . 10520) (10564 . 10566) (10568 . 10570) (10641 . 10643) (10720 . 10722) (10741 . 10743) (10743 . 10745) (10765 . 10767) (10767 . 10769) (10840 . 10842) (10857 . 10859) (10899 . 10901) 10406) nil (25733 30023 597754 49000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 10931) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -2) (undo-tree-id6038 . -2) (undo-tree-id6039 . -2) (undo-tree-id6040 . -2) (undo-tree-id6041 . -2) (undo-tree-id6042 . -2) (undo-tree-id6043 . -2) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -2) (undo-tree-id6067 . -2) (undo-tree-id6068 . -2) (undo-tree-id6069 . -2) (undo-tree-id6070 . -2) (undo-tree-id6071 . -2) (undo-tree-id6072 . -2) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -2) 10406) nil (25733 30023 597747 649000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10443) 10406) nil (25733 30023 596687 187000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10408) 10406) nil (25733 30023 596685 998000) 0 nil])
([nil nil ((10484 . 10485) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10484)) nil (25733 30023 596684 899000) 0 nil])
([nil nil ((10506 . 10507) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10506)) nil (25733 30023 596683 790000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10522) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) 10406) nil (25733 30023 596682 343000) 0 nil])
([nil nil ((10530 . 10531) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10530) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1)) nil (25733 30023 596676 363000) 0 nil])
([nil nil ((10552 . 10553) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10552)) nil (25733 30023 596653 253000) 0 nil])
([nil nil ((#("  NIL
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 6 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10567) (undo-tree-id5965 . -2) (undo-tree-id5966 . -6) (undo-tree-id5967 . -2) (undo-tree-id5968 . -2) (undo-tree-id5969 . -2) (undo-tree-id5970 . -2) (undo-tree-id5971 . -2) (undo-tree-id5972 . -2) (undo-tree-id5973 . -2) (undo-tree-id5974 . -2) (undo-tree-id5975 . -2) (undo-tree-id5976 . -2) (undo-tree-id5977 . -2) (undo-tree-id5978 . -2) (undo-tree-id5979 . -2) (undo-tree-id5980 . -2) (undo-tree-id5981 . -2) (undo-tree-id5982 . -2) 10569) nil (25733 30023 596651 300000) 0 nil])
([nil nil ((#("  If EVERY is called with NIL as its second argument, it simply returns T,
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 74 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 74 75 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10567) (undo-tree-id5940 . -2) (undo-tree-id5941 . -75) (undo-tree-id5942 . -2) (undo-tree-id5943 . -2) (undo-tree-id5944 . -2) (undo-tree-id5945 . -2) (undo-tree-id5946 . -2) (undo-tree-id5947 . -2) (undo-tree-id5948 . -74) (undo-tree-id5949 . -2) (undo-tree-id5950 . -2) (undo-tree-id5951 . -2) (undo-tree-id5952 . -2) (undo-tree-id5953 . -2) (undo-tree-id5954 . -2) (undo-tree-id5955 . -2) (undo-tree-id5956 . -2) (undo-tree-id5957 . -2) (undo-tree-id5958 . -2) (undo-tree-id5959 . -2) (undo-tree-id5960 . -2) (undo-tree-id5961 . -2) (undo-tree-id5962 . -2) (undo-tree-id5963 . -2) (undo-tree-id5964 . -2) 10569) nil (25733 30023 596637 741000) 0 nil])
([nil nil ((#("  since the empty list has no elements that could fail to satisfy the predicate.
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 80 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 80 81 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10567) (undo-tree-id5921 . -2) (undo-tree-id5922 . -81) (undo-tree-id5923 . -80) (undo-tree-id5924 . -2) (undo-tree-id5925 . -2) (undo-tree-id5926 . -2) (undo-tree-id5927 . -2) (undo-tree-id5928 . -2) (undo-tree-id5929 . -2) (undo-tree-id5930 . -2) (undo-tree-id5931 . -2) (undo-tree-id5932 . -2) (undo-tree-id5933 . -2) (undo-tree-id5934 . -2) (undo-tree-id5935 . -2) (undo-tree-id5936 . -2) (undo-tree-id5937 . -2) (undo-tree-id5938 . -2) (undo-tree-id5939 . -2) 10569) nil (25733 30023 596617 376000) 0 nil])
([nil nil ((#("> " 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10569) (undo-tree-id5919 . 2) (undo-tree-id5920 . -1)) nil (25733 30023 596602 294000) 0 nil])
([nil nil ((10577 . 10578) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10577) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1)) nil (25733 30023 596599 789000) 0 nil])
([nil nil ((#("  T
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10588) (undo-tree-id5895 . -2) (undo-tree-id5896 . -4) (undo-tree-id5897 . -2) (undo-tree-id5898 . -2) (undo-tree-id5899 . -2) (undo-tree-id5900 . -2) (undo-tree-id5901 . -2) (undo-tree-id5902 . -2) (undo-tree-id5903 . -2) (undo-tree-id5904 . -2) (undo-tree-id5905 . -2) (undo-tree-id5906 . -2) (undo-tree-id5907 . -2) (undo-tree-id5908 . -2) (undo-tree-id5909 . -2) (undo-tree-id5910 . -2) (undo-tree-id5911 . -2) 10590) nil (25733 30023 596593 321000) 0 nil])
([nil nil ((#("> " 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10590) (undo-tree-id5893 . 2) (undo-tree-id5894 . -1)) nil (25733 30023 596579 291000) 0 nil])
([nil nil ((10598 . 10599) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10598) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1)) nil (25733 30023 596575 626000) 0 nil])
([nil nil ((#("  T
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10610) (undo-tree-id5840 . -2) (undo-tree-id5841 . -4) (undo-tree-id5842 . -2) (undo-tree-id5843 . -2) (undo-tree-id5844 . -2) (undo-tree-id5845 . -2) (undo-tree-id5846 . -2) (undo-tree-id5847 . -2) (undo-tree-id5848 . -2) (undo-tree-id5849 . -2) (undo-tree-id5850 . -2) (undo-tree-id5851 . -2) (undo-tree-id5852 . -2) (undo-tree-id5853 . -2) (undo-tree-id5854 . -2) (undo-tree-id5855 . -2) (undo-tree-id5856 . -2) 10612) nil (25733 30023 596407 883000) 0 nil])
([nil nil ((#("  EVERY can also operate on multiple lists, given a predicate that accepts
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 74 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 74 75 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10610) (undo-tree-id5821 . -2) (undo-tree-id5822 . -75) (undo-tree-id5823 . -74) (undo-tree-id5824 . -2) (undo-tree-id5825 . -2) (undo-tree-id5826 . -2) (undo-tree-id5827 . -2) (undo-tree-id5828 . -2) (undo-tree-id5829 . -2) (undo-tree-id5830 . -2) (undo-tree-id5831 . -2) (undo-tree-id5832 . -2) (undo-tree-id5833 . -2) (undo-tree-id5834 . -2) (undo-tree-id5835 . -2) (undo-tree-id5836 . -2) (undo-tree-id5837 . -2) (undo-tree-id5838 . -2) (undo-tree-id5839 . -2) 10612) nil (25733 30023 596395 130000) 0 nil])
([nil nil ((#("  multiple inputs.
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9 10 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10 18 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 18 19 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10610) (undo-tree-id5802 . -2) (undo-tree-id5803 . -19) (undo-tree-id5804 . -18) (undo-tree-id5805 . -2) (undo-tree-id5806 . -2) (undo-tree-id5807 . -2) (undo-tree-id5808 . -2) (undo-tree-id5809 . -2) (undo-tree-id5810 . -2) (undo-tree-id5811 . -2) (undo-tree-id5812 . -2) (undo-tree-id5813 . -2) (undo-tree-id5814 . -2) (undo-tree-id5815 . -2) (undo-tree-id5816 . -2) (undo-tree-id5817 . -2) (undo-tree-id5818 . -2) (undo-tree-id5819 . -2) (undo-tree-id5820 . -2) 10612) nil (25733 30023 596378 825000) 0 nil])
([nil nil ((#("> " 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10612) (undo-tree-id5800 . 2) (undo-tree-id5801 . -1)) nil (25733 30023 596362 684000) 0 nil])
([nil nil ((10620 . 10621) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10620)) nil (25733 30023 596359 882000) 0 nil])
([nil nil ((10623 . 10624) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10623)) nil (25733 30023 596358 335000) 0 nil])
([nil nil ((10638 . 10639) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10638)) nil (25733 30023 596356 532000) 0 nil])
([nil nil ((#("  T
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 3 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 10652) (undo-tree-id5692 . -2) (undo-tree-id5693 . -4) (undo-tree-id5694 . -4) (undo-tree-id5695 . -4) (undo-tree-id5696 . -4) (undo-tree-id5697 . -4) (undo-tree-id5698 . -4) (undo-tree-id5699 . -4) (undo-tree-id5700 . -4) (undo-tree-id5701 . -4) (undo-tree-id5702 . -4) (undo-tree-id5703 . -4) (undo-tree-id5704 . -4) (undo-tree-id5705 . -4) (undo-tree-id5706 . -4) (undo-tree-id5707 . -4) (undo-tree-id5708 . -4) (undo-tree-id5709 . -4) (undo-tree-id5710 . -4) (undo-tree-id5711 . -4) (undo-tree-id5712 . -4) (undo-tree-id5713 . -4) (undo-tree-id5714 . -4) (undo-tree-id5715 . -4) (undo-tree-id5716 . -4) (undo-tree-id5717 . -4) (undo-tree-id5718 . -4) (undo-tree-id5719 . -4) (undo-tree-id5720 . -4) (undo-tree-id5721 . -4) (undo-tree-id5722 . -4) (undo-tree-id5723 . -4) (undo-tree-id5724 . -4) (undo-tree-id5725 . -4) (undo-tree-id5726 . -4) (undo-tree-id5727 . -4) (undo-tree-id5728 . -4) (undo-tree-id5729 . -4) (undo-tree-id5730 . -4) (undo-tree-id5731 . -4) (undo-tree-id5732 . -4) (undo-tree-id5733 . -4) (undo-tree-id5734 . -4) (undo-tree-id5735 . -4) (undo-tree-id5736 . -4) (undo-tree-id5737 . -4) (undo-tree-id5738 . -4) (undo-tree-id5739 . -4) (undo-tree-id5740 . -4) (undo-tree-id5741 . -4) (undo-tree-id5742 . -4) (undo-tree-id5743 . -4) (undo-tree-id5744 . -4) (undo-tree-id5745 . -4) (undo-tree-id5746 . -4) (undo-tree-id5747 . -4) (undo-tree-id5748 . -4) (undo-tree-id5749 . -4) (undo-tree-id5750 . -4) (undo-tree-id5751 . -4) (undo-tree-id5752 . -4) (undo-tree-id5753 . -4) (undo-tree-id5754 . -4) (undo-tree-id5755 . -4) (undo-tree-id5756 . -4) (undo-tree-id5757 . -4) (undo-tree-id5758 . -4) (undo-tree-id5759 . -4) (undo-tree-id5760 . -4) (undo-tree-id5761 . -4) (undo-tree-id5762 . -4) (undo-tree-id5763 . -4) (undo-tree-id5764 . -4) (undo-tree-id5765 . -4) (undo-tree-id5766 . -4) (undo-tree-id5767 . -4) (undo-tree-id5768 . -4) (undo-tree-id5769 . -4) (undo-tree-id5770 . -4) (undo-tree-id5771 . -4) (undo-tree-id5772 . -4) (undo-tree-id5773 . -4) (undo-tree-id5774 . -4) (undo-tree-id5775 . -4) (undo-tree-id5776 . -4) (undo-tree-id5777 . -4) (undo-tree-id5778 . -4) (undo-tree-id5779 . -4) (undo-tree-id5780 . -4) (undo-tree-id5781 . -4) (undo-tree-id5782 . -4) (undo-tree-id5783 . -4) (undo-tree-id5784 . -3) (undo-tree-id5785 . -2) (undo-tree-id5786 . -2) (undo-tree-id5787 . -2) (undo-tree-id5788 . -2) (undo-tree-id5789 . -2) (undo-tree-id5790 . -2) (undo-tree-id5791 . -2) (undo-tree-id5792 . -2) (undo-tree-id5793 . -2) (undo-tree-id5794 . -2) (undo-tree-id5795 . -2) (undo-tree-id5796 . -2) (undo-tree-id5797 . -2) (undo-tree-id5798 . -2) (undo-tree-id5799 . -2) 10654) nil (25733 30023 596350 278000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block))) . 10652)) nil (25733 30023 596179 64000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 10368) (undo-tree-id6092 . -1) (t 25733 30023 617853 320000)) nil (25733 30029 137878 610000) 0 nil])
([nil nil ((10661 . 10662) (t 25733 30029 157527 214000) 8582) nil (25733 30284 721305 853000) 0 nil])
([nil nil ((10664 . 10668) (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . 10663) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (10664 . 10665) (10663 . 10664) (10662 . 10663)) nil (25733 30284 721304 313000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 10667) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1)) nil (25733 30284 721294 44000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t org-emphasis t)) . 10666) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1)) nil (25733 30284 721288 619000) 0 nil])
([nil nil ((10676 . 10681) (10667 . 10676) (#("P" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -10667) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) 10668 (10666 . 10668)) nil (25733 30284 721271 408000) 0 nil])
([nil nil ((#("** 
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (1 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 3 4 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 10678) (undo-tree-id6225 . 1) (undo-tree-id6226 . -2) (undo-tree-id6227 . -3) (undo-tree-id6228 . -3) (undo-tree-id6229 . -3) (undo-tree-id6230 . -3) (undo-tree-id6231 . -3) (undo-tree-id6232 . -3) (undo-tree-id6233 . -3) (undo-tree-id6234 . -2) (undo-tree-id6235 . -2) (undo-tree-id6236 . -2) (undo-tree-id6237 . -2) (undo-tree-id6238 . -2) (undo-tree-id6239 . -2) (undo-tree-id6240 . -2) (undo-tree-id6241 . -2) (undo-tree-id6242 . -2) (undo-tree-id6243 . -2) (undo-tree-id6244 . -2) (undo-tree-id6245 . -2) (undo-tree-id6246 . -2) (undo-tree-id6247 . -2) (undo-tree-id6248 . -2) (undo-tree-id6249 . -2) (undo-tree-id6250 . -2) (undo-tree-id6251 . -2) (undo-tree-id6252 . -2) (undo-tree-id6253 . -2) (undo-tree-id6254 . -2) (undo-tree-id6255 . -2) (undo-tree-id6256 . -2) 10680) nil (25733 30284 721263 228000) 0 nil])
([nil nil ((10678 . 10682) (10677 . 10678) 10677) nil (25733 30284 721238 728000) 0 nil])
([nil nil ((10694 . 10700) (10689 . 10694) (#("S" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -10689) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (#("T" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -10690) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (#("I" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -10691) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (#("O" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -10692) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) 10693 (10684 . 10693) (#("P" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -10684) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) 10685 (10682 . 10685)) nil (25733 30284 721231 318000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 10695)) nil (25733 30284 721130 733000) 0 nil])
([nil nil ((10698 . 10700)) nil (25733 30284 721125 266000) 0 nil])
([nil nil ((10701 . 10702) (t 25733 30284 747012 86000) 10699) nil (25733 30314 451084 826000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10721 . 10722) (nil fontified nil 10701 . 10722) (10701 . 10722) 10700) nil (25733 30314 451083 563000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . 10699) (undo-tree-id6305 . -2) (undo-tree-id6306 . -2) (undo-tree-id6307 . -2) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -2) (undo-tree-id6359 . -2) (undo-tree-id6360 . -2) (undo-tree-id6361 . -2) (undo-tree-id6362 . -2) (undo-tree-id6363 . -2) (undo-tree-id6364 . -2) (undo-tree-id6365 . -2) (undo-tree-id6366 . -2) (undo-tree-id6367 . -2) (undo-tree-id6368 . -2) (undo-tree-id6369 . -2) (undo-tree-id6370 . -2) (undo-tree-id6371 . -2) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -2) (undo-tree-id6383 . -2)) nil (25733 30314 451320 689000) 0 nil])
([nil nil ((10721 . 10725) (10720 . 10721) 10699) nil (25733 30341 979192 146000) 0 nil] [nil nil ((10695 . 10697) 10699) ((#("# " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t face font-lock-comment-face)) . 10695)) (25733 30314 451010 878000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10760 . 10761) (nil fontified nil 10725 . 10761) (10725 . 10761) 10724) nil (25733 30341 979190 22000) 0 nil])
nil
([nil nil ((10761 . 10766)) nil (25733 30341 979188 56000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10795 . 10796) (nil fontified nil 10766 . 10796) (10766 . 10796) 10765) nil (25733 30341 979186 523000) 0 nil])
([nil nil ((10796 . 10801)) nil (25733 30341 979179 667000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10840 . 10841) (nil fontified nil 10801 . 10841) (10801 . 10841) 10800 (t 25733 30342 49465 764000)) nil (25733 30353 300871 917000) 0 nil])
([nil nil ((10841 . 10846)) nil (25733 30353 300866 305000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10863 . 10864) (nil fontified nil 10846 . 10864) (10846 . 10864) 10845 (t 25733 30353 321183 718000)) nil (25733 30403 160835 288000) 0 nil])
([nil nil ((10864 . 10869)) nil (25733 30416 954093 908000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10871 . 10872) (10870 . 10872) (t 25733 30403 228009 734000)) ((#(" 
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified nil) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified nil rear-nonsticky nil)) . 10870) (undo-tree-id6411 . -1) (undo-tree-id6412 . -2) (undo-tree-id6413 . -2) (undo-tree-id6414 . -2) (undo-tree-id6415 . -2) (nil rear-nonsticky t 10871 . 10872)) (25733 30418 97699 472000) 0 nil] [nil nil ((nil rear-nonsticky nil 10916 . 10917) (nil fontified nil 10868 . 10917) (nil keymap (keymap) 10868 . 10917) (nil face org-level-3 10868 . 10917) (nil fontified nil 10868 . 10917) (nil line-prefix #("      " 0 6 (face org-indent)) 10868 . 10917) (nil wrap-prefix #("      " 0 6 (face org-indent)) 10868 . 10917) (10868 . 10917) 10870 (#(" 
" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 10868) (undo-tree-id6384 . -2) (undo-tree-id6385 . 1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -2) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -2) (undo-tree-id6405 . -2) 10870 (t 25733 30403 228009 734000)) ((10868 . 10870) (#("A RECURSIVE FUNCTION FOR COUNTING SLICES OF BREAD" 0 48 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil face org-level-3 font-lock-multiline t org-emphasis t keymap (keymap)) 48 49 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil rear-nonsticky nil face org-level-3 font-lock-multiline t org-emphasis t keymap (keymap))) . 10868) (undo-tree-id6406 . -48) (undo-tree-id6407 . -48) (undo-tree-id6408 . -48) (undo-tree-id6409 . -48) (undo-tree-id6410 . -48) (nil wrap-prefix #("      " 0 6 (face org-indent)) 10916 . 10917) (nil wrap-prefix #("      " 0 6 (face org-indent)) 10868 . 10916) (nil face (bold) 10916 . 10917) (nil face (bold) 10868 . 10916) (nil keymap nil 10916 . 10917) (nil keymap nil 10868 . 10916) (nil rear-nonsticky t 10916 . 10917)) (25733 30413 753996 14000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10919 . 10920) (nil fontified nil 10871 . 10920) (10871 . 10920) 10870) nil (25733 30459 606023 377000) 0 nil])
nil
([nil nil ((nil keymap (keymap) 10868 . 10869) (nil face org-level-3 10868 . 10869) (nil line-prefix #("      " 0 6 (face org-indent)) 10868 . 10869) (nil wrap-prefix #("      " 0 6 (face org-indent)) 10868 . 10869) (nil fontified nil 10868 . 10869) (10868 . 10869) (#("  " 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 1 2 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified nil)) . 10868) (undo-tree-id6416 . -2) (undo-tree-id6417 . 1) (undo-tree-id6418 . -2) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -2) (undo-tree-id6468 . -2) (undo-tree-id6469 . -2) (undo-tree-id6470 . -2) (undo-tree-id6471 . -2) (undo-tree-id6472 . -2) (undo-tree-id6473 . -2) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -2) (undo-tree-id6485 . -2) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (#("
" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . -10869) (undo-tree-id6488 . 1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) 10868) nil (25733 30459 606012 943000) 0 nil])
([nil nil ((10919 . 10923) (10918 . 10919) 10868) nil (25733 30459 605836 118000) 0 nil])
([nil nil ((nil fontified t 10928 . 10929) (nil line-prefix #("*" 0 1 (face org-indent)) 10928 . 10929) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 10928 . 10929) (nil keymap (keymap) 10928 . 10929) (nil face org-level-2 10928 . 10929) (nil fontified t 10927 . 10928) (nil line-prefix #("*" 0 1 (face org-indent)) 10927 . 10928) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 10927 . 10928) (nil composition (1 1 [9679]) 10927 . 10928) (nil keymap (keymap) 10927 . 10928) (nil face org-level-2 10927 . 10928) (nil fontified t 10926 . 10927) (nil line-prefix #("*" 0 1 (face org-indent)) 10926 . 10927) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 10926 . 10927) (nil face org-hide 10926 . 10927) (nil keymap (keymap) 10926 . 10927) (#("** " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (1 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 10925) (10928 . 10932) 10922) nil (25733 30459 605832 976000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10950 . 10951) (nil fontified nil 10923 . 10951) (10923 . 10951) 10922) nil (25733 30459 605825 674000) 0 nil])
([nil nil ((10951 . 10956)) nil (25733 30459 605818 669000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10990 . 10991) (nil fontified nil 10956 . 10991) (10956 . 10991) 10955 (t 25733 30459 682808 229000)) nil (25733 30473 150064 980000) 0 nil])
([nil nil ((10991 . 10996)) nil (25733 30473 150054 256000) 0 nil])
([nil nil ((#("*** OOPS
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 8 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 8 9 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 10998) (undo-tree-id6548 . -7) (undo-tree-id6549 . -8) (undo-tree-id6550 . -8) (undo-tree-id6551 . -3) (undo-tree-id6552 . -3) (undo-tree-id6553 . -3) (undo-tree-id6554 . -3) (undo-tree-id6555 . -3) (undo-tree-id6556 . -3) (undo-tree-id6557 . -3) (undo-tree-id6558 . -3) (undo-tree-id6559 . -3) (undo-tree-id6560 . -3) (undo-tree-id6561 . -3) (undo-tree-id6562 . -3) (undo-tree-id6563 . -3) (undo-tree-id6564 . -3) (undo-tree-id6565 . -3) (undo-tree-id6566 . -3) 11001 (t 25733 30473 174538 63000)) nil (25733 30477 449214 720000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11021 . 11022) (nil fontified nil 10996 . 11022) (10996 . 11022) 10995 (t 25733 30477 470453 287000)) nil (25733 30495 455082 736000) 0 nil])
([nil nil ((11022 . 11027)) nil (25733 30495 455081 329000) 0 nil])
([nil nil ((11027 . 11032)) nil (25733 30495 456650 550000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11045 . 11046) (nil fontified nil 11027 . 11046) (11027 . 11046) 11026 (t 25733 30497 766060 501000)) nil (25733 30533 372227 710000) 0 nil] [nil nil ((nil keymap (keymap) 11031 . 11032) (nil face org-level-3 11031 . 11032) (nil line-prefix #("      " 0 6 (face org-indent)) 11031 . 11032) (nil wrap-prefix #("      " 0 6 (face org-indent)) 11031 . 11032) (nil fontified nil 11031 . 11032) (11031 . 11032) (#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 11031) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1)) ((11031 . 11032) (#("w" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) keymap (keymap) face org-level-3)) . 11031) (nil wrap-prefix #("      " 0 6 (face org-indent)) 11031 . 11032) (nil face nil 11031 . 11032) (nil keymap nil 11031 . 11032)) (25733 30495 455074 814000) 0 nil])
([nil nil ((11046 . 11051)) nil (25733 30533 372226 299000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 11076 . 11077) (nil fontified nil 11051 . 11077) (11051 . 11077) 11050) nil (25733 30533 372225 281000) 0 nil])
([nil nil ((11077 . 11082)) nil (25733 30533 372223 738000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11101 . 11102) (nil fontified nil 11082 . 11102) (11082 . 11102) 11081) nil (25733 30533 372221 764000) 0 nil])
([nil nil ((11102 . 11107)) nil (25733 30533 372213 6000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11139 . 11140) (nil fontified nil 11107 . 11140) (11107 . 11140) 11106 (t 25733 30533 449398 577000)) nil (25733 30572 180697 485000) 0 nil])
([nil nil ((11140 . 11145)) nil (25733 30572 180696 46000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11173 . 11174) (nil fontified nil 11145 . 11174) (11145 . 11174) 11144) nil (25733 30572 180694 782000) 0 nil])
([nil nil ((#("8.12.1 " 0 7 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 11145) (undo-tree-id6569 . -6) (undo-tree-id6570 . -6) (undo-tree-id6571 . -6) (undo-tree-id6572 . -7) (undo-tree-id6573 . -6) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -3) (undo-tree-id6582 . -3) (undo-tree-id6583 . -3) (undo-tree-id6584 . -3) (undo-tree-id6585 . -3) (undo-tree-id6586 . -3) (undo-tree-id6587 . -3) (undo-tree-id6588 . -4) (undo-tree-id6589 . -4) (undo-tree-id6590 . -4) (undo-tree-id6591 . -4) (undo-tree-id6592 . -4) (undo-tree-id6593 . -4) (undo-tree-id6594 . -4) (undo-tree-id6595 . -5) (undo-tree-id6596 . -5) (undo-tree-id6597 . -5) (undo-tree-id6598 . -5) (undo-tree-id6599 . -5) (undo-tree-id6600 . -5) (undo-tree-id6601 . -5) (undo-tree-id6602 . -7) (undo-tree-id6603 . -7) (undo-tree-id6604 . -7) (undo-tree-id6605 . -7) (undo-tree-id6606 . -7) (undo-tree-id6607 . -7) (undo-tree-id6608 . -7) (undo-tree-id6609 . -6) (undo-tree-id6610 . -6) (undo-tree-id6611 . -6) (undo-tree-id6612 . -6) (undo-tree-id6613 . -6) (undo-tree-id6614 . -6) (undo-tree-id6615 . -6) (undo-tree-id6616 . -6) 11151) nil (25733 30572 180690 358000) 0 nil])
([nil nil ((11168 . 11172) (11167 . 11168) 11145) nil (25733 30572 180617 290000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11214 . 11215) (nil fontified nil 11172 . 11215) (11172 . 11215) 11171 (t 25733 30572 204716 276000)) nil (25733 30665 220223 932000) 0 nil])
([nil nil ((11215 . 11220)) nil (25733 30665 220222 664000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11243 . 11244) (nil fontified nil 11220 . 11244) (11220 . 11244) 11219) nil (25733 30665 220221 893000) 0 nil])
([nil nil ((11244 . 11249)) nil (25733 30665 220220 877000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11266 . 11267) (nil fontified nil 11249 . 11267) (11249 . 11267) 11248) nil (25733 30665 220220 172000) 0 nil])
([nil nil ((11267 . 11272)) nil (25733 30665 220219 48000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11298 . 11299) (nil fontified nil 11272 . 11299) (11272 . 11299) 11271) nil (25733 30665 220218 195000) 0 nil])
([nil nil ((11299 . 11304)) nil (25733 30665 220216 815000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11326 . 11327) (nil fontified nil 11304 . 11327) (11304 . 11327) 11303) nil (25733 30665 220216 22000) 0 nil])
([nil nil ((11327 . 11332)) nil (25733 30665 220214 674000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11362 . 11363) (nil fontified nil 11332 . 11363) (11332 . 11363) 11331) nil (25733 30665 220213 254000) 0 nil])
([nil nil ((11363 . 11368)) nil (25733 30665 220208 2000) 0 nil])
([nil nil ((#("*** COND AND PARENTHESIS ERRORS
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 31 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 31 32 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 6210) (undo-tree-id6617 . -5) (undo-tree-id6618 . -5) (undo-tree-id6619 . -5) (undo-tree-id6620 . -5) (undo-tree-id6621 . -5) (undo-tree-id6622 . -5) (undo-tree-id6623 . -5) (undo-tree-id6624 . -5) (undo-tree-id6625 . -5) (undo-tree-id6626 . -5) (undo-tree-id6627 . -5) (undo-tree-id6628 . -5) (undo-tree-id6629 . -5) (undo-tree-id6630 . -5) (undo-tree-id6631 . -5) (undo-tree-id6632 . -5) (undo-tree-id6633 . -5) (undo-tree-id6634 . -5) (undo-tree-id6635 . -5) (undo-tree-id6636 . -5) (undo-tree-id6637 . -5) (undo-tree-id6638 . -5) (undo-tree-id6639 . -5) (undo-tree-id6640 . -5) (undo-tree-id6641 . -5) (undo-tree-id6642 . -5) (undo-tree-id6643 . -5) (undo-tree-id6644 . -5) (undo-tree-id6645 . -5) (undo-tree-id6646 . -5) (undo-tree-id6647 . -5) (undo-tree-id6648 . -5) (undo-tree-id6649 . -5) (undo-tree-id6650 . -5) (undo-tree-id6651 . -5) (undo-tree-id6652 . -5) (undo-tree-id6653 . -5) (undo-tree-id6654 . -5) (undo-tree-id6655 . -5) (undo-tree-id6656 . -5) (undo-tree-id6657 . -5) (undo-tree-id6658 . -5) (undo-tree-id6659 . 28) (undo-tree-id6660 . -8) (undo-tree-id6661 . -5) (undo-tree-id6662 . -5) (undo-tree-id6663 . -5) (undo-tree-id6664 . -5) (undo-tree-id6665 . -5) (undo-tree-id6666 . -5) (undo-tree-id6667 . -5) (undo-tree-id6668 . -5) (undo-tree-id6669 . -5) (undo-tree-id6670 . -5) (undo-tree-id6671 . -5) (undo-tree-id6672 . -5) (undo-tree-id6673 . -5) (undo-tree-id6674 . -5) (undo-tree-id6675 . -5) (undo-tree-id6676 . -5) 6215 (t 25733 30665 301432 82000)) nil (25734 39732 578953 316000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8547) (t 25734 39732 603023 291000)) nil (25734 39821 956461 665000) 0 nil])
([nil nil ((10641 . 10643) (10633 . 10641) (#("P" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -10633) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (#("e" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -10634) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) 10635 (10632 . 10635) (#("*" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t org-emphasis t)) . -10632) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . -10633) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) 10634 (10630 . 10634) (10629 . 10630) 8547) nil (25734 39821 956455 255000) 0 nil])
([nil nil ((11397 . 11402) (11392 . 11397) (11390 . 11392) (#("d" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -11390) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) 11391 (11374 . 11391) (#("m" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -11374) (undo-tree-id6737 . -1) 11375 (11374 . 11375) (11370 . 11374) (11369 . 11370) (t 25734 39821 974872 862000) 11368) nil (25734 40055 468377 851000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11437 . 11438) (nil fontified nil 11402 . 11438) (11402 . 11438) 11401) nil (25734 40055 468365 484000) 0 nil])
([nil nil ((11438 . 11443)) nil (25734 40055 468364 81000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11472 . 11473) (nil fontified nil 11443 . 11473) (11443 . 11473) 11442) nil (25734 40055 468363 371000) 0 nil])
([nil nil ((11473 . 11478)) nil (25734 40055 468361 786000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11517 . 11518) (nil fontified nil 11478 . 11518) (11478 . 11518) 11477) nil (25734 40055 468360 334000) 0 nil])
([nil nil ((11518 . 11523)) nil (25734 40055 468355 461000) 0 nil])
([nil nil ((11522 . 11524) (t 25734 40055 487031 587000)) nil (25734 40210 132086 506000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11542 . 11543) (nil fontified nil 11525 . 11543) (11525 . 11543) 11524) nil (25734 40210 132085 680000) 0 nil])
([nil nil ((11544 . 11548) (11543 . 11544)) nil (25734 40210 132084 683000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11596 . 11597) (nil fontified nil 11548 . 11597) (11548 . 11597) 11547) nil (25734 40210 132083 847000) 0 nil])
([nil nil ((11597 . 11602)) nil (25734 40210 132082 905000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11629 . 11630) (nil fontified nil 11602 . 11630) (11602 . 11630) 11601) nil (25734 40210 132082 183000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . 11523) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -2) (undo-tree-id6769 . -2) (undo-tree-id6770 . -2) (undo-tree-id6771 . -2) (undo-tree-id6772 . -2) (undo-tree-id6773 . -2) (undo-tree-id6774 . -2) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -2) (undo-tree-id6785 . -1)) nil (25734 40210 132079 178000) 0 nil])
([nil nil ((11629 . 11633) (11628 . 11629) 11600) nil (25734 40210 132040 518000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11667 . 11668) (nil fontified nil 11633 . 11668) (11633 . 11668) 11632) nil (25734 40210 132039 525000) 0 nil])
([nil nil ((11668 . 11673)) nil (25734 40210 132038 505000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11698 . 11699) (nil fontified nil 11673 . 11699) (11673 . 11699) 11672) nil (25734 40210 132037 793000) 0 nil])
([nil nil ((11699 . 11704)) nil (25734 40210 132036 776000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11722 . 11723) (nil fontified nil 11704 . 11723) (11704 . 11723) 11703) nil (25734 40210 132036 135000) 0 nil])
([nil nil ((11723 . 11728)) nil (25734 40210 132035 93000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11747 . 11748) (nil fontified nil 11728 . 11748) (11728 . 11748) 11727) nil (25734 40210 132034 390000) 0 nil])
([nil nil ((11748 . 11753)) nil (25734 40210 132033 363000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11785 . 11786) (nil fontified nil 11753 . 11786) (11753 . 11786) 11752) nil (25734 40210 132032 608000) 0 nil])
([nil nil ((11786 . 11791)) nil (25734 40210 132031 533000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11814 . 11815) (nil fontified nil 11791 . 11815) (11791 . 11815) 11790) nil (25734 40210 132030 619000) 0 nil])
([nil nil ((11815 . 11820)) nil (25734 40210 132028 913000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11837 . 11838) (nil fontified nil 11820 . 11838) (11820 . 11838) 11819) nil (25734 40210 132024 86000) 0 nil])
([nil nil ((11838 . 11843) (t 25734 40210 143596 96000)) nil (25734 40258 119629 65000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11869 . 11870) (nil fontified nil 11843 . 11870) (11843 . 11870) 11842) nil (25734 40258 119627 841000) 0 nil])
([nil nil ((11870 . 11875)) nil (25734 40258 119626 837000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11897 . 11898) (nil fontified nil 11875 . 11898) (11875 . 11898) 11874) nil (25734 40258 119626 131000) 0 nil])
([nil nil ((11898 . 11903)) nil (25734 40258 119624 985000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11933 . 11934) (nil fontified nil 11903 . 11934) (11903 . 11934) 11902) nil (25734 40258 119623 591000) 0 nil])
([nil nil ((11934 . 11939)) nil (25734 40258 119618 855000) 0 nil])
([nil nil ((11398 . 11442) (#("src" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 11398) (undo-tree-id6786 . -2) (undo-tree-id6787 . -3) (undo-tree-id6788 . -2) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -2) (undo-tree-id6820 . -2) (undo-tree-id6821 . -2) (undo-tree-id6822 . -2) (undo-tree-id6823 . -2) (undo-tree-id6824 . -2) (undo-tree-id6825 . -2) (undo-tree-id6826 . -2) (undo-tree-id6827 . -2) (undo-tree-id6828 . -2) (undo-tree-id6829 . -2) (undo-tree-id6830 . -2) (undo-tree-id6831 . -2) (undo-tree-id6832 . -2) (undo-tree-id6833 . -2) (undo-tree-id6834 . -2) (undo-tree-id6835 . -2) (undo-tree-id6836 . -2) (undo-tree-id6837 . -2) (undo-tree-id6838 . -2) (undo-tree-id6839 . -2) (undo-tree-id6840 . -2) (undo-tree-id6841 . -2) (undo-tree-id6842 . -2) (undo-tree-id6843 . -2) (undo-tree-id6844 . -2) (undo-tree-id6845 . -2) (undo-tree-id6846 . -2) (undo-tree-id6847 . -2) (undo-tree-id6848 . -2) (undo-tree-id6849 . -2) (undo-tree-id6850 . -2) (undo-tree-id6851 . -2) (undo-tree-id6852 . -2) (undo-tree-id6853 . -2) (undo-tree-id6854 . -2) (undo-tree-id6855 . -2) (undo-tree-id6856 . -3) (undo-tree-id6857 . -3) (undo-tree-id6858 . -3) (undo-tree-id6859 . -3) (undo-tree-id6860 . -3) (undo-tree-id6861 . -3) (undo-tree-id6862 . -3) (undo-tree-id6863 . -3) (undo-tree-id6864 . -3) 11401 (11398 . 11401) (11397 . 11398) (t 25734 40258 186741 621000) 11381) nil (25734 40329 792221 772000) 0 nil])
([nil nil ((11413 . 11418)) nil (25734 40329 792161 254000) 0 nil])
([nil nil ((11397 . 11398) 11393) nil (25734 40329 792160 614000) 0 nil])
([nil nil ((11448 . 11449) 11439) nil (25734 40329 792159 810000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11490 . 11491) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -11542) (11490 . 11543) 11454) nil (25734 40329 792158 848000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11577 . 11578) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -11629) (11577 . 11630) 11547) nil (25734 40329 792157 709000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11674 . 11675) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -11726) (11674 . 11727) 11634) nil (25734 40329 792156 558000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11749 . 11750) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -11801) (11749 . 11802) 11731) nil (25734 40329 792155 419000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11888 . 11889) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -11940) (11888 . 11941) 11860) nil (25734 40329 792154 196000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11855 . 11856) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -11907) (11855 . 11908) 11806) nil (25734 40329 792152 893000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12087 . 12088) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -12139) (12087 . 12140) 12068) nil (25734 40329 792151 587000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12202 . 12203) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -12254) (12202 . 12255) 12169) nil (25734 40329 794613 126000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12283 . 12284) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -12335) (12283 . 12336) 12259) nil (25734 40376 489684 773000) 0 nil] [nil nil ((nil rear-nonsticky nil 12283 . 12284) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -12543) (12283 . 12544) 12259) ((#("

#+BEGIN_SRC    lisp :results output 
  
#+END_SRC


#+BEGIN_SRC    lisp :results output 
  
#+END_SRC


#+BEGIN_SRC    lisp :results output 
  
#+END_SRC


#+BEGIN_SRC    lisp :results output 
  
#+END_SRC


#+BEGIN_SRC    lisp :results output 
  
#+END_SRC

" 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) rear-nonsticky nil) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 2 38 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 38 39 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 39 42 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 42 51 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 51 52 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 52 53 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 53 54 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 54 90 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 90 91 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 91 94 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 94 103 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 103 104 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 104 105 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 105 106 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 106 142 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 142 143 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 143 146 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 146 155 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 155 156 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 156 157 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 157 158 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 158 194 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 194 195 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 195 198 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 198 207 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 207 208 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 208 209 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 209 210 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 210 246 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 246 247 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 247 250 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 250 259 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 259 260 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 260 261 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 12283) (undo-tree-id6865 . -260) (undo-tree-id6866 . -1) (undo-tree-id6867 . -260) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (12543 . 12544) (nil rear-nonsticky t 12283 . 12284)) (25734 40329 792143 609000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12358 . 12359) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -12410) (12358 . 12411) 12340) nil (25734 40376 489683 570000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 12470 . 12471) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -12522) (12470 . 12523) 12447) nil (25734 40376 489682 390000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12558 . 12559) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -12610) (12558 . 12611) 12527) nil (25734 40376 489681 223000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12442 . 12443) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -12494) (12442 . 12495) 12415) nil (25734 40376 489679 983000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12164 . 12165) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -12216) (12164 . 12217) 12144) nil (25734 40376 489677 932000) 0 nil])
([nil nil ((11441 . 11442) (11439 . 11441) (#("t" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -11439) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) 11440 (11436 . 11440)) nil (25734 40376 489672 948000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11621 . 11622) (nil fontified nil 11598 . 11622) (nil fontified nil 11577 . 11598) (nil fontified nil 11556 . 11577) (nil fontified nil 11537 . 11556) (11537 . 11622) 11536 (t 25734 40376 508985 604000)) nil (25734 40443 114315 193000) 0 nil])
([nil nil ((#("*** MARTIN AND THE  DRAGON 

#+BEGIN_SRC    lisp :results output 
  ( )
  
#+END_SRC

" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 27 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 27 28 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 28 29 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 29 65 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 65 66 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 66 68 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 68 69 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 69 70 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 70 71 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 71 72 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 72 75 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 75 84 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 84 85 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 85 86 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line)) . 11370) (undo-tree-id6896 . -27) (undo-tree-id6897 . 58) (undo-tree-id6898 . 12) (undo-tree-id6899 . -29) (undo-tree-id6900 . -27) (undo-tree-id6901 . -74) (undo-tree-id6902 . -69) (undo-tree-id6903 . -69) (undo-tree-id6904 . -69) (undo-tree-id6905 . -69) (undo-tree-id6906 . -69) (undo-tree-id6907 . -69) (undo-tree-id6908 . -69) (undo-tree-id6909 . -69) (undo-tree-id6910 . -69) (undo-tree-id6911 . -69) (undo-tree-id6912 . -69) (undo-tree-id6913 . -69) (undo-tree-id6914 . -69) (undo-tree-id6915 . -69) (undo-tree-id6916 . -69) (undo-tree-id6917 . -69) (undo-tree-id6918 . -69) (undo-tree-id6919 . -69) (undo-tree-id6920 . -69) (undo-tree-id6921 . -69) (undo-tree-id6922 . -69) (undo-tree-id6923 . -69) (undo-tree-id6924 . -85) (undo-tree-id6925 . -73) (undo-tree-id6926 . -73) (undo-tree-id6927 . -73) (undo-tree-id6928 . -73) (undo-tree-id6929 . -73) (undo-tree-id6930 . -73) (undo-tree-id6931 . -73) (undo-tree-id6932 . -73) (undo-tree-id6933 . -73) (undo-tree-id6934 . -73) (undo-tree-id6935 . -73) (undo-tree-id6936 . -73) (undo-tree-id6937 . -73) (undo-tree-id6938 . -73) (undo-tree-id6939 . -73) (undo-tree-id6940 . -73) (undo-tree-id6941 . -73) (undo-tree-id6942 . -73) (undo-tree-id6943 . -73) (undo-tree-id6944 . -73) (undo-tree-id6945 . -73) (undo-tree-id6946 . -73) (undo-tree-id6947 . -73) (undo-tree-id6948 . -73) (undo-tree-id6949 . -73) (undo-tree-id6950 . -73) (undo-tree-id6951 . -67) (undo-tree-id6952 . -67) (undo-tree-id6953 . -67) (undo-tree-id6954 . -67) (undo-tree-id6955 . -67) (undo-tree-id6956 . -67) (undo-tree-id6957 . -67) (undo-tree-id6958 . -68) (undo-tree-id6959 . -68) (undo-tree-id6960 . -68) (undo-tree-id6961 . -68) (undo-tree-id6962 . -68) (undo-tree-id6963 . -68) (undo-tree-id6964 . -68) (undo-tree-id6965 . -68) (undo-tree-id6966 . -68) (undo-tree-id6967 . -68) (undo-tree-id6968 . -68) (undo-tree-id6969 . -68) (undo-tree-id6970 . -68) (undo-tree-id6971 . -68) (undo-tree-id6972 . -68) (undo-tree-id6973 . -68) (undo-tree-id6974 . -68) (undo-tree-id6975 . -68) (undo-tree-id6976 . -68) (undo-tree-id6977 . -68) (undo-tree-id6978 . -68) (undo-tree-id6979 . -27) (undo-tree-id6980 . -27) (undo-tree-id6981 . -27) (undo-tree-id6982 . -27) (undo-tree-id6983 . -27) (undo-tree-id6984 . -27) (undo-tree-id6985 . -27) (undo-tree-id6986 . -27) (undo-tree-id6987 . -27) (undo-tree-id6988 . -27) (undo-tree-id6989 . -27) (undo-tree-id6990 . -27) (undo-tree-id6991 . -27) (undo-tree-id6992 . -27) (undo-tree-id6993 . -27) (undo-tree-id6994 . -26) (undo-tree-id6995 . -26) (undo-tree-id6996 . -26) (undo-tree-id6997 . -26) (undo-tree-id6998 . -26) (undo-tree-id6999 . -26) (undo-tree-id7000 . -26) (undo-tree-id7001 . -26) (undo-tree-id7002 . 59) (undo-tree-id7003 . -85) (undo-tree-id7004 . -26) (undo-tree-id7005 . -26) (undo-tree-id7006 . -26) (undo-tree-id7007 . -26) (undo-tree-id7008 . -26) (undo-tree-id7009 . -26) (undo-tree-id7010 . -27) (undo-tree-id7011 . -85) (undo-tree-id7012 . -85) (undo-tree-id7013 . -85) (undo-tree-id7014 . -85) (undo-tree-id7015 . -85) (undo-tree-id7016 . -85) (undo-tree-id7017 . -85) (undo-tree-id7018 . -85) (undo-tree-id7019 . -85) (undo-tree-id7020 . -85) (undo-tree-id7021 . -85) (undo-tree-id7022 . -85) (undo-tree-id7023 . -85) (undo-tree-id7024 . -85) (undo-tree-id7025 . -85) 11455) nil (25734 40443 114309 307000) 0 nil])
([nil nil ((11470 . 11472) (11491 . 11493) (11512 . 11514) 11449) nil (25734 40443 114221 428000) 0 nil])
([nil nil ((11472 . 11474) 11449) nil (25734 40443 114220 338000) 0 nil])
([nil nil ((11497 . 11505) 11449) nil (25734 40443 114218 939000) 0 nil])
([nil nil ((11528 . 11536) 11449) nil (25734 40443 114214 38000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -11561) (undo-tree-id7037 . -2) (undo-tree-id7038 . -2) (undo-tree-id7039 . -2) (undo-tree-id7040 . -2) (undo-tree-id7041 . -2) (undo-tree-id7042 . -2) (undo-tree-id7043 . -2) (undo-tree-id7044 . -2) (undo-tree-id7045 . -2) (undo-tree-id7046 . -2) (undo-tree-id7047 . -2) (undo-tree-id7048 . -2) (undo-tree-id7049 . -2) (undo-tree-id7050 . -2) (undo-tree-id7051 . -2) (undo-tree-id7052 . -2) (undo-tree-id7053 . -2) (undo-tree-id7054 . -2) (undo-tree-id7055 . -2) (undo-tree-id7056 . -2) (undo-tree-id7057 . -2) (undo-tree-id7058 . -2) (undo-tree-id7059 . -2) (undo-tree-id7060 . -2) 11563 (11560 . 11563) (t 25734 40443 132184 296000) 11530) nil (25734 40449 985311 741000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -11449) (undo-tree-id7026 . -2) (undo-tree-id7027 . -2) (undo-tree-id7028 . -2) (undo-tree-id7029 . -2) (undo-tree-id7030 . -2) (undo-tree-id7031 . -2) (undo-tree-id7032 . -2) (undo-tree-id7033 . -2) (undo-tree-id7034 . -2) (undo-tree-id7035 . -2) (undo-tree-id7036 . -2) 11451 (11448 . 11451) 11412) nil (25734 40449 985278 146000) 0 nil])
([nil nil ((11563 . 11565) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 11562) (undo-tree-id7061 . -2) (undo-tree-id7062 . -2) (undo-tree-id7063 . -2) (undo-tree-id7064 . -2) (undo-tree-id7065 . -2) (undo-tree-id7066 . -2) (undo-tree-id7067 . -2) (undo-tree-id7068 . -2) (undo-tree-id7069 . -2) (undo-tree-id7070 . -2) (undo-tree-id7071 . -2) (undo-tree-id7072 . -2) (undo-tree-id7073 . -2) (undo-tree-id7074 . -2) (undo-tree-id7075 . -2) (undo-tree-id7076 . -2) (undo-tree-id7077 . -2) (undo-tree-id7078 . -2) (undo-tree-id7079 . -2) (undo-tree-id7080 . -2) (undo-tree-id7081 . -2) (undo-tree-id7082 . -2) (undo-tree-id7083 . -2) (undo-tree-id7084 . -2) (11564 . 11565) (11561 . 11564) (t 25734 40449 996108 497000) 11540) nil (25734 40482 807600 873000) 0 nil])
([nil nil ((#("*** MARTIN VISITS THE DRAGON AGAIN

#+BEGIN_SRC    lisp :results output 
  
#+END_SRC

" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 33 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 33 34 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 34 35 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) rear-nonsticky t) 35 36 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 36 72 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 72 73 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 73 76 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 76 85 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 85 86 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 86 87 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 11578) (undo-tree-id7175 . -4) (undo-tree-id7176 . 53) (undo-tree-id7177 . -86) (undo-tree-id7178 . -86) (undo-tree-id7179 . -86) (undo-tree-id7180 . -86) (undo-tree-id7181 . -86) (undo-tree-id7182 . -86) (undo-tree-id7183 . -86) (undo-tree-id7184 . -86) (undo-tree-id7185 . -86) (undo-tree-id7186 . -86) (undo-tree-id7187 . -86) (undo-tree-id7188 . -86) (undo-tree-id7189 . -86) (undo-tree-id7190 . -86) (undo-tree-id7191 . -86) (undo-tree-id7192 . -86) (undo-tree-id7193 . -86) 11664 (t 25734 40482 823762 254000)) nil (25734 40539 492013 528000) 0 nil])
([nil nil ((11663 . 11665) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 11662) (undo-tree-id7153 . -2) (undo-tree-id7154 . -2) (undo-tree-id7155 . -2) (undo-tree-id7156 . -2) (undo-tree-id7157 . -2) (undo-tree-id7158 . -2) (undo-tree-id7159 . -2) (undo-tree-id7160 . -2) (undo-tree-id7161 . -2) (undo-tree-id7162 . -2) (undo-tree-id7163 . -2) (11662 . 11665) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 11661) (undo-tree-id7164 . -2) (undo-tree-id7165 . -2) (undo-tree-id7166 . -2) (undo-tree-id7167 . -2) (undo-tree-id7168 . -2) (undo-tree-id7169 . -2) (undo-tree-id7170 . -2) (undo-tree-id7171 . -2) (undo-tree-id7172 . -2) (undo-tree-id7173 . -2) (undo-tree-id7174 . -2) (11663 . 11664) (#("  " 0 2 (font-lock-fontified t src-block t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block))) . 11664) 11661 (11660 . 11663) 11624) nil (25734 40539 491997 736000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11723 . 11724) (nil fontified nil 11698 . 11724) (nil fontified nil 11678 . 11698) (nil fontified nil 11662 . 11678) (11662 . 11724)) nil (25734 40539 491513 683000) 0 nil])
([nil nil ((11662 . 11664) (11678 . 11680) (11698 . 11700) 11661) nil (25734 40539 491512 270000) 0 nil])
([nil nil ((11682 . 11684) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 11731) (undo-tree-id7085 . -2) (undo-tree-id7086 . -2) (undo-tree-id7087 . -2) (undo-tree-id7088 . -2) (undo-tree-id7089 . -2) (undo-tree-id7090 . -2) (undo-tree-id7091 . -2) (undo-tree-id7092 . -2) (undo-tree-id7093 . -2) (undo-tree-id7094 . -2) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -2) (undo-tree-id7125 . -2) (undo-tree-id7126 . -2) (undo-tree-id7127 . -2) (undo-tree-id7128 . -2) (undo-tree-id7129 . -2) (undo-tree-id7130 . -2) (undo-tree-id7131 . -2) (undo-tree-id7132 . -2) (undo-tree-id7133 . -2) (undo-tree-id7134 . -2) (undo-tree-id7135 . -2) (undo-tree-id7136 . -2) (undo-tree-id7137 . -2) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -2) 11661) nil (25734 40539 491508 197000) 0 nil])
([nil nil ((11706 . 11714) 11661) nil (25734 40539 491452 944000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) src-block t font-lock-multiline t face (org-block))) . 11741) (undo-tree-id7194 . 1) (t 25734 40539 559223 490000)) nil (25734 40542 901395 551000) 0 nil])
([nil nil ((#("*** THE DRAGON’S DREAM

#+BEGIN_SRC    lisp :results output 
  
#+END_SRC

" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 21 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 21 22 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 22 23 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) rear-nonsticky t) 23 24 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 24 60 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 60 61 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 61 64 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 64 73 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 73 74 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 74 75 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 11753) (undo-tree-id7257 . -4) (undo-tree-id7258 . -22) (undo-tree-id7259 . 53) (undo-tree-id7260 . -74) (undo-tree-id7261 . -12) (undo-tree-id7262 . -12) (undo-tree-id7263 . -12) (undo-tree-id7264 . -12) (undo-tree-id7265 . -12) (undo-tree-id7266 . -12) (undo-tree-id7267 . -12) (undo-tree-id7268 . -12) (undo-tree-id7269 . -12) (undo-tree-id7270 . -12) (undo-tree-id7271 . -12) (undo-tree-id7272 . -12) (undo-tree-id7273 . -12) (undo-tree-id7274 . -12) (undo-tree-id7275 . -12) (undo-tree-id7276 . -12) 11765 (t 25734 40542 915193 847000)) nil (25734 40603 554553 377000) 0 nil])
([nil nil ((11741 . 11743)) nil (25734 40603 554541 290000) 0 nil])
([nil nil ((11850 . 11852) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 11849) (undo-tree-id7235 . -2) (undo-tree-id7236 . -2) (undo-tree-id7237 . -2) (undo-tree-id7238 . -2) (undo-tree-id7239 . -2) (undo-tree-id7240 . -2) (undo-tree-id7241 . -2) (undo-tree-id7242 . -2) (undo-tree-id7243 . -2) (undo-tree-id7244 . -2) (undo-tree-id7245 . -2) (11849 . 11852) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 11848) (undo-tree-id7246 . -2) (undo-tree-id7247 . -2) (undo-tree-id7248 . -2) (undo-tree-id7249 . -2) (undo-tree-id7250 . -2) (undo-tree-id7251 . -2) (undo-tree-id7252 . -2) (undo-tree-id7253 . -2) (undo-tree-id7254 . -2) (undo-tree-id7255 . -2) (undo-tree-id7256 . -2) (11850 . 11851) (#("  " 0 2 (font-lock-fontified t src-block t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block))) . 11847) (11849 . 11852) 11847) nil (25734 40603 554539 262000) 0 nil])
([nil nil ((11848 . 11850)) nil (25734 40603 554523 737000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 11852) (undo-tree-id7206 . -2) (undo-tree-id7207 . -2) (undo-tree-id7208 . -2) (undo-tree-id7209 . -2) (undo-tree-id7210 . -2) (undo-tree-id7211 . -2) (undo-tree-id7212 . -2) (undo-tree-id7213 . -2) (undo-tree-id7214 . -2) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) 11847) nil (25734 40603 554521 977000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11958 . 11959) (nil fontified nil 11938 . 11959) (nil fontified nil 11899 . 11938) (nil fontified nil 11877 . 11899) (nil fontified nil 11850 . 11877) (11850 . 11959) 11849) nil (25734 40603 554502 962000) 0 nil])
([nil nil ((11877 . 11879) (11899 . 11901) (11938 . 11940) 11847) nil (25734 40603 554501 462000) 0 nil])
([nil nil ((11879 . 11881) 11847) nil (25734 40603 554499 811000) 0 nil])
([nil nil ((11905 . 11913) 11847) nil (25734 40603 554498 558000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -11952) (undo-tree-id7195 . -2) (undo-tree-id7196 . -2) (undo-tree-id7197 . -2) (undo-tree-id7198 . -2) (undo-tree-id7199 . -2) (undo-tree-id7200 . -2) (undo-tree-id7201 . -2) (undo-tree-id7202 . -2) (undo-tree-id7203 . -2) (undo-tree-id7204 . -2) (undo-tree-id7205 . -2) 11954 (11951 . 11954) 11925) nil (25734 40603 554494 195000) 0 nil])
([nil nil ((12064 . 12066) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 12063) (undo-tree-id7277 . -2) (undo-tree-id7278 . -2) (undo-tree-id7279 . -2) (undo-tree-id7280 . -2) (undo-tree-id7281 . -2) (undo-tree-id7282 . -2) (undo-tree-id7283 . -2) (undo-tree-id7284 . -2) (undo-tree-id7285 . -2) (undo-tree-id7286 . -2) (undo-tree-id7287 . -2) (12063 . 12066) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 12062) (undo-tree-id7288 . -2) (undo-tree-id7289 . -2) (undo-tree-id7290 . -2) (undo-tree-id7291 . -2) (undo-tree-id7292 . -2) (undo-tree-id7293 . -2) (undo-tree-id7294 . -2) (undo-tree-id7295 . -2) (undo-tree-id7296 . -2) (undo-tree-id7297 . -2) (undo-tree-id7298 . -2) (undo-tree-id7299 . -2) (undo-tree-id7300 . -2) (undo-tree-id7301 . -2) (undo-tree-id7302 . -2) (undo-tree-id7303 . -2) (undo-tree-id7304 . -2) (undo-tree-id7305 . -2) (undo-tree-id7306 . -2) (undo-tree-id7307 . -2) (undo-tree-id7308 . -2) (undo-tree-id7309 . -2) (undo-tree-id7310 . -2) (undo-tree-id7311 . -2) (12064 . 12065) (#("  " 0 2 (font-lock-fontified t src-block t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block))) . 12061) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (12063 . 12066) (t 25734 40603 622697 373000) 12062) nil (25734 40721 261389 558000) 0 nil])
([nil nil ((12022 . 12024) (t 25734 40721 281925 914000)) nil (25734 40745 486404 595000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12141 . 12142) (nil fontified nil 12078 . 12142) (nil fontified nil 12046 . 12078) (nil fontified nil 12024 . 12046) (12024 . 12142)) nil (25734 40745 486399 380000) 0 nil])
([nil nil ((#("#+BEGIN_SRC    lisp :results output 
" 0 36 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 36 37 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line)) . 12144) (undo-tree-id7344 . -35) (undo-tree-id7345 . -35) (undo-tree-id7346 . -35) (undo-tree-id7347 . -35) (undo-tree-id7348 . -35) (undo-tree-id7349 . -35) (undo-tree-id7350 . -35) (undo-tree-id7351 . -37) (undo-tree-id7352 . -37) (undo-tree-id7353 . -37) (undo-tree-id7354 . -37) (undo-tree-id7355 . -37) (undo-tree-id7356 . -37) (undo-tree-id7357 . -37) (undo-tree-id7358 . -37) (undo-tree-id7359 . -37) (undo-tree-id7360 . -37) (undo-tree-id7361 . -37) (undo-tree-id7362 . -37) (undo-tree-id7363 . -37) (undo-tree-id7364 . -37) (undo-tree-id7365 . -37) (undo-tree-id7366 . -37) (undo-tree-id7367 . -37) (undo-tree-id7368 . -37) (undo-tree-id7369 . -37) (undo-tree-id7370 . -37) (undo-tree-id7371 . -37) (undo-tree-id7372 . -37) (t 25734 40745 505794 436000)) nil (25734 40774 780018 608000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t)) . 12144) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1)) nil (25734 40774 779999 382000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t)) . 12144)) nil (25734 40774 779981 445000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t)) . 12144)) nil (25734 40774 779980 669000) 0 nil])
([nil nil ((#("  
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t) 2 3 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 12144)) nil (25734 40774 779979 783000) 0 nil])
([nil nil ((#("#+END_SRC
" 0 9 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-meta-line) 9 10 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 12144) (undo-tree-id7321 . -9)) nil (25734 40774 779978 195000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 12144)) nil (25734 40871 223379 241000) 0 nil])
([nil nil ((#("*** MARTIN DISCOVERS INFINITE RECURSION
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 38 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 38 39 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 39 40 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 12144) (undo-tree-id7403 . -39) (undo-tree-id7404 . -4) (undo-tree-id7405 . -38) (undo-tree-id7406 . -39) (undo-tree-id7407 . -39) (undo-tree-id7408 . -39) (undo-tree-id7409 . -39) (undo-tree-id7410 . -39) (undo-tree-id7411 . -39) (undo-tree-id7412 . -39) (undo-tree-id7413 . -38) (undo-tree-id7414 . -38) (undo-tree-id7415 . -38) (undo-tree-id7416 . -38) (undo-tree-id7417 . -38) (undo-tree-id7418 . -38) (undo-tree-id7419 . -38) (undo-tree-id7420 . -38) (undo-tree-id7421 . -38) (undo-tree-id7422 . -38) (undo-tree-id7423 . -38) (undo-tree-id7424 . -38) (undo-tree-id7425 . -38) (undo-tree-id7426 . -38) (undo-tree-id7427 . -38) (undo-tree-id7428 . -38) (undo-tree-id7429 . -38) (undo-tree-id7430 . -38) (undo-tree-id7431 . -38) (undo-tree-id7432 . -38) (undo-tree-id7433 . -38) (undo-tree-id7434 . -38) (undo-tree-id7435 . -38) (undo-tree-id7436 . -38) (undo-tree-id7437 . -38) (undo-tree-id7438 . -38) (undo-tree-id7439 . -38) (undo-tree-id7440 . -38) (undo-tree-id7441 . -38) (undo-tree-id7442 . -38) (undo-tree-id7443 . -38) (undo-tree-id7444 . -38) (undo-tree-id7445 . -38) (undo-tree-id7446 . -38) (undo-tree-id7447 . -38) (undo-tree-id7448 . -38) (undo-tree-id7449 . -38) (undo-tree-id7450 . -38) (t 25734 40774 797646 593000)) ((12144 . 12184)) (25734 40872 355509 936000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12284 . 12285) (nil fontified nil 12270 . 12285) (nil fontified nil 12253 . 12270) (nil fontified nil 12239 . 12253) (12239 . 12285) 12238) nil (25734 40909 317475 55000) 0 nil] [nil nil ((12174 . 12175) 12148) ((#("
" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 12174) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1)) (25734 40870 703295 634000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12143 . 12144) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -12239) (12143 . 12240)) nil (25734 40909 317473 41000) 0 nil])
nil
([nil nil ((#("  defun fib (n)
" 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 1 2 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 2 12 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block) help-echo nil src-block t) 13 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 14 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block) help-echo nil src-block t) 15 16 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 12333) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -14) (undo-tree-id7501 . -14)) nil (25734 40909 317471 90000) 0 nil])
([nil nil ((#("(+ (fib (- n 1))
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 1 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 4 8 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8 9 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 9 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 15 16 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 16 17 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 12333) (undo-tree-id7471 . -17) (undo-tree-id7472 . -14) (undo-tree-id7473 . -14) (undo-tree-id7474 . -16) (undo-tree-id7475 . 17) (undo-tree-id7476 . -1)) nil (25734 40909 317453 942000) 0 nil])
([nil nil ((#("(fib (- n 2))))" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 1 5 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5 6 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 6 11 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11 12 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 12 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 13 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 14 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block))) . 12333) (undo-tree-id7451 . -15) (undo-tree-id7452 . -14) (undo-tree-id7453 . -14) (undo-tree-id7454 . -14) (undo-tree-id7455 . -14) (undo-tree-id7456 . -14) (undo-tree-id7457 . -14) (undo-tree-id7458 . -14) (undo-tree-id7459 . -14) (undo-tree-id7460 . -14) (undo-tree-id7461 . -14) (undo-tree-id7462 . -14) (undo-tree-id7463 . -14) (undo-tree-id7464 . -14) (undo-tree-id7465 . -14) (undo-tree-id7466 . 15) (undo-tree-id7467 . -1) (undo-tree-id7468 . 3) (undo-tree-id7469 . -13) (undo-tree-id7470 . -15)) nil (25734 40909 317448 422000) 0 nil])
([nil nil ((12197 . 12199) (12214 . 12216) 12181) nil (25734 40909 317425 844000) 0 nil])
([nil nil ((12218 . 12221) 12181) nil (25734 40909 317424 334000) 0 nil])
([nil nil (12195) nil (25734 40909 317422 740000) 0 nil])
([nil nil ((12183 . 12184)) nil (25734 40909 317417 732000) 0 nil])
([nil nil ((12200 . 12202) 12181 (t 25734 40909 385106 277000)) nil (25734 40912 111196 367000) 0 nil])
([nil nil ((12224 . 12226) 12181) nil (25734 40912 111190 707000) 0 nil])
([nil nil ((#("*** INFINITE RECURSION IN LISP
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 29 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 29 30 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 30 31 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 12252) (undo-tree-id7502 . 31) (undo-tree-id7503 . -13) (undo-tree-id7504 . -30) (undo-tree-id7505 . -30) (undo-tree-id7506 . -30) (undo-tree-id7507 . -30) (undo-tree-id7508 . -30) (undo-tree-id7509 . -30) (undo-tree-id7510 . -30) (undo-tree-id7511 . -30) (undo-tree-id7512 . -30) (undo-tree-id7513 . -30) (undo-tree-id7514 . -30) (undo-tree-id7515 . -30) (undo-tree-id7516 . -30) (undo-tree-id7517 . -30) (undo-tree-id7518 . -30) (undo-tree-id7519 . -30) (undo-tree-id7520 . -30) (undo-tree-id7521 . -30) (undo-tree-id7522 . -30) (undo-tree-id7523 . -30) (undo-tree-id7524 . -30) (undo-tree-id7525 . -30) (undo-tree-id7526 . -30) (undo-tree-id7527 . -30) (undo-tree-id7528 . -30) (undo-tree-id7529 . -30) (undo-tree-id7530 . -30) (undo-tree-id7531 . -30) (undo-tree-id7532 . -30) (undo-tree-id7533 . -30) (undo-tree-id7534 . -30) (undo-tree-id7535 . -30) (undo-tree-id7536 . -30) (undo-tree-id7537 . -30) (undo-tree-id7538 . -30) (undo-tree-id7539 . -30) (undo-tree-id7540 . -29) (undo-tree-id7541 . -29) (undo-tree-id7542 . -29) (undo-tree-id7543 . -29) (undo-tree-id7544 . -29) (undo-tree-id7545 . -29) (undo-tree-id7546 . -29) (undo-tree-id7547 . -29) (undo-tree-id7548 . -29) (undo-tree-id7549 . -30) (undo-tree-id7550 . -30) (undo-tree-id7551 . -30) (undo-tree-id7552 . -30) (undo-tree-id7553 . -30) (undo-tree-id7554 . -30) (undo-tree-id7555 . -30) (undo-tree-id7556 . -29) (undo-tree-id7557 . -29) (undo-tree-id7558 . -29) (undo-tree-id7559 . -29) (undo-tree-id7560 . -29) (undo-tree-id7561 . -29) (undo-tree-id7562 . -29) (undo-tree-id7563 . -29) (undo-tree-id7564 . -29) (undo-tree-id7565 . -29) (undo-tree-id7566 . -29) (undo-tree-id7567 . -29) (undo-tree-id7568 . -29) (undo-tree-id7569 . -29) (undo-tree-id7570 . -29) (undo-tree-id7571 . -29) (undo-tree-id7572 . -29) (undo-tree-id7573 . -29) (undo-tree-id7574 . -29) (undo-tree-id7575 . -29) (undo-tree-id7576 . -29) (undo-tree-id7577 . -29) (undo-tree-id7578 . -29) (undo-tree-id7579 . -4) (undo-tree-id7580 . -4) (undo-tree-id7581 . -4) (undo-tree-id7582 . -4) (undo-tree-id7583 . -4) (undo-tree-id7584 . -4) (undo-tree-id7585 . -4) (undo-tree-id7586 . -4) (undo-tree-id7587 . -13) (undo-tree-id7588 . -13) (undo-tree-id7589 . -13) (undo-tree-id7590 . -13) (undo-tree-id7591 . -13) (undo-tree-id7592 . -13) (undo-tree-id7593 . -13) (undo-tree-id7594 . -13) (undo-tree-id7595 . -13) (undo-tree-id7596 . -13) (undo-tree-id7597 . -13) (undo-tree-id7598 . -13) (undo-tree-id7599 . -13) (undo-tree-id7600 . -13) (undo-tree-id7601 . -13) (undo-tree-id7602 . -13) 12265 (t 25734 40912 129097 389000)) nil (25734 41006 236433 625000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12142 . 12143) (#("
" 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . -12173) (12142 . 12174) 12087) nil (25734 41006 236355 984000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)))) . -12143) (undo-tree-id7603 . -3) (undo-tree-id7604 . -3) (undo-tree-id7605 . -3) (undo-tree-id7606 . -3) (undo-tree-id7607 . -3) (undo-tree-id7608 . -3) (undo-tree-id7609 . -3) (undo-tree-id7610 . -3) (undo-tree-id7611 . -3) (undo-tree-id7612 . -3) (undo-tree-id7613 . -3) (undo-tree-id7614 . -3) (undo-tree-id7615 . -3) (undo-tree-id7616 . -3) (undo-tree-id7617 . -3) (undo-tree-id7618 . -3) (undo-tree-id7619 . -3) (undo-tree-id7620 . -3) (undo-tree-id7621 . -3) (undo-tree-id7622 . -3) (undo-tree-id7623 . -3) (undo-tree-id7624 . -3) (undo-tree-id7625 . -3) 12146 (12142 . 12146) (t 25734 41006 256836 813000) 12078) nil (25734 41008 700645 484000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12333 . 12334) (nil fontified nil 12308 . 12334) (12308 . 12334) (t 25734 41008 712831 91000)) nil (25734 42055 321367 997000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12456 . 12457) (nil fontified nil 12433 . 12457) (nil fontified nil 12412 . 12433) (nil fontified nil 12391 . 12412) (nil fontified nil 12372 . 12391) (12372 . 12457)) nil (25734 42055 321366 245000) 0 nil])
([nil nil ((12372 . 12374) (12391 . 12395) (12412 . 12422) (12433 . 12443) 12372) nil (25734 42055 321360 670000) 0 nil])
([nil nil ((12494 . 12495) (12493 . 12494) (t 25734 42055 342950 739000) 12492) nil (25734 42132 18960 753000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12520 . 12521) (nil fontified nil 12495 . 12521) (12495 . 12521)) nil (25734 42132 18959 539000) 0 nil])
([nil nil ((12521 . 12522)) nil (25734 42141 52691 117000) 0 nil])
([nil nil ((#("#+BEGIN_SRC    lisp :results output 
" 0 1 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 1 7 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 7 8 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 8 11 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 11 36 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 36 37 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line)) . 12550) (undo-tree-id8042 . 37)) nil (25734 42158 707859 7000) 0 nil] [nil nil ((#("*" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap))) . 12524) (undo-tree-id7836 . 1)) ((12524 . 12525)) (25734 42139 202453 518000) 0 nil])
([nil nil ((#("  
" 0 2 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 2 3 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 12550) (undo-tree-id8040 . 3) (undo-tree-id8041 . -2)) nil (25734 42158 707857 215000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap))) . 12524) (undo-tree-id7835 . 1)) ((12524 . 12525)) (25734 42136 665028 874000) 0 nil])
([nil nil ((#("#+END_SRC
" 0 9 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-meta-line) 9 10 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 12550) (undo-tree-id8031 . 10) (undo-tree-id8032 . -10) (undo-tree-id8033 . -10) (undo-tree-id8034 . -10) (undo-tree-id8035 . -10) (undo-tree-id8036 . -10) (undo-tree-id8037 . -10) (undo-tree-id8038 . -10) (undo-tree-id8039 . -9)) nil (25734 42158 707854 238000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) composition (0 1 [9673]) keymap (keymap) face org-level-1)) . 12524) (undo-tree-id7834 . 1)) ((12524 . 12525)) (25734 42136 56917 896000) 0 nil])
([nil nil ((#("
*** VARIATIONS ON THE BASIC TEMPLATES

#+BEGIN_SRC    lisp :results output 
  
#+END_SRC

*** Conditional Augmentation

#+BEGIN_SRC    lisp :results output 
  
#+END_SRC

*** Multiple Recursion

#+BEGIN_SRC    lisp :results output 
  
#+END_SRC

*** TREES AND CAR/CDR RECURSION

#+BEGIN_SRC    lisp :results output 
  
#+END_SRC

*** USING HELPING FUNCTIONS

#+BEGIN_SRC    lisp :results output 
  
#+END_SRC

*** RECURSION IN ART AND LITERATURE

#+BEGIN_SRC    lisp :results output 
  
#+END_SRC

*** 
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 1 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 4 5 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 5 37 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 37 38 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 38 39 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) rear-nonsticky t) 39 40 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 40 76 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 76 77 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 77 80 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 80 89 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 89 90 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 90 91 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 91 93 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 93 94 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 94 95 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 95 118 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 118 119 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 119 120 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) rear-nonsticky t) 120 121 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 121 157 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 157 158 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 158 161 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 161 170 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 170 171 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 171 172 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 172 174 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 174 175 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 175 176 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 176 193 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 193 194 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 194 195 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) rear-nonsticky t) 195 196 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 196 232 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 232 233 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 233 236 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 236 245 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 245 246 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 246 247 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 247 249 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 249 250 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 250 251 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 251 277 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 277 278 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 278 279 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) rear-nonsticky t) 279 280 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 280 316 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 316 317 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 317 320 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 320 329 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 329 330 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 330 331 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 331 333 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 333 334 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 334 335 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 335 357 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 357 358 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 358 359 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) rear-nonsticky t) 359 360 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 360 396 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 396 397 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 397 400 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 400 409 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 409 410 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 410 411 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 411 413 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 413 414 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 414 415 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 415 445 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 445 446 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 446 447 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) rear-nonsticky t) 447 448 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 448 484 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 484 485 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 485 488 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 488 497 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 497 498 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 498 499 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 499 501 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 501 502 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 502 503 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 503 504 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 12550) (undo-tree-id8021 . 504) (undo-tree-id8022 . -504) (undo-tree-id8023 . -504) (undo-tree-id8024 . -95) (undo-tree-id8025 . -119) (undo-tree-id8026 . -194) (undo-tree-id8027 . -335) (undo-tree-id8028 . -415) (undo-tree-id8029 . 504) (undo-tree-id8030 . -503)) nil (25734 42158 707458 67000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 12523) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1)) ((12523 . 12524)) (25734 42135 562176 558000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 12522) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (undo-tree-id7954 . -1) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -1) (undo-tree-id7969 . -1) (undo-tree-id7970 . -1) (undo-tree-id7971 . -1) (undo-tree-id7972 . -1) (undo-tree-id7973 . -1) (undo-tree-id7974 . -1) (undo-tree-id7975 . -1) (undo-tree-id7976 . -1) (undo-tree-id7977 . -1) (undo-tree-id7978 . -1) (undo-tree-id7979 . -1) (undo-tree-id7980 . -1) (undo-tree-id7981 . -1) (undo-tree-id7982 . -1) (undo-tree-id7983 . -1) (undo-tree-id7984 . -1) (undo-tree-id7985 . -1) (undo-tree-id7986 . -1) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1) (undo-tree-id7991 . -1) (undo-tree-id7992 . -1) (undo-tree-id7993 . -1) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) (undo-tree-id7997 . -1) (undo-tree-id7998 . -1) (undo-tree-id7999 . -1) (undo-tree-id8000 . -1) (undo-tree-id8001 . -1) (undo-tree-id8002 . -1) (undo-tree-id8003 . -1) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1)) nil (25734 42158 707449 565000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . 12523) (undo-tree-id7806 . 1)) ((12523 . 12524)) (25734 42134 868843 305000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 12522) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (undo-tree-id7904 . -1) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1)) nil (25734 42158 707395 706000) 0 nil])
([nil nil ((12596 . 12597) (12595 . 12596) 12523) ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 12595) (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 12596)) (25734 42134 283722 936000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap))) . 12522)) nil (25734 42158 707336 961000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 12522) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1)) ((12522 . 12523)) (25734 42133 103111 616000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap))) . 12522)) nil (25734 42158 707336 157000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) rear-nonsticky t)) . 12542) (undo-tree-id7736 . 1) (undo-tree-id7737 . 1)) ((12542 . 12543)) (25734 42132 802277 657000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) composition (0 1 [9673]) keymap (keymap) face org-level-1)) . 12522)) nil (25734 42158 707334 643000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 12542) (undo-tree-id7734 . 1) (undo-tree-id7735 . 1)) ((12542 . 12543)) (25734 42132 492363 358000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . 12522) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1)) nil (25734 42158 707329 709000) 0 nil])
([nil nil ((#("#" 0 1 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 12542) (undo-tree-id7732 . 1) (undo-tree-id7733 . 1)) ((12542 . 12543)) (25734 42132 167100 884000) 0 nil])
([nil nil ((#("** Recursion 
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (1 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 3 13 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 13 14 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 10630) (undo-tree-id8207 . -3) (undo-tree-id8208 . -14) (undo-tree-id8209 . -14) (undo-tree-id8210 . -14) (undo-tree-id8211 . -14) (undo-tree-id8212 . -14) (undo-tree-id8213 . -14) (undo-tree-id8214 . -14) (undo-tree-id8215 . -14) (undo-tree-id8216 . -14) (undo-tree-id8217 . -14) (undo-tree-id8218 . -3) (undo-tree-id8219 . -3) (undo-tree-id8220 . -3) (undo-tree-id8221 . -3) (undo-tree-id8222 . -3) (undo-tree-id8223 . -3) (undo-tree-id8224 . -3) (undo-tree-id8225 . -3) (undo-tree-id8226 . -3) (undo-tree-id8227 . -3) (undo-tree-id8228 . -3) (undo-tree-id8229 . -3) (undo-tree-id8230 . -3) (undo-tree-id8231 . -3) (undo-tree-id8232 . -3) (undo-tree-id8233 . -3) (undo-tree-id8234 . -3) (undo-tree-id8235 . -3) (undo-tree-id8236 . -3) (undo-tree-id8237 . -3) (undo-tree-id8238 . -3) (undo-tree-id8239 . -3) (undo-tree-id8240 . -3) (undo-tree-id8241 . -3) (undo-tree-id8242 . -3) (undo-tree-id8243 . -3) (undo-tree-id8244 . -3) (undo-tree-id8245 . -3) (undo-tree-id8246 . -3) (undo-tree-id8247 . -3) (undo-tree-id8248 . -14) (undo-tree-id8249 . -14) (undo-tree-id8250 . -14) (undo-tree-id8251 . -14) (undo-tree-id8252 . -14) (undo-tree-id8253 . -14) (undo-tree-id8254 . -14) (undo-tree-id8255 . -14) (undo-tree-id8256 . -14) (undo-tree-id8257 . -14) (undo-tree-id8258 . -14) (undo-tree-id8259 . -14) (undo-tree-id8260 . -14) (undo-tree-id8261 . -14) (undo-tree-id8262 . -3) (undo-tree-id8263 . -3) (undo-tree-id8264 . -3) (undo-tree-id8265 . -3) (undo-tree-id8266 . -3) (undo-tree-id8267 . -3) (undo-tree-id8268 . -3) (undo-tree-id8269 . -3) (undo-tree-id8270 . -3) (undo-tree-id8271 . -3) (undo-tree-id8272 . -3) (undo-tree-id8273 . -3) (undo-tree-id8274 . -3) (undo-tree-id8275 . -3) (undo-tree-id8276 . -3) 10633 (t 25734 42158 773419 703000)) nil (25734 42320 68806 612000) 0 nil])
([nil nil ((#("+BEGIN_SRC    lisp :results output " 0 6 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 6 7 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) invisible t) 7 10 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) display ((raise -0.3) (height 0.7))) 10 35 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 12542) (undo-tree-id7730 . 35) (undo-tree-id7731 . 35)) ((12542 . 12577)) (25734 42132 19569 59000) 0 nil])
([nil nil ((#("*** INTRODUCTION
*** MARTIN AND THE DRAGON
*** A FUNCTION TO SEARCH FOR ODD NUMBERS
*** MARTIN VISITS THE DRAGON AGAIN
*** A LISP VERSION OF THE FACTORIAL FUNCTION
*** THE DRAGON’S DREAM
*** A RECURSIVE FUNCTION FOR COUNTING SLICES OF BREAD
*** THE THREE RULES OF RECURSION
*** MARTIN DISCOVERS INFINITE RECURSION
*** INFINITE RECURSION IN LISP
*** RECURSION TEMPLATES
*** Single-Test Tail Recursion
*** Augmenting Recursion
*** VARIATIONS ON THE BASIC TEMPLATES
*** List-Consing Recursion
*** Simultaneous Recursion on Several Variables
*** Conditional Augmentation
*** Multiple Recursion
*** TREES AND CAR/CDR RECURSION
*** USING HELPING FUNCTIONS
*** RECURSION IN ART AND LITERATURE
*** 
*** 

** EMACS LISP
" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 16 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 16 17 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 17 18 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-fontified t face org-hide keymap (keymap)) 18 19 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-fontified t face org-hide keymap (keymap)) 19 20 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-fontified t composition (2 1 [9675]) keymap (keymap) face org-level-3) 20 21 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-fontified t keymap (keymap) face org-level-3) 21 41 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t font-lock-fontified t face org-level-3) 41 42 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t face org-level-3) 42 43 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 43 45 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 45 46 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 46 47 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 47 82 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 82 83 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 83 84 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 84 86 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 86 87 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 87 88 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 88 117 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 117 118 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 118 119 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 119 121 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 121 122 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 122 123 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 123 162 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 162 163 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 163 164 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 164 166 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 166 167 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 167 168 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 168 185 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 185 186 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 186 187 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 187 188 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 188 189 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 189 190 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 190 191 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 191 239 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 239 240 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 240 241 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 241 243 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 243 244 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 244 245 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 245 272 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 272 273 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 273 274 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 274 276 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 276 277 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 277 278 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 278 312 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 312 313 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 313 314 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 314 316 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 316 317 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 317 318 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 318 343 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 343 344 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 344 345 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 345 347 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 347 348 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 348 349 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 349 367 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 367 368 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 368 369 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 369 371 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 371 372 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 372 373 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 373 398 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 398 399 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 399 400 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 400 402 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 402 403 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 403 404 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 404 423 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 423 424 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 424 425 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 425 427 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 427 428 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 428 429 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 429 461 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 461 462 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 462 463 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 463 465 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 465 466 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 466 467 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 467 488 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 488 489 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 489 490 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 490 491 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 491 492 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 492 493 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 493 494 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 494 536 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 536 537 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 537 538 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 538 540 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 540 541 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 541 542 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 542 565 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 565 566 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 566 567 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 567 569 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 569 570 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 570 571 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 571 588 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 588 589 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 589 590 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 590 592 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 592 593 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 593 594 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 594 620 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 620 621 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 621 622 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 622 624 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 624 625 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 625 626 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 626 648 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 648 649 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 649 650 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 650 652 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 652 653 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 653 654 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 654 684 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 684 685 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 685 686 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 686 688 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 688 689 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 689 690 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 690 691 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 691 693 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 693 694 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 694 695 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 695 696 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t) 696 697 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 697 698 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 698 699 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (1 1 [9679]) keymap (keymap) face org-level-2) 699 700 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 700 710 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 710 711 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 10645) (undo-tree-id8411 . -702) (undo-tree-id8412 . -697) (undo-tree-id8413 . -4) (undo-tree-id8414 . -702) (undo-tree-id8415 . -711) (undo-tree-id8416 . -711) (undo-tree-id8417 . -711) (undo-tree-id8418 . -702) (undo-tree-id8419 . -697) (undo-tree-id8420 . -697) (undo-tree-id8421 . -697) (undo-tree-id8422 . -4) (undo-tree-id8423 . -4) (undo-tree-id8424 . -4) (undo-tree-id8425 . -4) (undo-tree-id8426 . -4) (undo-tree-id8427 . -4) (undo-tree-id8428 . -4) (undo-tree-id8429 . -21) (undo-tree-id8430 . -47) (undo-tree-id8431 . -88) (undo-tree-id8432 . -123) (undo-tree-id8433 . -168) (undo-tree-id8434 . -191) (undo-tree-id8435 . -245) (undo-tree-id8436 . -278) (undo-tree-id8437 . -318) (undo-tree-id8438 . -349) (undo-tree-id8439 . -373) (undo-tree-id8440 . -404) (undo-tree-id8441 . -429) (undo-tree-id8442 . -467) (undo-tree-id8443 . -494) (undo-tree-id8444 . -542) (undo-tree-id8445 . -571) (undo-tree-id8446 . -594) (undo-tree-id8447 . -626) (undo-tree-id8448 . -654) (undo-tree-id8449 . -689) (undo-tree-id8450 . -689) (undo-tree-id8451 . -689) (undo-tree-id8452 . -689) (undo-tree-id8453 . -689) (undo-tree-id8454 . -689) (undo-tree-id8455 . -689) (undo-tree-id8456 . -694) (undo-tree-id8457 . -696) (undo-tree-id8458 . -696) (undo-tree-id8459 . -696) (undo-tree-id8460 . -696) (undo-tree-id8461 . -696) (undo-tree-id8462 . -696) (undo-tree-id8463 . -696) (undo-tree-id8464 . -696) (undo-tree-id8465 . -696) (undo-tree-id8466 . -696) (undo-tree-id8467 . -696) (undo-tree-id8468 . -696) (undo-tree-id8469 . -696) (undo-tree-id8470 . -696) (undo-tree-id8471 . -694) (undo-tree-id8472 . -694) (undo-tree-id8473 . -694) (undo-tree-id8474 . -694) (undo-tree-id8475 . -694) (undo-tree-id8476 . -694) (undo-tree-id8477 . -694) (undo-tree-id8478 . -689) (undo-tree-id8479 . -654) (undo-tree-id8480 . -654) (undo-tree-id8481 . -654) (undo-tree-id8482 . -654) (undo-tree-id8483 . -654) (undo-tree-id8484 . -654) (undo-tree-id8485 . -654) (undo-tree-id8486 . -626) (undo-tree-id8487 . -594) (undo-tree-id8488 . -571) (undo-tree-id8489 . -542) (undo-tree-id8490 . -494) (undo-tree-id8491 . -467) (undo-tree-id8492 . -429) (undo-tree-id8493 . -404) (undo-tree-id8494 . -373) (undo-tree-id8495 . -349) (undo-tree-id8496 . -318) (undo-tree-id8497 . -318) (undo-tree-id8498 . -318) (undo-tree-id8499 . -318) (undo-tree-id8500 . -318) (undo-tree-id8501 . -318) (undo-tree-id8502 . -318) (undo-tree-id8503 . -318) (undo-tree-id8504 . -278) (undo-tree-id8505 . -245) (undo-tree-id8506 . -191) (undo-tree-id8507 . -168) (undo-tree-id8508 . -123) (undo-tree-id8509 . -88) (undo-tree-id8510 . -47) (undo-tree-id8511 . -21) (undo-tree-id8512 . -47) (undo-tree-id8513 . -88) (undo-tree-id8514 . -47) (undo-tree-id8515 . -21) (undo-tree-id8516 . -4) (undo-tree-id8517 . -702) (undo-tree-id8518 . -4) (undo-tree-id8519 . -4) (undo-tree-id8520 . -4) (undo-tree-id8521 . -4) (undo-tree-id8522 . -4) (undo-tree-id8523 . -4) (undo-tree-id8524 . -4) (undo-tree-id8525 . -711) (undo-tree-id8526 . -4) (undo-tree-id8527 . -702) (undo-tree-id8528 . -4) (undo-tree-id8529 . -4) (undo-tree-id8530 . -4) (undo-tree-id8531 . -4) (undo-tree-id8532 . -4) (undo-tree-id8533 . -4) (undo-tree-id8534 . -4) (undo-tree-id8535 . -4) (undo-tree-id8536 . -4) (undo-tree-id8537 . -4) (undo-tree-id8538 . -4) (undo-tree-id8539 . -4) (undo-tree-id8540 . -4) (undo-tree-id8541 . -21) (undo-tree-id8542 . -47) (undo-tree-id8543 . -88) (undo-tree-id8544 . -123) (undo-tree-id8545 . -168) (undo-tree-id8546 . -191) (undo-tree-id8547 . -245) (undo-tree-id8548 . -278) (undo-tree-id8549 . -318) (undo-tree-id8550 . -349) (undo-tree-id8551 . -373) (undo-tree-id8552 . -404) (undo-tree-id8553 . -429) (undo-tree-id8554 . -467) (undo-tree-id8555 . -494) (undo-tree-id8556 . -542) (undo-tree-id8557 . -571) (undo-tree-id8558 . -594) (undo-tree-id8559 . -626) (undo-tree-id8560 . -654) (undo-tree-id8561 . -690) (undo-tree-id8562 . -695) (undo-tree-id8563 . -696) (undo-tree-id8564 . -696) (undo-tree-id8565 . -696) (undo-tree-id8566 . -696) (undo-tree-id8567 . -696) (undo-tree-id8568 . -696) (undo-tree-id8569 . -696) (undo-tree-id8570 . -702) (undo-tree-id8571 . -702) (undo-tree-id8572 . -702) (undo-tree-id8573 . -702) (undo-tree-id8574 . -702) (undo-tree-id8575 . -702) (undo-tree-id8576 . -702) (undo-tree-id8577 . -702) 11347) nil (25734 42345 75852 477000) 0 nil] [nil nil ((#("** Recursion

*** INTRODUCTION
*** MARTIN AND THE DRAGON
*** A FUNCTION TO SEARCH FOR ODD NUMBERS
*** MARTIN VISITS THE DRAGON AGAIN
*** A LISP VERSION OF THE FACTORIAL FUNCTION
*** THE DRAGON’S DREAM
*** A RECURSIVE FUNCTION FOR COUNTING SLICES OF BREAD
*** THE THREE RULES OF RECURSION
*** MARTIN DISCOVERS INFINITE RECURSION
*** INFINITE RECURSION IN LISP
*** RECURSION TEMPLATES
*** Single-Test Tail Recursion
*** Augmenting Recursion
*** VARIATIONS ON THE BASIC TEMPLATES
*** List-Consing Recursion
*** Simultaneous Recursion on Several Variables
*** Conditional Augmentation
*** Multiple Recursion
*** TREES AND CAR/CDR RECURSION
*** USING HELPING FUNCTIONS
*** RECURSION IN ART AND LITERATURE
*** 
*** 

" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (1 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 3 12 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 12 13 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 13 14 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 14 15 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 15 16 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 16 17 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 17 18 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 18 30 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 30 31 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 31 32 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-fontified t face org-hide keymap (keymap)) 32 33 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-fontified t face org-hide keymap (keymap)) 33 34 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-fontified t composition (2 1 [9675]) keymap (keymap) face org-level-3) 34 35 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-fontified t keymap (keymap) face org-level-3) 35 55 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t font-lock-fontified t face org-level-3) 55 56 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t face org-level-3) 56 57 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 57 59 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 59 60 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 60 61 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 61 96 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 96 97 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 97 98 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 98 100 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 100 101 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 101 102 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 102 131 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 131 132 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 132 133 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 133 135 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 135 136 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 136 137 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 137 176 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 176 177 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 177 178 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 178 180 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 180 181 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 181 182 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 182 199 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 199 200 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 200 201 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 201 202 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 202 203 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 203 204 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 204 205 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 205 253 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 253 254 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 254 255 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 255 257 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 257 258 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 258 259 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 259 286 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 286 287 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 287 288 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 288 290 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 290 291 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 291 292 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 292 326 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 326 327 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 327 328 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 328 330 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 330 331 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 331 332 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 332 357 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 357 358 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 358 359 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 359 361 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 361 362 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 362 363 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 363 381 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 381 382 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 382 383 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 383 385 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 385 386 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 386 387 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 387 412 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 412 413 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 413 414 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 414 416 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 416 417 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 417 418 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 418 437 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 437 438 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 438 439 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 439 441 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 441 442 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 442 443 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 443 475 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 475 476 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 476 477 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 477 479 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 479 480 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 480 481 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 481 502 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 502 503 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 503 504 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 504 506 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 506 507 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 507 508 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 508 550 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 550 551 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 551 552 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 552 554 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 554 555 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 555 556 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 556 579 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 579 580 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 580 581 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 581 583 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 583 584 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 584 585 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 585 602 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 602 603 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 603 604 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 604 606 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 606 607 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 607 608 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 608 634 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 634 635 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 635 636 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 636 638 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 638 639 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 639 640 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 640 662 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 662 663 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 663 664 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 664 666 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 666 667 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 667 668 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 668 698 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 698 699 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 699 700 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 700 702 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 702 703 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 703 704 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 704 705 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 705 707 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 707 708 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 708 709 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 709 710 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t) 710 711 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 10631) (undo-tree-id8043 . -711) (undo-tree-id8044 . -5) (undo-tree-id8045 . -5) (undo-tree-id8046 . -711) (undo-tree-id8047 . -711) (undo-tree-id8048 . -711) (undo-tree-id8049 . -3) (undo-tree-id8050 . -3) (undo-tree-id8051 . -3) (undo-tree-id8052 . -3) (undo-tree-id8053 . -3) (undo-tree-id8054 . -3) (undo-tree-id8055 . -3) (undo-tree-id8056 . -3) (undo-tree-id8057 . -3) (undo-tree-id8058 . -3) (undo-tree-id8059 . -3) (undo-tree-id8060 . -3) (undo-tree-id8061 . -3) (undo-tree-id8062 . -3) (undo-tree-id8063 . -3) (undo-tree-id8064 . -3) (undo-tree-id8065 . -3) (undo-tree-id8066 . -3) (undo-tree-id8067 . -3) (undo-tree-id8068 . -3) (undo-tree-id8069 . -3) (undo-tree-id8070 . -3) (undo-tree-id8071 . -3) (undo-tree-id8072 . -3) (undo-tree-id8073 . -5) (undo-tree-id8074 . -5) (undo-tree-id8075 . -5) (undo-tree-id8076 . -5) (undo-tree-id8077 . -5) (undo-tree-id8078 . -5) (undo-tree-id8079 . -5) (undo-tree-id8080 . -13) (undo-tree-id8081 . -13) (undo-tree-id8082 . -13) (undo-tree-id8083 . -13) (undo-tree-id8084 . -13) (undo-tree-id8085 . -13) (undo-tree-id8086 . -13) (undo-tree-id8087 . -18) (undo-tree-id8088 . -18) (undo-tree-id8089 . -18) (undo-tree-id8090 . -18) (undo-tree-id8091 . -18) (undo-tree-id8092 . -18) (undo-tree-id8093 . -18) (undo-tree-id8094 . -35) (undo-tree-id8095 . -61) (undo-tree-id8096 . -102) (undo-tree-id8097 . -137) (undo-tree-id8098 . -182) (undo-tree-id8099 . -205) (undo-tree-id8100 . -259) (undo-tree-id8101 . -292) (undo-tree-id8102 . -332) (undo-tree-id8103 . -363) (undo-tree-id8104 . -387) (undo-tree-id8105 . -418) (undo-tree-id8106 . -443) (undo-tree-id8107 . -481) (undo-tree-id8108 . -508) (undo-tree-id8109 . -556) (undo-tree-id8110 . -585) (undo-tree-id8111 . -608) (undo-tree-id8112 . -640) (undo-tree-id8113 . -668) (undo-tree-id8114 . -703) (undo-tree-id8115 . -703) (undo-tree-id8116 . -703) (undo-tree-id8117 . -703) (undo-tree-id8118 . -703) (undo-tree-id8119 . -703) (undo-tree-id8120 . -703) (undo-tree-id8121 . -708) (undo-tree-id8122 . -710) (undo-tree-id8123 . -710) (undo-tree-id8124 . -710) (undo-tree-id8125 . -710) (undo-tree-id8126 . -710) (undo-tree-id8127 . -710) (undo-tree-id8128 . -710) (undo-tree-id8129 . -710) (undo-tree-id8130 . -710) (undo-tree-id8131 . -710) (undo-tree-id8132 . -710) (undo-tree-id8133 . -710) (undo-tree-id8134 . -710) (undo-tree-id8135 . -710) (undo-tree-id8136 . -708) (undo-tree-id8137 . -708) (undo-tree-id8138 . -708) (undo-tree-id8139 . -708) (undo-tree-id8140 . -708) (undo-tree-id8141 . -708) (undo-tree-id8142 . -708) (undo-tree-id8143 . -703) (undo-tree-id8144 . -668) (undo-tree-id8145 . -668) (undo-tree-id8146 . -668) (undo-tree-id8147 . -668) (undo-tree-id8148 . -668) (undo-tree-id8149 . -668) (undo-tree-id8150 . -668) (undo-tree-id8151 . -640) (undo-tree-id8152 . -608) (undo-tree-id8153 . -585) (undo-tree-id8154 . -556) (undo-tree-id8155 . -508) (undo-tree-id8156 . -481) (undo-tree-id8157 . -443) (undo-tree-id8158 . -418) (undo-tree-id8159 . -387) (undo-tree-id8160 . -363) (undo-tree-id8161 . -332) (undo-tree-id8162 . -332) (undo-tree-id8163 . -332) (undo-tree-id8164 . -332) (undo-tree-id8165 . -332) (undo-tree-id8166 . -332) (undo-tree-id8167 . -332) (undo-tree-id8168 . -332) (undo-tree-id8169 . -292) (undo-tree-id8170 . -259) (undo-tree-id8171 . -205) (undo-tree-id8172 . -182) (undo-tree-id8173 . -137) (undo-tree-id8174 . -102) (undo-tree-id8175 . -61) (undo-tree-id8176 . -35) (undo-tree-id8177 . -61) (undo-tree-id8178 . -102) (undo-tree-id8179 . -61) (undo-tree-id8180 . -35) (undo-tree-id8181 . -18) (undo-tree-id8182 . -13) (undo-tree-id8183 . -13) (undo-tree-id8184 . -13) (undo-tree-id8185 . -13) (undo-tree-id8186 . -13) (undo-tree-id8187 . -13) (undo-tree-id8188 . -13) (undo-tree-id8189 . -5) (undo-tree-id8190 . -5) (undo-tree-id8191 . -5) (undo-tree-id8192 . -5) (undo-tree-id8193 . -5) (undo-tree-id8194 . -5) (undo-tree-id8195 . -5) (undo-tree-id8196 . 699) (undo-tree-id8197 . -710) (undo-tree-id8198 . -5) (undo-tree-id8199 . -5) (undo-tree-id8200 . -5) (undo-tree-id8201 . -5) (undo-tree-id8202 . -5) (undo-tree-id8203 . -5) (undo-tree-id8204 . -5) (undo-tree-id8205 . -5) (undo-tree-id8206 . -5) 10636) ((10631 . 11342)) (25734 42320 68048 399000) 0 nil])
([nil nil ((#("Recursion" 0 8 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 8 9 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t)) . 12533) (undo-tree-id7626 . -9) (undo-tree-id7627 . -9) (undo-tree-id7628 . -9) (undo-tree-id7629 . -9) (undo-tree-id7630 . -9) (undo-tree-id7631 . -9) (undo-tree-id7632 . -9) (undo-tree-id7633 . -9) (undo-tree-id7634 . -9) (undo-tree-id7635 . -9) (undo-tree-id7636 . -9) (undo-tree-id7637 . -9) (undo-tree-id7638 . -9) (undo-tree-id7639 . -9) (undo-tree-id7640 . -9) (undo-tree-id7641 . -9) (undo-tree-id7642 . -9) (undo-tree-id7643 . -9) (undo-tree-id7644 . -9) (undo-tree-id7645 . -9) (undo-tree-id7646 . -9) (undo-tree-id7647 . -9) (undo-tree-id7648 . -8) (undo-tree-id7649 . -8) (undo-tree-id7650 . -8) (undo-tree-id7651 . -8) (undo-tree-id7652 . -8) (undo-tree-id7653 . -8) (undo-tree-id7654 . -8) (undo-tree-id7655 . -8) (undo-tree-id7656 . -8) (undo-tree-id7657 . -8) (undo-tree-id7658 . -8) (undo-tree-id7659 . -8) (undo-tree-id7660 . -8) (undo-tree-id7661 . -8) (undo-tree-id7662 . -8) (undo-tree-id7663 . -9) (undo-tree-id7664 . -9) (undo-tree-id7665 . -9) (undo-tree-id7666 . -9) (undo-tree-id7667 . -9) (undo-tree-id7668 . -9) (undo-tree-id7669 . -9) (undo-tree-id7670 . -9) (undo-tree-id7671 . -9) (undo-tree-id7672 . -9) (undo-tree-id7673 . -9) (undo-tree-id7674 . -9) (undo-tree-id7675 . -9) (undo-tree-id7676 . -9) (undo-tree-id7677 . -9) (undo-tree-id7678 . -8) (undo-tree-id7679 . -8) (undo-tree-id7680 . -8) (undo-tree-id7681 . -8) (undo-tree-id7682 . -8) (undo-tree-id7683 . -8) (undo-tree-id7684 . -8) (undo-tree-id7685 . -8) (undo-tree-id7686 . -8) (undo-tree-id7687 . -8) (undo-tree-id7688 . -8) (undo-tree-id7689 . -8) (undo-tree-id7690 . -8) (undo-tree-id7691 . -8) (undo-tree-id7692 . -8) (undo-tree-id7693 . -9) (undo-tree-id7694 . -9) (undo-tree-id7695 . -9) (undo-tree-id7696 . -9) (undo-tree-id7697 . -9) (undo-tree-id7698 . -9) (undo-tree-id7699 . -9) (undo-tree-id7700 . -9) (undo-tree-id7701 . -9) (undo-tree-id7702 . -9) (undo-tree-id7703 . -9) (undo-tree-id7704 . -9) (undo-tree-id7705 . -9) (undo-tree-id7706 . -9) (undo-tree-id7707 . -9) (undo-tree-id7708 . -9) (undo-tree-id7709 . -9) (undo-tree-id7710 . -9) (undo-tree-id7711 . -9) (undo-tree-id7712 . -9) (undo-tree-id7713 . -9) (undo-tree-id7714 . -9) (undo-tree-id7715 . -9) (undo-tree-id7716 . -9) (undo-tree-id7717 . -9) (undo-tree-id7718 . -9) (undo-tree-id7719 . -9) (undo-tree-id7720 . -9) (undo-tree-id7721 . -9) (undo-tree-id7722 . -9) (undo-tree-id7723 . -9) (undo-tree-id7724 . -9) (undo-tree-id7725 . -9) (undo-tree-id7726 . -9) (undo-tree-id7727 . -9) (undo-tree-id7728 . -9) (undo-tree-id7729 . -9)) ((12533 . 12542)) (25734 42132 18729 461000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 10630) (undo-tree-id8409 . -1) (undo-tree-id8410 . -1)) nil (25734 42345 73586 715000) 0 nil])
nil
nil
([nil nil ((11833 . 11838) (#("  " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 11833) (11835 . 11835) 11833 (11830 . 11833) (11826 . 11830) (11821 . 11826) (#("x" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -11821) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) (undo-tree-id8319 . -1) (undo-tree-id8320 . -1) (undo-tree-id8321 . -1) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1) (undo-tree-id8340 . -1) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) (undo-tree-id8349 . -1) (undo-tree-id8350 . -1) (undo-tree-id8351 . -1) (undo-tree-id8352 . -1) (undo-tree-id8353 . -1) (undo-tree-id8354 . -1) (undo-tree-id8355 . -1) (undo-tree-id8356 . -1) (undo-tree-id8357 . -1) (undo-tree-id8358 . -1) (undo-tree-id8359 . -1) (undo-tree-id8360 . -1) (undo-tree-id8361 . -1) (undo-tree-id8362 . -1) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (undo-tree-id8367 . -1) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -11822) (undo-tree-id8368 . -1) (undo-tree-id8369 . -1) (undo-tree-id8370 . -1) (undo-tree-id8371 . -1) (undo-tree-id8372 . -1) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) (undo-tree-id8389 . -1) (undo-tree-id8390 . -1) (undo-tree-id8391 . -1) (undo-tree-id8392 . -1) (undo-tree-id8393 . -1) (undo-tree-id8394 . -1) (undo-tree-id8395 . -1) (undo-tree-id8396 . -1) (undo-tree-id8397 . -1) (undo-tree-id8398 . -1) (undo-tree-id8399 . -1) (undo-tree-id8400 . -1) (undo-tree-id8401 . -1) (undo-tree-id8402 . -1) (undo-tree-id8403 . -1) (undo-tree-id8404 . -1) (undo-tree-id8405 . -1) (undo-tree-id8406 . -1) (undo-tree-id8407 . -1) (undo-tree-id8408 . -1) 11823 (11820 . 11823)) nil (25734 42345 73579 485000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 11834)) nil (25734 42345 73483 771000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 8546) (t 25734 42345 147154 642000)) nil (25736 2070 39166 896000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10628)) nil (25736 2070 39165 449000) 0 nil])
([nil nil ((11832 . 11836) (11831 . 11832) 11819) nil (25736 2070 39164 56000) 0 nil])
([nil nil ((11836 . 11841) 11835) nil (25736 2070 39162 583000) 0 nil])
([nil nil ((11841 . 11846) 11840) nil (25736 2070 39161 311000) 0 nil])
([nil nil ((11846 . 11851) 11845) nil (25736 2070 39160 203000) 0 nil])
([nil nil ((11851 . 11856) 11850) nil (25736 2070 39159 12000) 0 nil])
([nil nil ((11856 . 11861) 11855) nil (25736 2070 39157 654000) 0 nil])
([nil nil ((11861 . 11866) 11860) nil (25736 2070 39156 554000) 0 nil])
([nil nil ((11866 . 11871) 11865) nil (25736 2070 39155 594000) 0 nil])
([nil nil ((11871 . 11876) 11870) nil (25736 2070 39154 490000) 0 nil])
([nil nil ((11876 . 11881) 11875) nil (25736 2070 39153 250000) 0 nil])
([nil nil ((11881 . 11886) 11880) nil (25736 2070 39151 918000) 0 nil])
([nil nil ((11886 . 11891) 11885) nil (25736 2070 39149 922000) 0 nil])
([nil nil ((11891 . 11896) 11890) nil (25736 2070 39144 923000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11852 . 11853) (nil fontified nil 11836 . 11853) (11836 . 11853) 11835 (t 25736 2070 121884 125000)) nil (25736 2222 976948 261000) 0 nil])
([nil nil ((11853 . 11854)) nil (25736 2222 976946 922000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 11854) (undo-tree-id0 . 1)) nil (25736 2222 976944 771000) 0 nil])
([nil nil ((11857 . 11858)) nil (25736 2222 976917 252000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11877 . 11878) (nil fontified nil 11859 . 11878) (11859 . 11878) 11858 (t 25736 2223 31204 629000)) nil (25736 2525 527391 706000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11899 . 11900) (nil fontified nil 11883 . 11900) (11883 . 11900) 11882) nil (25736 2525 527390 199000) 0 nil])
([nil nil ((#(" " 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 11858) (undo-tree-id92 . 1) (undo-tree-id93 . -1)) nil (25736 2525 527388 578000) 0 nil])
([nil nil ((11904 . 11905)) nil (25736 2525 527386 504000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11928 . 11929) (nil fontified nil 11905 . 11929) (11905 . 11929) 11904) nil (25736 2525 527385 635000) 0 nil])
([nil nil ((#(" " 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 11904) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1)) nil (25736 2525 527383 867000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11965 . 11966) (nil fontified nil 11933 . 11966) (11933 . 11966) 11932) nil (25736 2525 527380 969000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12003 . 12004) (nil fontified nil 11971 . 12004) (11971 . 12004) 11970) nil (25736 2525 527379 653000) 0 nil])
([nil nil ((11853 . 11854) 11836) nil (25736 2525 527378 243000) 0 nil])
([nil nil ((#("*** CHARACTER STRINGS
" 0 1 (keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 1 2 (keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 3 4 (face org-level-3 keymap (keymap) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 4 20 (face org-level-3 fontified t wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent))) 20 21 (face org-level-3 rear-nonsticky t fontified t wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent))) 21 22 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 11832) (undo-tree-id15 . -21) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -21) (undo-tree-id23 . -21) (undo-tree-id24 . -21) (undo-tree-id25 . -21) (undo-tree-id26 . -21) (undo-tree-id27 . -21) (undo-tree-id28 . -21) (undo-tree-id29 . -20) (undo-tree-id30 . -20) (undo-tree-id31 . -20) (undo-tree-id32 . -20) (undo-tree-id33 . -20) (undo-tree-id34 . -20) (undo-tree-id35 . -20) (undo-tree-id36 . -20) (undo-tree-id37 . -20) (undo-tree-id38 . -20) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -22) (undo-tree-id47 . -22) (undo-tree-id48 . -22) (undo-tree-id49 . -22) (undo-tree-id50 . -22) (undo-tree-id51 . -22) (undo-tree-id52 . -22) (undo-tree-id53 . -22) (undo-tree-id54 . -22) (undo-tree-id55 . -22) (undo-tree-id56 . -22) (undo-tree-id57 . -22) (undo-tree-id58 . -22) (undo-tree-id59 . -22) (undo-tree-id60 . -22) (undo-tree-id61 . -22) (undo-tree-id62 . -22) (undo-tree-id63 . -22) (undo-tree-id64 . -22) (undo-tree-id65 . -22) (undo-tree-id66 . -22) (undo-tree-id67 . -22) (undo-tree-id68 . -22) (undo-tree-id69 . -22) (undo-tree-id70 . -22) (undo-tree-id71 . -22) (undo-tree-id72 . -22) (undo-tree-id73 . -22) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -4) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -4) (undo-tree-id87 . -4) (undo-tree-id88 . -4) 11836) nil (25736 2525 527592 398000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11832) (undo-tree-id390 . 1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1)) nil (25736 2545 769802 550000) 0 nil] [nil nil ((#("
**" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 3 (keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 11832) (undo-tree-id1 . 2) (undo-tree-id2 . 3) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1)) ((11832 . 11835)) (25736 2525 527322 63000) 0 nil])
([nil nil ((11856 . 11900) (#("src" 0 3 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 11856) (undo-tree-id152 . -1) (undo-tree-id153 . -3) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -2) (undo-tree-id265 . -2) (undo-tree-id266 . -2) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -3) (undo-tree-id273 . -3) (undo-tree-id274 . -3) (undo-tree-id275 . -3) (undo-tree-id276 . -3) (undo-tree-id277 . -3) (undo-tree-id278 . -3) (undo-tree-id279 . -3) 11859 (11857 . 11859) (#("c" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -11857) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (#("r" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -11858) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) 11859 (11856 . 11859) (11855 . 11856) 11836) nil (25736 2545 769781 43000) 0 nil])
nil
([nil nil ((11869 . 11872) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -11869) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) 11870 (11867 . 11870)) nil (25736 2545 769338 81000) 0 nil])
([nil nil ((#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -11894) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) 11896 (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 11893) (undo-tree-id116 . -1) (undo-tree-id117 . -2) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (11895 . 11898) 11894) nil (25736 2545 769320 195000) 0 nil])
([nil nil ((#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -11895) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) 11897 (11894 . 11897) 11894) nil (25736 2545 769302 841000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11913 . 11914) (nil fontified nil 11893 . 11914) (11893 . 11914) (t 25736 2545 792089 10000)) nil (25736 2628 164936 769000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11953 . 11954) (nil fontified nil 11915 . 11954) (11915 . 11954)) nil (25736 2628 164934 352000) 0 nil])
([nil nil ((11893 . 11895) (11915 . 11917) 11893 (11954 . 11955)) nil (25736 2628 164929 435000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11999 . 12000) (nil fontified nil 11959 . 12000) (11959 . 12000) (t 25736 2628 184698 634000)) nil (25736 2640 931006 120000) 0 nil])
([nil nil ((11855 . 11856) (t 25736 2640 957955 493000) 11845) nil (25736 2686 489064 821000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11907 . 11908) (nil fontified nil 11873 . 11908) (nil fontified nil 11856 . 11873) (11856 . 11908)) nil (25736 2686 489062 992000) 0 nil])
([nil nil ((11872 . 11873) (#("
" 0 1 (fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -11872) (undo-tree-id403 . -1) 11856) nil (25736 2686 489349 173000) 0 nil])
([nil nil ((11856 . 11857) (#("t" 0 1 (fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 11856)) nil (25736 2689 831855 445000) 0 nil] [nil nil ((11856 . 11857) (#("t" 0 1 (fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 11856)) ((11856 . 11857) (#("U" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 11856) (undo-tree-id404 . 1)) (25736 2686 489044 945000) 0 nil])
([nil nil ((11948 . 11950) (11970 . 11971) (11972 . 11973) (12012 . 12014) 11946 (t 25736 2689 854590 983000)) nil (25736 2700 772382 167000) 0 nil])
nil
([nil nil ((#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 11974) 11946) nil (25736 2700 772379 608000) 0 nil])
([nil nil ((#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 11948) 11946) nil (25736 2700 772373 882000) 0 nil])
([nil nil ((11908 . 11909) (t 25736 2700 791591 440000) 11907) nil (25736 2848 304292 324000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12021 . 12022) (nil fontified nil 11983 . 12022) (nil fontified nil 11909 . 11983) (11909 . 12022)) nil (25736 2848 304291 248000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12355 . 12356) (nil fontified nil 12314 . 12356) (nil fontified nil 12269 . 12314) (nil fontified nil 12223 . 12269) (nil fontified nil 12185 . 12223) (nil fontified nil 12170 . 12185) (12170 . 12356)) nil (25736 2848 304289 973000) 0 nil])
([nil nil ((12062 . 12064) (12084 . 12085) (12086 . 12087) (12126 . 12127) (12128 . 12129) (12170 . 12172) (12185 . 12187) (12223 . 12225) (12269 . 12271) (12314 . 12318) 12060) nil (25736 2848 304288 217000) 0 nil])
([nil nil ((12195 . 12197) 12060) nil (25736 2848 304286 252000) 0 nil])
([nil nil ((12237 . 12239) 12060) nil (25736 2848 304285 399000) 0 nil])
([nil nil ((12287 . 12289) 12060) nil (25736 2848 304284 504000) 0 nil])
([nil nil ((#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12062) 12060) nil (25736 2848 304283 602000) 0 nil])
([nil nil ((#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12086) 12060) nil (25736 2848 304282 721000) 0 nil])
([nil nil ((#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12128) 12060) nil (25736 2848 304281 386000) 0 nil])
([nil nil ((12022 . 12023) 12021) nil (25736 2848 304279 615000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12162 . 12163) (nil fontified nil 12095 . 12163) (nil fontified nil 12023 . 12095) (12023 . 12163)) nil (25736 2848 304274 811000) 0 nil])
([nil nil ((#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -12516) (undo-tree-id405 . -2) (undo-tree-id406 . -2) (undo-tree-id407 . -2) (undo-tree-id408 . -2) (undo-tree-id409 . -2) (undo-tree-id410 . -2) (undo-tree-id411 . -2) (undo-tree-id412 . -2) (undo-tree-id413 . -2) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (undo-tree-id421 . -2) (undo-tree-id422 . -2) (undo-tree-id423 . -2) (undo-tree-id424 . -2) (undo-tree-id425 . -2) (undo-tree-id426 . -2) (undo-tree-id427 . -2) (undo-tree-id428 . -2) 12518 (12515 . 12518) (t 25736 2848 323948 759000) 12514) nil (25736 2874 670289 653000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12579 . 12580) (nil fontified nil 12557 . 12580) (nil fontified nil 12516 . 12557) (12516 . 12580)) nil (25736 2874 670801 648000) 0 nil])
([nil nil ((12203 . 12205) (12225 . 12226) (12227 . 12228) (12267 . 12268) (12269 . 12270) (12311 . 12313) (12328 . 12330) (12374 . 12376) (12420 . 12421) (12424 . 12425) (12469 . 12470) (12473 . 12474) (12516 . 12518) (12557 . 12559) 12201) nil (25736 3102 749249 738000) 0 nil] [nil nil ((nil rear-nonsticky nil 12602 . 12603) (nil fontified nil 12580 . 12603) (nil fontified nil 12539 . 12580) (12539 . 12603) 12538) ((#("(format t \"From ~S to ~S in ~S minutes!\"
’boston ’(new york) 55)" 0 11 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 11 39 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 39 41 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 41 63 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 63 64 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky nil fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 12539) (undo-tree-id429 . -63) (undo-tree-id430 . -63) (undo-tree-id431 . 1) (undo-tree-id432 . -64) (undo-tree-id433 . 64) (undo-tree-id434 . -1) (undo-tree-id435 . -63) (undo-tree-id436 . -63) (nil rear-nonsticky t 12602 . 12603)) (25736 2874 670258 904000) 0 nil])
([nil nil ((#("  " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12203) 12201) nil (25736 3102 749245 413000) 0 nil])
nil
([nil nil ((#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12227) 12201) nil (25736 3102 749243 842000) 0 nil])
([nil nil ((#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12269) 12201) nil (25736 3102 749242 333000) 0 nil])
([nil nil ((#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12313) 12201) nil (25736 3102 749241 74000) 0 nil])
([nil nil ((#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12332) 12201) nil (25736 3102 749239 131000) 0 nil])
([nil nil ((#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12374) 12201) nil (25736 3102 749237 546000) 0 nil])
([nil nil ((#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12424) 12201) nil (25736 3102 749236 74000) 0 nil])
([nil nil ((#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12473) 12201) nil (25736 3102 749234 803000) 0 nil])
([nil nil ((12569 . 12570) (#("’" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 12569)) nil (25736 3102 749233 454000) 0 nil])
([nil nil ((12589 . 12591) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 12588) (undo-tree-id448 . -2) (12588 . 12591) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 12587) (undo-tree-id449 . -2) (12587 . 12590) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 12586) (undo-tree-id450 . -2) (12586 . 12589) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 12585) (undo-tree-id451 . -2) (12587 . 12588) (12584 . 12587) 12583) nil (25736 3102 749231 206000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12649 . 12650) (nil fontified nil 12608 . 12650) (nil fontified nil 12585 . 12608) (12585 . 12650)) nil (25736 3102 749223 254000) 0 nil])
([nil nil ((#("  " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -12201) (undo-tree-id437 . -2) (undo-tree-id438 . -2) (undo-tree-id439 . -2) (undo-tree-id440 . -2) (undo-tree-id441 . -2) (undo-tree-id442 . -2) (undo-tree-id443 . -2) (undo-tree-id444 . -2) (undo-tree-id445 . -2) (undo-tree-id446 . -2) (undo-tree-id447 . -2) 12203 (12206 . 12208) (12228 . 12229) (12230 . 12231) (12270 . 12272) (12316 . 12318) (12331 . 12332) (12335 . 12336) (12373 . 12375) (12427 . 12429) (12472 . 12473) (12476 . 12477) (12519 . 12521) (12564 . 12566) (12588 . 12590) (12611 . 12613) 12201 (12200 . 12203) 12185) nil (25736 3102 749219 81000) 0 nil])
([nil nil ((#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12204) (#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12228) (#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12274) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12318) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12321) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12337) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12342) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12381) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12386) (#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12433) (#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12488) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12533) (12578 . 12581) (12582 . 12585) (12631 . 12632) (12633 . 12634) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12679) 12201) nil (25736 3102 749185 199000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12701 . 12702) (nil fontified nil 12667 . 12702) (12667 . 12702) 12668 (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12667) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) 12668 (t 25736 3102 821419 444000)) nil (25736 3246 651763 349000) 0 nil])
([nil nil ((12676 . 12677) (#("’" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 12676) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1)) nil (25736 3246 651759 216000) 0 nil])
([nil nil ((12689 . 12690) (#("’" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 12689)) nil (25736 3246 651753 877000) 0 nil])
([nil nil ((12164 . 12166) (12163 . 12164) 12162) nil (25736 3246 651752 999000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12229 . 12230) (nil fontified nil 12164 . 12230) (12164 . 12230)) nil (25736 3246 651752 56000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12878 . 12879) (nil fontified nil 12832 . 12879) (nil fontified nil 12788 . 12832) (nil fontified nil 12772 . 12788) (12772 . 12879)) nil (25736 3246 651750 921000) 0 nil])
([nil nil ((12273 . 12275) (12295 . 12296) (12297 . 12298) (12337 . 12338) (12339 . 12340) (12381 . 12382) (12383 . 12384) (12398 . 12399) (12402 . 12403) (12440 . 12441) (12444 . 12445) (12490 . 12491) (12494 . 12495) (12539 . 12540) (12543 . 12544) (12586 . 12587) (12588 . 12589) (12629 . 12631) (12663 . 12665) (12692 . 12694) (12736 . 12738) (12772 . 12774) (12788 . 12790) (12832 . 12836) 12270) nil (25736 3246 651748 931000) 0 nil])
([nil nil ((12818 . 12820) 12270) nil (25736 3246 651739 170000) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12759) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1)) nil (25736 3246 651737 346000) 0 nil])
([nil nil ((#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -12915) (undo-tree-id452 . -2) (undo-tree-id453 . -2) (undo-tree-id454 . -2) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . -2) (undo-tree-id458 . -2) (undo-tree-id459 . -2) (undo-tree-id460 . -2) (undo-tree-id461 . -2) (undo-tree-id462 . -2) 12917 (12914 . 12917) 12863) nil (25736 3246 651719 562000) 0 nil])
([nil nil ((#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12273) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12297) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12300) (#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12341) (#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12389) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12406) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12411) (#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12450) (#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12506) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12553) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12558) (#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12602) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12657) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12683) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12686) (#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12710) 12270) nil (25736 3246 651698 5000) 0 nil])
([nil nil ((12924 . 12968) (#("src" 0 3 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12924) (undo-tree-id514 . -3) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -2) (undo-tree-id540 . -2) (undo-tree-id541 . -2) (undo-tree-id542 . -2) (undo-tree-id543 . -2) (undo-tree-id544 . -2) (undo-tree-id545 . -2) (undo-tree-id546 . -2) (undo-tree-id547 . -3) (undo-tree-id548 . -3) (undo-tree-id549 . -3) (undo-tree-id550 . -3) (undo-tree-id551 . -3) (undo-tree-id552 . -3) (undo-tree-id553 . -3) (undo-tree-id554 . -3) 12927 (12924 . 12927) (12923 . 12924) (t 25736 3246 721787 746000) 12906) nil (25736 3383 892609 721000) 0 nil])
([nil nil ((12935 . 12940)) nil (25736 3383 892585 574000) 0 nil])
([nil nil ((#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -12961) (undo-tree-id502 . -2) (undo-tree-id503 . -2) (undo-tree-id504 . -2) (undo-tree-id505 . -2) (undo-tree-id506 . -2) (undo-tree-id507 . -2) (undo-tree-id508 . -2) (undo-tree-id509 . -2) (undo-tree-id510 . -2) (undo-tree-id511 . -2) (undo-tree-id512 . -2) 12963 (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 12964) (undo-tree-id513 . -2) 12961 (12960 . 12963) 12939) nil (25736 3383 892581 153000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13092 . 13093) (nil fontified nil 13081 . 13093) (nil fontified nil 13038 . 13081) (nil fontified nil 13020 . 13038) (nil fontified nil 12981 . 13020) (nil fontified nil 12961 . 12981) (12961 . 13093) (t 25736 3383 961056 670000)) nil (25736 3408 57163 637000) 0 nil])
([nil nil ((12961 . 12963) (12981 . 12985) (13020 . 13024) (13038 . 13044) (13081 . 13095) 12961) nil (25736 3408 57382 385000) 0 nil])
([nil nil ((#("  " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -12961) (undo-tree-id556 . -2) (undo-tree-id557 . -2) (undo-tree-id558 . -2) (undo-tree-id559 . -2) (undo-tree-id560 . -2) (undo-tree-id561 . -2) (undo-tree-id562 . -2) (undo-tree-id563 . -2) (undo-tree-id564 . -2) (undo-tree-id565 . -2) (undo-tree-id566 . -2) 12963 (12960 . 12963) 12949) nil (25736 3413 237854 231000) 0 nil] [nil nil ((13122 . 13123)) ((#("p" 0 1 (face (font-lock-warning-face org-block) font-lock-multiline t src-block t help-echo "Hidden behind deeper element; move to another line?" font-lock-fontified t fontified t wrap-prefix #("                    " 0 6 (face org-indent) 6 20 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 13122) (undo-tree-id555 . -1)) (25736 3408 57155 111000) 0 nil])
([nil nil ((13165 . 13209) (#("src" 0 3 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 13165) (undo-tree-id619 . -3) (undo-tree-id620 . -1) 13168 (13165 . 13168) (#("t" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -13165) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (#("a" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -13166) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (#("s" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -13167) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (#("a" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -13168) (undo-tree-id629 . -1) (#("a" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -13169) (undo-tree-id630 . -1) (#("a" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -13170) (undo-tree-id631 . -1) 13171 (13165 . 13171) (13164 . 13165) (t 25736 3413 258535 149000) 13140) nil (25736 3574 938601 475000) 0 nil])
nil
([nil nil ((13176 . 13181)) nil (25736 3574 938592 711000) 0 nil])
([nil nil ((#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -13178) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) 13179) nil (25736 3574 938590 577000) 0 nil])
([nil nil ((13179 . 13180)) nil (25736 3574 938567 314000) 0 nil])
([nil nil ((#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -13202) (undo-tree-id567 . -2) (undo-tree-id568 . -2) (undo-tree-id569 . -2) (undo-tree-id570 . -2) (undo-tree-id571 . -2) (undo-tree-id572 . -2) (undo-tree-id573 . -2) (undo-tree-id574 . -2) (undo-tree-id575 . -2) (undo-tree-id576 . -2) (undo-tree-id577 . -2) 13204 (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 13205) (undo-tree-id578 . -2) 13202 (13201 . 13204) 13179) nil (25736 3574 938565 321000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13340 . 13341) (nil fontified nil 13308 . 13341) (nil fontified nil 13271 . 13308) (nil fontified nil 13236 . 13271) (nil fontified nil 13219 . 13236) (nil fontified nil 13202 . 13219) (13202 . 13341)) nil (25736 3574 938429 63000) 0 nil])
([nil nil ((13203 . 13205) (13220 . 13222) (13237 . 13239) (13272 . 13274) (13309 . 13311) 13202 (13201 . 13202) 13197) nil (25736 3574 938426 898000) 0 nil])
([nil nil ((13224 . 13226) (13241 . 13245) (13243 . 13246) (13278 . 13280) (13280 . 13284) (13317 . 13323) 13202) nil (25736 3596 445629 766000) 0 nil])
([nil nil ((13423 . 13427) (13422 . 13423) (t 25736 3574 954320 257000) 13407) nil (25736 3699 552800 633000) 0 nil] [nil nil ((nil rear-nonsticky nil 13370 . 13371) (nil fontified nil 13338 . 13371) (nil fontified nil 13301 . 13338) (nil fontified nil 13266 . 13301) (nil fontified nil 13249 . 13266) (nil fontified nil 13232 . 13249) (13232 . 13371) 13231 (t 25736 3574 954320 257000)) ((#("(defun riddle ()
(if (yes-or-no-p
\"Do you seek Zen enlightenment? \")
(format t \"Then do not ask for it!\")
(format t \"You have found it.\")))" 0 1 (src-block t help-echo nil face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 1 6 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 6 7 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 7 13 (src-block t help-echo nil face (font-lock-function-name-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 13 14 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 14 15 (src-block t help-echo nil face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 15 16 (src-block t help-echo nil face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 16 17 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 17 18 (src-block t help-echo nil face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 18 20 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 20 21 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 21 22 (src-block t help-echo nil face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 22 34 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 34 67 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 67 68 (src-block t help-echo nil face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 68 69 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 69 70 (src-block t help-echo nil face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 70 79 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 79 104 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 104 105 (src-block t help-echo nil face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 105 106 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 106 107 (src-block t help-echo nil face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 107 116 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 116 136 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 136 137 (src-block t help-echo nil face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 137 138 (src-block t help-echo nil face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 138 139 (src-block t help-echo nil face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky nil fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 13232) (undo-tree-id632 . -138) (undo-tree-id633 . -138) (undo-tree-id634 . 1) (undo-tree-id635 . -139) (undo-tree-id636 . 139) (undo-tree-id637 . -1) (undo-tree-id638 . -138) (undo-tree-id639 . -138) (undo-tree-id640 . -138) (nil rear-nonsticky t 13370 . 13371)) (25736 3596 445060 163000) 0 nil])
([nil nil ((13424 . 13468) (#("src" 0 3 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 13424) (undo-tree-id664 . -3) (undo-tree-id665 . -1) (undo-tree-id666 . -3) 13427 (13424 . 13427) (#("c" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -13424) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (#("r" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -13425) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) 13426 (13424 . 13426) (#("r" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -13424) (undo-tree-id673 . -1) (undo-tree-id674 . -1) 13425 (13424 . 13425)) nil (25736 3699 552798 24000) 0 nil])
nil
([nil nil ((13435 . 13440)) nil (25736 3699 552789 87000) 0 nil])
([nil nil ((13463 . 13465) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 13462) (undo-tree-id641 . -2) (undo-tree-id642 . -2) (undo-tree-id643 . -2) (undo-tree-id644 . -2) (undo-tree-id645 . -2) (undo-tree-id646 . -2) (undo-tree-id647 . -2) (undo-tree-id648 . -2) (undo-tree-id649 . -2) (undo-tree-id650 . -2) (undo-tree-id651 . -2) (13462 . 13465) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 13461) (undo-tree-id652 . -2) (undo-tree-id653 . -2) (undo-tree-id654 . -2) (undo-tree-id655 . -2) (undo-tree-id656 . -2) (undo-tree-id657 . -2) (undo-tree-id658 . -2) (undo-tree-id659 . -2) (undo-tree-id660 . -2) (undo-tree-id661 . -2) (undo-tree-id662 . -2) (13463 . 13464) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 13464) (undo-tree-id663 . -2) 13461 (13460 . 13463) 13439) nil (25736 3699 552783 564000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13550 . 13551) (nil fontified nil 13546 . 13551) (nil fontified nil 13515 . 13546) (nil fontified nil 13494 . 13515) (nil fontified nil 13423 . 13494) (13423 . 13551) (t 25736 3699 623968 850000)) nil (25736 3880 452626 15000) 0 nil])
([nil nil ((13552 . 13553) (13551 . 13552) 13550) nil (25736 3880 452624 603000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13978 . 13979) (nil fontified nil 13935 . 13979) (nil fontified nil 13855 . 13935) (nil fontified nil 13778 . 13855) (nil fontified nil 13700 . 13778) (nil fontified nil 13625 . 13700) (nil fontified nil 13552 . 13625) (13552 . 13979)) nil (25736 3880 452623 524000) 0 nil])
([nil nil ((13552 . 13553) (13551 . 13552) 13546) nil (25736 3880 452621 963000) 0 nil])
([nil nil ((#("o" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 13552) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1)) nil (25736 3880 452620 6000) 0 nil])
([nil nil ((#("(just like LET)" 0 15 (fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 13593) (undo-tree-id694 . -14) (undo-tree-id695 . -14) (undo-tree-id696 . -14) (undo-tree-id697 . -3) (undo-tree-id698 . 1) (undo-tree-id699 . -15) (undo-tree-id700 . 15) (undo-tree-id701 . -1) (undo-tree-id702 . -15) (undo-tree-id703 . -14) (undo-tree-id704 . -14) (undo-tree-id705 . -14) (undo-tree-id706 . -14) (undo-tree-id707 . -14) (undo-tree-id708 . -14) (undo-tree-id709 . -14) (undo-tree-id710 . -14) (undo-tree-id711 . -14) 13607) nil (25736 3880 452604 929000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 13593) (undo-tree-id693 . 1)) nil (25736 3880 452594 73000) 0 nil])
([nil nil ((13609 . 13610) (#("
" 0 1 (fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -13609) 13593) nil (25736 3880 452592 567000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -13624) (nil fontified nil 13623 . 13624) (nil wrap-prefix #("      " 0 6 (face org-indent)) 13623 . 13624) (13623 . 13624) 13609) nil (25736 3880 452591 116000) 0 nil])
([nil nil ((13664 . 13665) (#(" " 0 1 (fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 13663) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (13664 . 13665)) nil (25736 3880 452589 121000) 0 nil])
([nil nil ((13763 . 13764) (#("
" 0 1 (fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -13763) (13685 . 13686) (#("
" 0 1 (fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -13685) (undo-tree-id675 . 1) 13665) nil (25736 3880 452564 905000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -13817) (nil fontified nil 13816 . 13817) (nil wrap-prefix #("      " 0 6 (face org-indent)) 13816 . 13817) (13816 . 13817) (#(" " 0 1 (fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -13738) (nil fontified nil 13737 . 13738) (nil wrap-prefix #("      " 0 6 (face org-indent)) 13737 . 13738) (13737 . 13738) 13763) nil (25736 3880 452554 719000) 0 nil])
([nil nil ((13745 . 13746) (#(" " 0 1 (fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -13745) (13744 . 13745)) nil (25736 3880 452548 479000) 0 nil])
([nil nil ((13818 . 13862) (#("src" 0 3 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 13818) (undo-tree-id806 . -3) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -2) (undo-tree-id832 . -2) (undo-tree-id833 . -2) (undo-tree-id834 . -2) (undo-tree-id835 . -2) (undo-tree-id836 . -2) (undo-tree-id837 . -2) (undo-tree-id838 . -2) (undo-tree-id839 . -3) (undo-tree-id840 . -3) (undo-tree-id841 . -3) (undo-tree-id842 . -3) (undo-tree-id843 . -3) (undo-tree-id844 . -3) (undo-tree-id845 . -3) (undo-tree-id846 . -3) 13821 (13818 . 13821) (13817 . 13818) (t 25736 3880 471758 553000) 13746) nil (25736 3933 8557 177000) 0 nil])
([nil nil ((#("*TERMINAL-IO*." 0 1 (org-emphasis t font-lock-multiline t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 1 12 (org-emphasis t font-lock-multiline t face (bold) fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 12 13 (org-emphasis t font-lock-multiline t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 13 14 (fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 13863) (undo-tree-id743 . -13) (undo-tree-id744 . -13) (undo-tree-id745 . -13) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -14) (undo-tree-id776 . -13) (undo-tree-id777 . -8) (undo-tree-id778 . -8) (undo-tree-id779 . -8) (undo-tree-id780 . -8) (undo-tree-id781 . -8) (undo-tree-id782 . -8) (undo-tree-id783 . -8) (undo-tree-id784 . -9) (undo-tree-id785 . -9) (undo-tree-id786 . -9) (undo-tree-id787 . -9) (undo-tree-id788 . -9) (undo-tree-id789 . -9) (undo-tree-id790 . -9) (undo-tree-id791 . -11) (undo-tree-id792 . -11) (undo-tree-id793 . -11) (undo-tree-id794 . -11) (undo-tree-id795 . -11) (undo-tree-id796 . -11) (undo-tree-id797 . -11) (undo-tree-id798 . -13) (undo-tree-id799 . -13) (undo-tree-id800 . -13) (undo-tree-id801 . -13) (undo-tree-id802 . -13) (undo-tree-id803 . -13) (undo-tree-id804 . -13) (undo-tree-id805 . -13) 13876) nil (25736 3933 8528 852000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13864 . 13865) (nil fontified nil 13851 . 13865) (13851 . 13865) 13850) nil (25736 3933 8488 180000) 0 nil])
([nil nil ((13832 . 13836)) nil (25736 4204 964305 552000) 0 nil])
([nil nil ((#("." 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 13868)) ((13868 . 13869) (t 25736 3933 81953 684000)) (25736 4205 954205 537000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14549 . 14550) (14054 . 14550) (t 25736 3933 81953 684000)) ((#("Let’s try an example of reading data from a file. Suppose the file
‘‘timber.dat’’ in the directory /usr/dst contains these lines:*
\"The North Slope\"
((45 redwood) (12 oak) (43 maple))
100
We can read this data with the following program:
(defun get-tree-data ()
(with-open-file (stream \"/usr/dst/timber.dat\")
(let* ((tree-loc (read stream))
(tree-table (read stream))
(num-trees (read stream)))
(format t \"~&There are ~S trees on ~S.\"
num-trees tree-loc)
(format t \"~&They are: ~S\" tree-table))))" 0 67 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 67 69 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 69 79 (src-block t help-echo nil face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 79 131 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 131 148 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 148 149 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 149 150 (src-block t help-echo nil face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 150 151 (src-block t help-echo nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 151 161 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 161 162 (src-block t help-echo nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 162 163 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 163 164 (src-block t help-echo nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 164 170 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 170 171 (src-block t help-echo nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 171 172 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 172 173 (src-block t help-echo nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 173 181 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 181 182 (src-block t help-echo nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 182 183 (src-block t help-echo nil face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 183 184 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 184 188 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 188 238 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 238 239 (src-block t help-echo nil face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 239 244 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 244 245 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 245 258 (src-block t help-echo nil face (font-lock-function-name-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 258 259 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 259 260 (src-block t help-echo nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 260 261 (src-block t help-echo nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 261 262 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 262 263 (src-block t help-echo nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 263 277 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 277 278 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 278 279 (src-block t help-echo nil face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 279 286 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 286 307 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 307 308 (src-block t help-echo nil face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 308 309 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 309 310 (src-block t help-echo nil face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 310 314 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 314 315 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 315 316 (src-block t help-echo nil face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 316 317 (src-block t help-echo nil face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 317 326 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 326 327 (src-block t help-echo nil face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 327 338 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 338 339 (src-block t help-echo nil face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 339 340 (src-block t help-echo nil face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 340 341 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 341 342 (src-block t help-echo nil face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 342 353 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 353 354 (src-block t help-echo nil face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 354 365 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 365 366 (src-block t help-echo nil face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 366 367 (src-block t help-echo nil face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 367 368 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 368 369 (src-block t help-echo nil face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 369 379 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 379 380 (src-block t help-echo nil face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 380 391 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 391 392 (src-block t help-echo nil face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 392 393 (src-block t help-echo nil face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 393 394 (src-block t help-echo nil face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 394 395 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 395 396 (src-block t help-echo nil face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 396 405 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 405 434 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 434 435 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 435 453 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 453 454 (src-block t help-echo nil face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 454 455 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 455 456 (src-block t help-echo nil face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 456 465 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 465 481 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 481 492 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 492 493 (src-block t help-echo nil face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 493 494 (src-block t help-echo nil face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 494 495 (src-block t help-echo nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 495 496 (src-block t help-echo nil face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky nil fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 14054) (undo-tree-id847 . -495) (undo-tree-id848 . -495) (nil rear-nonsticky t 14549 . 14550)) (25736 4206 303372 417000) 0 nil])
([nil nil ((14054 . 14056)) nil (25736 4238 306637 270000) 0 nil])
([nil nil ((14123 . 14125)) nil (25736 4238 306636 275000) 0 nil])
([nil nil ((14189 . 14192) (#("0" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -14189) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (#("0" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -14190) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) 14191 (14189 . 14191)) nil (25736 4238 306633 971000) 0 nil])
([nil nil ((14210 . 14213) (#("0" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -14210) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (#("0" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -14211) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) 14212 (14210 . 14212)) nil (25736 4238 306607 50000) 0 nil])
([nil nil ((14248 . 14250)) nil (25736 4238 306210 156000) 0 nil])
([nil nil ((14254 . 14257) (#("0" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -14254) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (#("0" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -14255) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) 14256 (14254 . 14256)) nil (25736 4238 306207 451000) 0 nil])
([nil nil ((14054 . 14056) (14123 . 14125) (14189 . 14191) (14210 . 14212) (14248 . 14250) (14254 . 14256) (14308 . 14310) (14332 . 14334) (14379 . 14381) (14411 . 14413) (14438 . 14440) (14465 . 14467) (14505 . 14507) (14525 . 14527) 14053 (14306 . 14307) 14256) nil (25736 4238 306181 468000) 0 nil])
([nil nil ((14348 . 14350) (14395 . 14397) (14397 . 14399) (14429 . 14437) (14431 . 14434) (14458 . 14469) (14489 . 14495) (14529 . 14537) (14531 . 14537) (14551 . 14552) (14553 . 14558) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14595) (undo-tree-id849 . 2) 14053) nil (25736 4238 306173 572000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14871 . 14872) (nil fontified nil 14838 . 14872) (nil fontified nil 14804 . 14838) (nil fontified nil 14772 . 14804) (nil fontified nil 14752 . 14772) (nil fontified nil 14703 . 14752) (nil fontified nil 14692 . 14703) (nil fontified nil 14649 . 14692) (14649 . 14872) (t 25736 4238 382244 711000)) nil (25736 4309 665529 946000) 0 nil])
([nil nil ((#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -14677) (undo-tree-id960 . -2) (undo-tree-id961 . -2) (undo-tree-id962 . -2) (undo-tree-id963 . -2) (undo-tree-id964 . -2) (undo-tree-id965 . -2) (undo-tree-id966 . -2) (undo-tree-id967 . -2) (undo-tree-id968 . -2) (undo-tree-id969 . -2) (undo-tree-id970 . -2) 14679 (14056 . 14058) (14125 . 14126) (14127 . 14128) (14193 . 14195) (14218 . 14220) (14256 . 14257) (14258 . 14259) (14264 . 14265) (14266 . 14267) (14320 . 14322) (14346 . 14348) (14403 . 14405) (14435 . 14436) (14448 . 14449) (14475 . 14476) (14488 . 14489) (14515 . 14517) (14579 . 14581) (14599 . 14600) (14607 . 14608) (14652 . 14654) (14695 . 14697) (14706 . 14708) (14755 . 14757) (14775 . 14777) (14807 . 14809) (14841 . 14843) 14053 (14648 . 14651) 14632) nil (25736 4309 665526 438000) 0 nil])
([nil nil ((#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14056) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14127) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14130) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14197) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14224) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14264) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14267) (#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14274) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14334) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14360) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14365) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14413) (#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14466) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14495) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14509) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14537) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14546) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                        " 0 6 (face org-indent) 6 24 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14587) (#("  " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 14633) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (14723 . 14741) (14725 . 14730) (14736 . 14737) (14738 . 14739) (14787 . 14803) (14789 . 14799) (14809 . 14810) (14811 . 14814) (14843 . 14846) (14845 . 14846) (14879 . 14883) 14053) nil (25736 4309 665510 256000) 0 nil])
([nil nil ((14694 . 14695) (#("                         " 0 18 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 18 20 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 20 25 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 14694) (undo-tree-id971 . -6) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -14694) 14656 (t 25736 4309 737034 48000)) nil (25736 4314 733776 55000) 0 nil])
([nil nil ((14562 . 14563) (#("                " 0 6 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 6 8 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 8 14 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 14 16 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 14562) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -14562) 14559 (t 25736 4314 753229 221000)) nil (25736 4321 381740 976000) 0 nil])
([nil nil ((14056 . 14058) (14125 . 14126) (14127 . 14128) (14193 . 14194) (14195 . 14196) (14216 . 14217) (14218 . 14219) (14256 . 14257) (14258 . 14259) (14264 . 14265) (14266 . 14267) (14320 . 14321) (14322 . 14323) (14346 . 14347) (14350 . 14351) (14397 . 14398) (14403 . 14404) (14435 . 14437) (14475 . 14477) (14523 . 14525) (14583 . 14585) (14636 . 14638) (14690 . 14692) (14771 . 14773) (14782 . 14812) (14791 . 14793) (14835 . 14837) (14869 . 14871) 14053 (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil wrap-prefix #("                                  " 0 6 (face org-indent) 6 34 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 14781) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (14782 . 14783) (t 25736 4321 405487 876000)) nil (25736 4473 593127 117000) 0 nil])
([nil nil ((#("*** WRITING FILES WITH WITH-OPEN-FILE
" 0 2 (keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 3 4 (face org-level-3 keymap (keymap) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 4 36 (face org-level-3 fontified t wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent))) 36 37 (face org-level-3 rear-nonsticky t fontified t wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent))) 37 38 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 14992) (undo-tree-id1051 . -37) (undo-tree-id1052 . -37) (undo-tree-id1053 . -37) (undo-tree-id1054 . -37) (undo-tree-id1055 . -36) (undo-tree-id1056 . -36) (undo-tree-id1057 . -37) (undo-tree-id1058 . -37) (undo-tree-id1059 . -36) (undo-tree-id1060 . -36) (undo-tree-id1061 . -36) (undo-tree-id1062 . -36) (undo-tree-id1063 . -36) (undo-tree-id1064 . -36) (undo-tree-id1065 . -36) (undo-tree-id1066 . -36) (undo-tree-id1067 . -36) (undo-tree-id1068 . -36) (undo-tree-id1069 . -36) (undo-tree-id1070 . -36) (undo-tree-id1071 . -36) (undo-tree-id1072 . -36) (undo-tree-id1073 . -36) (undo-tree-id1074 . -36) (undo-tree-id1075 . -36) (undo-tree-id1076 . -36) (undo-tree-id1077 . -36) (undo-tree-id1078 . -36) (undo-tree-id1079 . -36) (undo-tree-id1080 . -36) (undo-tree-id1081 . -36) (undo-tree-id1082 . -36) (undo-tree-id1083 . -36) (undo-tree-id1084 . -36) (undo-tree-id1085 . -36) (undo-tree-id1086 . -36) 15028 (t 25736 4341 182255 688000)) nil (25736 4489 414999 822000) 0 nil] [nil nil ((#("
" 0 1 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 15029) (undo-tree-id996 . -1) (t 25736 4341 182255 688000)) ((15029 . 15030)) (25736 4473 592774 260000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13422 . 13423) (#("
" 0 1 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil)) . -13460) (13422 . 13461) 13388) nil (25736 4489 414975 203000) 0 nil])
nil
([nil nil ((#("*" 0 1 (keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 13423)) nil (25736 4489 414974 15000) 0 nil])
([nil nil ((#("*" 0 1 (keymap (keymap) face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 13423)) nil (25736 4489 414973 262000) 0 nil])
([nil nil ((#("*" 0 1 (face org-level-1 keymap (keymap) composition (0 1 [9673]) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . 13423)) nil (25736 4489 414972 469000) 0 nil])
([nil nil ((#("R" 0 1 (face org-level-3 fontified t wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)))) . 13389)) nil (25736 4489 414971 583000) 0 nil])
([nil nil ((13421 . 13422) (#(" " 0 1 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil)) . 13421) (#("
" 0 1 (rear-nonsticky t wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -13421) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) 13389) nil (25736 4489 414967 965000) 0 nil])
([nil nil ((13422 . 13426)) nil (25736 4493 348680 521000) 0 nil])
([nil nil ((#("*** 
" 0 2 (keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 3 4 (face org-level-3 keymap (keymap) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 4 5 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 15029) (undo-tree-id1337 . 5) (undo-tree-id1338 . -3) (undo-tree-id1339 . -3) (undo-tree-id1340 . -3) (undo-tree-id1341 . -3) (undo-tree-id1342 . -3) (undo-tree-id1343 . -3) (undo-tree-id1344 . -3) (undo-tree-id1345 . -3) (undo-tree-id1346 . -3) (undo-tree-id1347 . -3) (undo-tree-id1348 . -3) (undo-tree-id1349 . -3) (undo-tree-id1350 . -3) (undo-tree-id1351 . -3) (undo-tree-id1352 . -3) (undo-tree-id1353 . -3) 15032 (t 25736 4489 483963 951000)) nil (25736 4522 22590 191000) 0 nil] [nil nil ((12901 . 12902) (t 25736 4489 483963 951000) 12901) ((#("
" 0 1 (face org-block-end-line wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 12901) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1)) (25736 4493 348233 884000) 0 nil])
([nil nil ((#("*** 
" 0 2 (keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 3 4 (face org-level-3 keymap (keymap) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 4 5 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 15029) (undo-tree-id1311 . 5) (undo-tree-id1312 . -3) (undo-tree-id1313 . -3) (undo-tree-id1314 . -4) (undo-tree-id1315 . -3) (undo-tree-id1316 . -3) (undo-tree-id1317 . -3) (undo-tree-id1318 . -3) (undo-tree-id1319 . -3) (undo-tree-id1320 . -3) (undo-tree-id1321 . -3) (undo-tree-id1322 . -3) (undo-tree-id1323 . -3) (undo-tree-id1324 . -3) (undo-tree-id1325 . -3) (undo-tree-id1326 . -3) (undo-tree-id1327 . -3) (undo-tree-id1328 . -3) (undo-tree-id1329 . -3) (undo-tree-id1330 . -3) (undo-tree-id1331 . -3) (undo-tree-id1332 . -3) (undo-tree-id1333 . -3) (undo-tree-id1334 . -3) (undo-tree-id1335 . -3) (undo-tree-id1336 . -3) 15032) nil (25736 4522 22579 253000) 0 nil])
nil
([nil nil ((#("*** 
" 0 2 (keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 3 4 (face org-level-3 keymap (keymap) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 4 5 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 15029) (undo-tree-id1298 . 5) (undo-tree-id1299 . -3) (undo-tree-id1300 . -4) (undo-tree-id1301 . -3) (undo-tree-id1302 . -3) (undo-tree-id1303 . -3) (undo-tree-id1304 . -3) (undo-tree-id1305 . -3) (undo-tree-id1306 . -3) (undo-tree-id1307 . -3) (undo-tree-id1308 . -3) (undo-tree-id1309 . -3) (undo-tree-id1310 . -3) 15032) nil (25736 4522 22538 323000) 0 nil])
([nil nil ((#("*** 
*** 
*** 
" 0 2 (keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 3 4 (face org-level-3 keymap (keymap) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 4 5 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 5 7 (keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 7 8 (face org-level-3 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 8 9 (face org-level-3 keymap (keymap) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 9 10 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 10 12 (keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 12 13 (face org-level-3 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 13 14 (face org-level-3 keymap (keymap) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 14 15 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 15029) (undo-tree-id1283 . 15) (undo-tree-id1284 . -3) (undo-tree-id1285 . -4) (undo-tree-id1286 . -3) (undo-tree-id1287 . -3) (undo-tree-id1288 . -3) (undo-tree-id1289 . -3) (undo-tree-id1290 . -3) (undo-tree-id1291 . -3) (undo-tree-id1292 . -3) (undo-tree-id1293 . -3) (undo-tree-id1294 . -3) (undo-tree-id1295 . -3) (undo-tree-id1296 . -3) (undo-tree-id1297 . -3) 15032) nil (25736 4522 22530 256000) 0 nil])
([nil nil ((#("*** 
" 0 2 (keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 3 4 (face org-level-3 keymap (keymap) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 4 5 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 15029) (undo-tree-id1270 . 5) (undo-tree-id1271 . -3) (undo-tree-id1272 . -4) (undo-tree-id1273 . -3) (undo-tree-id1274 . -3) (undo-tree-id1275 . -3) (undo-tree-id1276 . -3) (undo-tree-id1277 . -3) (undo-tree-id1278 . -3) (undo-tree-id1279 . -3) (undo-tree-id1280 . -3) (undo-tree-id1281 . -3) (undo-tree-id1282 . -3) 15032) nil (25736 4522 22468 731000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 15028) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1)) nil (25736 4522 22458 269000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 15027) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1)) nil (25736 4522 22412 282000) 0 nil])
([nil nil ((15030 . 15031)) nil (25736 4522 22124 157000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 8545) (t 25736 4522 93208 848000)) nil (25737 14297 368685 741000) 0 nil])
([nil nil ((15029 . 15030) (t 25737 14297 398202 816000)) nil (25737 14523 489350 882000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 15040) (undo-tree-id6 . -1) (15041 . 15042) (15034 . 15041) (#("m" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -15034) (undo-tree-id7 . -1) 15035 (15029 . 15035) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -15029) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -15030) (undo-tree-id10 . -1) 15031) nil (25737 14523 489348 172000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 15039)) nil (25737 14523 489341 657000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 15044) (undo-tree-id5 . -1) (15045 . 15046) (15041 . 15045) (15039 . 15041)) nil (25737 14523 489340 339000) 0 nil])
([nil nil ((15044 . 15046)) nil (25737 14523 489337 788000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15071 . 15072) (nil fontified nil 15046 . 15072) (15046 . 15072) 15045) nil (25737 14523 489336 584000) 0 nil])
([nil nil ((15072 . 15074)) nil (25737 14523 489335 532000) 0 nil])
([nil nil ((15074 . 15118) (#("src" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 15074) (undo-tree-id3 . -1) (undo-tree-id4 . -3) 15077 (15074 . 15077)) nil (25737 14523 489334 593000) 0 nil])
([nil nil ((15086 . 15090) (15085 . 15086)) nil (25737 14523 489331 799000) 0 nil])
([nil nil ((15113 . 15115) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15112) (undo-tree-id0 . -2) (15112 . 15115) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 15111) (undo-tree-id1 . -2) (15113 . 15114) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15114) (undo-tree-id2 . -2) 15111 (15110 . 15113) 15089) nil (25737 14523 489329 636000) 0 nil])
([nil nil ((15073 . 15074) 15073) nil (25737 14523 489294 447000) 0 nil])
([nil nil ((15130 . 15134) (15129 . 15130) 15129) nil (25737 14523 489293 453000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15135 . 15136) (#("
" 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . -15445) (15135 . 15446)) nil (25737 14523 489292 60000) 0 nil])
([nil nil ((nil fontified t 15134 . 15135) (nil line-prefix #("**" 0 2 (face org-indent)) 15134 . 15135) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15134 . 15135) (nil keymap (keymap) 15134 . 15135) (nil face org-level-3 15134 . 15135) (nil fontified t 15133 . 15134) (nil line-prefix #("**" 0 2 (face org-indent)) 15133 . 15134) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15133 . 15134) (nil composition (2 1 [9675]) 15133 . 15134) (nil keymap (keymap) 15133 . 15134) (nil face org-level-3 15133 . 15134) (nil fontified t 15131 . 15133) (nil line-prefix #("**" 0 2 (face org-indent)) 15131 . 15133) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15131 . 15133) (nil face org-hide 15131 . 15133) (nil keymap (keymap) 15131 . 15133) (#("*** " 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 15130) (15134 . 15139) 15133) nil (25737 14523 489290 204000) 0 nil])
([nil nil ((nil fontified nil 15130 . 15133) (nil line-prefix #("**" 0 2 (face org-indent)) 15130 . 15133) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15130 . 15133) (#("*** " 0 4 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 15130) (15134 . 15137) (nil fontified t 15133 . 15134) (nil line-prefix #("***" 0 3 (face org-indent)) 15133 . 15134) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15133 . 15134) (nil keymap (keymap) 15133 . 15134) (nil face org-level-4 15133 . 15134) (nil fontified t 15132 . 15133) (nil line-prefix #("***" 0 3 (face org-indent)) 15132 . 15133) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15132 . 15133) (nil composition (0 1 [9679]) 15132 . 15133) (nil keymap (keymap) 15132 . 15133) (nil face org-level-4 15132 . 15133) (nil fontified t 15130 . 15132) (nil line-prefix #("***" 0 3 (face org-indent)) 15130 . 15132) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15130 . 15132) (nil face org-hide 15130 . 15132) (nil keymap (keymap) 15130 . 15132) (#("**** " 0 3 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide keymap (keymap)) 3 4 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-4) 4 5 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) keymap (keymap) face org-level-4)) . 15130) (15135 . 15139) 15134) nil (25737 14523 489284 581000) 0 nil])
([nil nil ((nil fontified t 15444 . 15445) (nil line-prefix #("**" 0 2 (face org-indent)) 15444 . 15445) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15444 . 15445) (nil keymap (keymap) 15444 . 15445) (nil face org-level-3 15444 . 15445) (nil fontified t 15443 . 15444) (nil line-prefix #("**" 0 2 (face org-indent)) 15443 . 15444) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15443 . 15444) (nil composition (2 1 [9675]) 15443 . 15444) (nil keymap (keymap) 15443 . 15444) (nil face org-level-3 15443 . 15444) (nil fontified t 15441 . 15443) (nil line-prefix #("**" 0 2 (face org-indent)) 15441 . 15443) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15441 . 15443) (nil face org-hide 15441 . 15443) (nil keymap (keymap) 15441 . 15443) (#("*** " 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 15440) (15444 . 15449) 15443) nil (25737 14531 752379 206000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) rear-nonsticky t)) . 15134) (undo-tree-id31 . -1)) nil (25737 14538 310491 606000) 0 nil] [nil nil ((#("** 
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 3 4 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 15130) (undo-tree-id13 . -2) (undo-tree-id14 . 1) (undo-tree-id15 . -4) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) 15132) ((15130 . 15134)) (25737 14531 447127 607000) 0 nil] [nil nil ((nil fontified t 15131 . 15132) (nil line-prefix #("*" 0 1 (face org-indent)) 15131 . 15132) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15131 . 15132) (nil keymap (keymap) 15131 . 15132) (nil face org-level-2 15131 . 15132) (nil fontified t 15130 . 15131) (nil line-prefix #("*" 0 1 (face org-indent)) 15130 . 15131) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15130 . 15131) (nil composition (0 1 [9679]) 15130 . 15131) (nil keymap (keymap) 15130 . 15131) (nil face org-level-2 15130 . 15131) (#("** " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 15130) (15133 . 15135) 15132) ((#("* " 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-2) 1 2 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 15133) (15130 . 15133) (nil face org-level-1 15130 . 15131) (nil keymap (keymap) 15130 . 15131) (nil composition (1 1 [9673]) 15130 . 15131) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15130 . 15131) (nil line-prefix "" 15130 . 15131) (nil fontified nil 15130 . 15131) (nil face org-level-1 15131 . 15132) (nil keymap (keymap) 15131 . 15132) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15131 . 15132) (nil line-prefix "" 15131 . 15132)) (25737 14523 489268 660000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 15134)) nil (25737 14538 311705 149000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) rear-nonsticky t)) . 15130) (undo-tree-id11 . 1) (undo-tree-id12 . -1)) ((15130 . 15131)) (25737 14531 446912 42000) 0 nil])
nil
([nil nil ((nil fontified t 15131 . 15132) (nil line-prefix #("*" 0 1 (face org-indent)) 15131 . 15132) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15131 . 15132) (nil keymap (keymap) 15131 . 15132) (nil face org-level-2 15131 . 15132) (nil fontified t 15130 . 15131) (nil line-prefix #("*" 0 1 (face org-indent)) 15130 . 15131) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15130 . 15131) (nil composition (0 1 [9679]) 15130 . 15131) (nil keymap (keymap) 15130 . 15131) (nil face org-level-2 15130 . 15131) (#("** " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 15130) (15133 . 15135) 15132) nil (25737 14547 345420 944000) 0 nil] [nil nil ((nil fontified t 15131 . 15132) (nil line-prefix #("*" 0 1 (face org-indent)) 15131 . 15132) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15131 . 15132) (nil keymap (keymap) 15131 . 15132) (nil face org-level-2 15131 . 15132) (nil fontified t 15130 . 15131) (nil line-prefix #("*" 0 1 (face org-indent)) 15130 . 15131) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15130 . 15131) (nil composition (0 1 [9679]) 15130 . 15131) (nil keymap (keymap) 15130 . 15131) (nil face org-level-2 15130 . 15131) (#("** " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 15130) (15133 . 15135) 15132) ((#("* " 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-2) 1 2 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 15133) (15130 . 15133) (nil face org-level-1 15130 . 15131) (nil keymap (keymap) 15130 . 15131) (nil composition (1 1 [9673]) 15130 . 15131) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15130 . 15131) (nil line-prefix "" 15130 . 15131) (nil fontified nil 15130 . 15131) (nil face org-level-1 15131 . 15132) (nil keymap (keymap) 15131 . 15132) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15131 . 15132) (nil line-prefix "" 15131 . 15132)) (25737 14538 310438 395000) 0 nil])
nil
([nil nil ((15130 . 15133) (#("*" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) composition (1 1 [9673]) keymap (keymap) face org-level-1)) . -15130) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . -15131) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) 15132 (15131 . 15132)) nil (25737 14547 345415 35000) 0 nil])
nil
([nil nil ((15444 . 15445)) nil (25737 14547 345357 221000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15135 . 15136) (nil fontified nil 15112 . 15136) (15112 . 15136) 15113 (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15112) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 15113 (t 25737 14547 373962 364000)) nil (25737 14612 35008 681000) 0 nil])
([nil nil ((15112 . 15114) (15136 . 15137)) nil (25737 14612 34983 417000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15312 . 15313) (nil fontified nil 15296 . 15313) (nil fontified nil 15256 . 15296) (nil fontified nil 15246 . 15256) (nil fontified nil 15201 . 15246) (nil fontified nil 15155 . 15201) (nil fontified nil 15139 . 15155) (15139 . 15313)) nil (25737 14612 34982 336000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -15112) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) 15114 (15117 . 15119) (15142 . 15144) (15158 . 15160) (15204 . 15206) (15249 . 15251) (15259 . 15261) (15299 . 15302) 15112 (15111 . 15114) 15091) nil (25737 14612 34979 542000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15115) (15160 . 15162) (15210 . 15212) (15255 . 15257) (15267 . 15274) (15269 . 15272) (15309 . 15314) (15311 . 15316) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15330) (undo-tree-id100 . 2) 15112) nil (25737 14612 34967 539000) 0 nil])
([nil nil ((15322 . 15323) (#("            " 0 5 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5 7 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 15322) (#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -15322) 15315 (t 25737 14612 61230 32000)) nil (25737 14624 831003 382000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15381 . 15382) (nil fontified nil 15372 . 15382) (nil fontified nil 15369 . 15372) (nil fontified nil 15355 . 15369) (nil fontified nil 15353 . 15355) (nil fontified nil 15342 . 15353) (15342 . 15382) 15343 (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15342) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) 15343 (t 25737 14624 857099 411000)) nil (25737 14669 901612 178000) 0 nil])
([nil nil ((#("12
" 0 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 15369) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) 15370) nil (25737 14669 901606 32000) 0 nil])
([nil nil ((#("2
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15353)) nil (25737 14669 901594 728000) 0 nil])
([nil nil ((#("> " 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15353) (undo-tree-id166 . -1) (undo-tree-id167 . 2) (undo-tree-id168 . -1)) nil (25737 14669 901593 306000) 0 nil])
([nil nil ((#("> " 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15365) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . 2) (undo-tree-id165 . -1)) nil (25737 14669 901587 469000) 0 nil])
([nil nil ((15115 . 15117) (15140 . 15141) (15142 . 15143) (15158 . 15159) (15162 . 15163) (15208 . 15209) (15212 . 15213) (15257 . 15258) (15261 . 15262) (15271 . 15273) (15342 . 15344) (15353 . 15355) (15365 . 15367) 15112 (t 25737 14669 928673 894000)) nil (25737 14684 522036 927000) 0 nil])
([nil nil ((15397 . 15399) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15396) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (15396 . 15399) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15395) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (15397 . 15398) (15395 . 15397) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15394) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (15394 . 15397) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15393) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (15393 . 15396) (#("   " 0 3 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15392) (undo-tree-id235 . -3) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2) (undo-tree-id241 . -2) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (undo-tree-id244 . -2) (undo-tree-id245 . -3) (undo-tree-id246 . -3) (undo-tree-id247 . -3) (undo-tree-id248 . -3) (undo-tree-id249 . -3) (undo-tree-id250 . -3) (undo-tree-id251 . -3) (undo-tree-id252 . -3) (15395 . 15396) (15394 . 15395) (15391 . 15394) 15390) nil (25737 14684 522028 528000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15115) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15142) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15166) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15214) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15219) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15265) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15270) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                    " 0 6 (face org-indent) 6 20 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15281) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                    " 0 6 (face org-indent) 6 20 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15294) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15397) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) 15112 (t 25737 14684 548546 910000)) nil (25737 14688 489002 272000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -15257) (undo-tree-id508 . -4) (undo-tree-id509 . -4) (undo-tree-id510 . -2) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) (undo-tree-id523 . -4) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -4) (undo-tree-id527 . -4) (undo-tree-id528 . -4) (undo-tree-id529 . -4) (undo-tree-id530 . -4) (undo-tree-id531 . -4) 15261 (15259 . 15261) 15112 (15256 . 15259) (t 25737 14688 512513 371000) 15212) nil (25737 14738 716249 180000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15259 . 15260) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -15271) (15257 . 15272)) nil (25737 14738 716228 39000) 0 nil])
([nil nil ((15112 . 15404) (#("
  (setf *total-glasses* 0)
  (defun sell (n)
    \"Ye Olde Lemonade Stand: Sales by the Glass.\"
    (setf *total-glasses* (+ *total-glasses* n))

  (incf a 10)
    (format t
            \"~&That makes ~S glasses so far today.\" ,*total-glasses*))
  (setf a 2)
  (incf a 10)
  (decf a)






" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 4 9 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9 10 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (org-block)) 10 23 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (org-block)) 23 24 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (org-block)) 24 26 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26 27 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 27 28 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 28 29 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 29 30 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30 31 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 31 36 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 36 37 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37 41 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 41 42 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42 43 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 43 44 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 44 45 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 45 46 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46 47 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47 49 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49 50 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50 95 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 95 96 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 96 98 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 98 100 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 100 101 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 101 106 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 106 107 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (org-block)) 107 120 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (org-block)) 120 121 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (org-block)) 121 122 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 122 123 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 123 125 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 125 126 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (org-block)) 126 139 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (org-block)) 139 140 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (org-block)) 140 142 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 142 143 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 143 144 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 144 145 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 145 146 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 146 147 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 147 148 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) rear-nonsticky t font-lock-multiline t face (org-block) help-echo nil) 148 149 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) help-echo nil) 149 158 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 158 159 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) help-echo nil) 159 160 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 160 162 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 162 164 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 164 165 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 165 174 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 174 175 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 175 182 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 182 184 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 184 186 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 186 225 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 225 226 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 226 227 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 227 228 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 228 241 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 241 242 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 242 243 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 243 244 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 244 245 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 245 247 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 247 248 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 248 256 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 256 257 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 257 258 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 258 260 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 260 261 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 261 270 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 270 271 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 271 272 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 272 274 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 274 275 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 275 281 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 281 282 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 282 283 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 283 284 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 284 285 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 285 286 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 286 287 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 287 288 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 288 289 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15112) (undo-tree-id284 . -159) (undo-tree-id285 . 130) (undo-tree-id286 . -283) (undo-tree-id287 . 5) (undo-tree-id288 . -146) (undo-tree-id289 . -159) (undo-tree-id290 . -245) (undo-tree-id291 . -1) (undo-tree-id292 . -28) (undo-tree-id293 . -245) (undo-tree-id294 . -245) (undo-tree-id295 . -245) (undo-tree-id296 . -272) (undo-tree-id297 . -272) (undo-tree-id298 . -272) (undo-tree-id299 . -272) (undo-tree-id300 . -272) (undo-tree-id301 . -272) (undo-tree-id302 . -272) (undo-tree-id303 . -272) (undo-tree-id304 . -272) (undo-tree-id305 . -272) (undo-tree-id306 . -272) (undo-tree-id307 . -272) (undo-tree-id308 . -272) (undo-tree-id309 . -272) (undo-tree-id310 . -258) (undo-tree-id311 . -288) (undo-tree-id312 . -288) (undo-tree-id313 . -288) (undo-tree-id314 . -288) (undo-tree-id315 . -288) (undo-tree-id316 . -288) (undo-tree-id317 . -288) (undo-tree-id318 . -288) (undo-tree-id319 . -288) (undo-tree-id320 . -288) (undo-tree-id321 . -288) (undo-tree-id322 . -288) (undo-tree-id323 . -288) (undo-tree-id324 . -288) (undo-tree-id325 . -288) (undo-tree-id326 . -288) (undo-tree-id327 . -288) (undo-tree-id328 . -288) (undo-tree-id329 . -288) (undo-tree-id330 . -288) (undo-tree-id331 . -288) (undo-tree-id332 . -288) (undo-tree-id333 . -288) (undo-tree-id334 . -288) (undo-tree-id335 . -288) (undo-tree-id336 . -288) (undo-tree-id337 . -145) (undo-tree-id338 . -148) (undo-tree-id339 . -281) (undo-tree-id340 . -281) (undo-tree-id341 . -281) (undo-tree-id342 . -281) (undo-tree-id343 . -281) (undo-tree-id344 . -281) (undo-tree-id345 . -281) (undo-tree-id346 . -281) (undo-tree-id347 . -281) (undo-tree-id348 . -281) (undo-tree-id349 . -281) (undo-tree-id350 . -281) (undo-tree-id351 . -281) (undo-tree-id352 . -281) (undo-tree-id353 . -281) (undo-tree-id354 . -281) (undo-tree-id355 . -281) (undo-tree-id356 . -281) (undo-tree-id357 . -281) (undo-tree-id358 . -281) (undo-tree-id359 . -281) (undo-tree-id360 . -281) (undo-tree-id361 . -281) (undo-tree-id362 . -281) (undo-tree-id363 . -281) (undo-tree-id364 . -281) (undo-tree-id365 . -281) (undo-tree-id366 . -281) (undo-tree-id367 . -281) (undo-tree-id368 . -281) (undo-tree-id369 . -281) (undo-tree-id370 . -281) (undo-tree-id371 . -281) (undo-tree-id372 . -281) (undo-tree-id373 . -281) (undo-tree-id374 . -283) (undo-tree-id375 . -283) (undo-tree-id376 . -283) (undo-tree-id377 . -283) (undo-tree-id378 . -283) (undo-tree-id379 . -283) (undo-tree-id380 . -283) (undo-tree-id381 . -283) (undo-tree-id382 . -283) (undo-tree-id383 . -283) (undo-tree-id384 . -283) (undo-tree-id385 . -283) (undo-tree-id386 . -283) (undo-tree-id387 . -283) (undo-tree-id388 . -283) (undo-tree-id389 . -283) (undo-tree-id390 . -283) (undo-tree-id391 . -283) (undo-tree-id392 . -283) (undo-tree-id393 . -283) (undo-tree-id394 . -283) (undo-tree-id395 . -283) (undo-tree-id396 . -283) (undo-tree-id397 . -283) (undo-tree-id398 . -283) (undo-tree-id399 . -283) (undo-tree-id400 . -283) (undo-tree-id401 . -283) (undo-tree-id402 . -272) (undo-tree-id403 . -258) (undo-tree-id404 . -260) (undo-tree-id405 . -260) (undo-tree-id406 . -260) (undo-tree-id407 . -260) (undo-tree-id408 . -260) (undo-tree-id409 . -260) (undo-tree-id410 . -260) (undo-tree-id411 . -260) (undo-tree-id412 . -260) (undo-tree-id413 . -260) (undo-tree-id414 . -260) (undo-tree-id415 . -260) (undo-tree-id416 . -260) (undo-tree-id417 . -260) (undo-tree-id418 . -260) (undo-tree-id419 . -260) (undo-tree-id420 . -260) (undo-tree-id421 . -260) (undo-tree-id422 . -260) (undo-tree-id423 . -260) (undo-tree-id424 . -260) (undo-tree-id425 . -260) (undo-tree-id426 . -260) (undo-tree-id427 . -260) (undo-tree-id428 . -260) (undo-tree-id429 . -260) (undo-tree-id430 . -260) (undo-tree-id431 . -247) (undo-tree-id432 . -176) (undo-tree-id433 . -162) (undo-tree-id434 . -98) (undo-tree-id435 . -100) (undo-tree-id436 . -100) (undo-tree-id437 . -100) (undo-tree-id438 . -100) (undo-tree-id439 . -100) (undo-tree-id440 . -100) (undo-tree-id441 . -100) (undo-tree-id442 . -145) (undo-tree-id443 . -100) (undo-tree-id444 . -145) (undo-tree-id445 . -145) (undo-tree-id446 . -145) (undo-tree-id447 . -145) (undo-tree-id448 . -145) (undo-tree-id449 . -145) (undo-tree-id450 . -145) (undo-tree-id451 . -145) (undo-tree-id452 . -145) (undo-tree-id453 . -145) (undo-tree-id454 . -145) (undo-tree-id455 . -145) (undo-tree-id456 . -145) (undo-tree-id457 . -145) (undo-tree-id458 . -145) (undo-tree-id459 . -145) (undo-tree-id460 . -145) (undo-tree-id461 . -145) (undo-tree-id462 . -145) (undo-tree-id463 . -145) (undo-tree-id464 . -145) (undo-tree-id465 . -145) (undo-tree-id466 . -145) (undo-tree-id467 . -145) (undo-tree-id468 . -145) (undo-tree-id469 . -145) (undo-tree-id470 . -145) (undo-tree-id471 . -145) (undo-tree-id472 . -145) (undo-tree-id473 . -145) (undo-tree-id474 . -145) (undo-tree-id475 . -145) (undo-tree-id476 . -145) (undo-tree-id477 . -145) (undo-tree-id478 . -145) (undo-tree-id479 . -145) (undo-tree-id480 . -145) (undo-tree-id481 . -145) (undo-tree-id482 . -145) (undo-tree-id483 . -145) (undo-tree-id484 . -145) (undo-tree-id485 . -145) (undo-tree-id486 . -145) (undo-tree-id487 . -145) (undo-tree-id488 . -145) (undo-tree-id489 . -145) (undo-tree-id490 . -145) (undo-tree-id491 . -145) (undo-tree-id492 . -145) (undo-tree-id493 . -145) (undo-tree-id494 . -148) (undo-tree-id495 . -148) (undo-tree-id496 . -148) (undo-tree-id497 . -148) (undo-tree-id498 . -148) (undo-tree-id499 . -148) (undo-tree-id500 . 141) (undo-tree-id501 . -149) (undo-tree-id502 . 131) (undo-tree-id503 . -159) (undo-tree-id504 . -148) (undo-tree-id505 . -148) (undo-tree-id506 . -148) (undo-tree-id507 . -148) 15260) nil (25737 14738 716219 962000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 15257)) nil (25737 14738 715845 902000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15282 . 15283) (nil fontified nil 15268 . 15283) (15268 . 15283) 15269 (#("a" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 15268) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) 15269) nil (25737 14747 474174 521000) 0 nil])
([nil nil ((15259 . 15261) 15112 (t 25737 14738 740119 992000)) nil (25737 14752 70212 41000) 0 nil] [nil nil ((nil rear-nonsticky nil 15118 . 15119) (nil fontified nil 15118 . 15119) (15118 . 15119) 15117 (t 25737 14738 740119 992000)) ((#("e" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 15118) (nil rear-nonsticky t 15118 . 15119)) (25737 14747 473701 482000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 15287) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (t 25737 14752 96024 814000)) nil (25737 14770 65978 337000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 15538 . 15539) (nil fontified nil 15498 . 15539) (nil fontified nil 15462 . 15498) (nil fontified nil 15432 . 15462) (nil fontified nil 15413 . 15432) (15413 . 15539) (t 25737 14770 91902 510000)) nil (25737 14803 898695 881000) 0 nil])
([nil nil ((15504 . 15505) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -15504) (undo-tree-id565 . -1) (15468 . 15469) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -15468) (undo-tree-id566 . -1) (15438 . 15439) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -15438) (undo-tree-id567 . -1) 15504) nil (25737 14817 374138 726000) 0 nil] [nil nil ((#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15502) (undo-tree-id548 . -1) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15467) (undo-tree-id549 . -1) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15438) (undo-tree-id550 . -1)) ((15438 . 15439) (15467 . 15468) (15502 . 15503)) (25737 14803 898248 137000) 0 nil] [nil nil ((#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 15502) (undo-tree-id545 . -1) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 15467) (undo-tree-id546 . -1) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 15438) (undo-tree-id547 . -1) 15504) ((15438 . 15439) (15467 . 15468) (15502 . 15503)) (25737 14799 851229 464000) 0 nil])
([nil nil ((#("⇒(dish3 dish2 dish1)" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 2 19 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 19 20 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block))) . 15497) (undo-tree-id551 . 19) (undo-tree-id552 . -19) (#("⇒(dish2 dish1)" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 2 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block))) . 15475) (#("⇒(dish1)" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block)) 2 7 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 8 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block))) . 15453) (undo-tree-id553 . -2) (undo-tree-id554 . -2) (undo-tree-id555 . -2) (undo-tree-id556 . -2) (undo-tree-id557 . -2) (undo-tree-id558 . -2) (undo-tree-id559 . -2) (undo-tree-id560 . -2) (undo-tree-id561 . -2) (undo-tree-id562 . -2) (undo-tree-id563 . -2) (undo-tree-id564 . -2) 15519) nil (25737 14817 374130 405000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 15511 . 15512) (nil fontified nil 15499 . 15512) (15499 . 15512) 15500 (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15499) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) 15500 (t 25737 14817 403611 873000)) nil (25737 14898 926719 404000) 0 nil])
([nil nil ((15544 . 15546) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 15543) (undo-tree-id637 . -2) (undo-tree-id638 . -2) (undo-tree-id639 . -2) (undo-tree-id640 . -2) (undo-tree-id641 . -2) (undo-tree-id642 . -2) (undo-tree-id643 . -2) (undo-tree-id644 . -2) (undo-tree-id645 . -2) (undo-tree-id646 . -2) (undo-tree-id647 . -2) (15545 . 15546) (15115 . 15117) (15140 . 15142) (15162 . 15164) (15208 . 15210) (15261 . 15263) (15289 . 15291) (15315 . 15317) (15374 . 15375) (15376 . 15377) (15387 . 15388) (15389 . 15390) (15401 . 15402) (15403 . 15404) (15413 . 15415) (15432 . 15434) (15454 . 15456) (15476 . 15478) (15499 . 15501) 15112 (15512 . 15515)) nil (25737 14898 926714 760000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15624 . 15625) (nil fontified nil 15613 . 15625) (nil fontified nil 15583 . 15613) (nil fontified nil 15546 . 15583) (15546 . 15625) 15545) nil (25737 14898 926705 363000) 0 nil])
([nil nil ((15117 . 15119) (15142 . 15143) (15146 . 15147) (15162 . 15163) (15168 . 15169) (15214 . 15216) (15265 . 15267) (15305 . 15307) (15315 . 15316) (15329 . 15330) (15388 . 15389) (15392 . 15393) (15403 . 15405) (15419 . 15421) (15435 . 15437) (15454 . 15455) (15456 . 15457) (15478 . 15479) (15480 . 15481) (15502 . 15504) (15527 . 15529) (15546 . 15548) (15583 . 15585) (15613 . 15619) 15112) nil (25737 14898 926703 330000) 0 nil])
([nil nil ((15617 . 15621) 15112) nil (25737 14898 926699 361000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15117) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15144) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15149) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15166) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15173) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15220) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15227) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15273) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15280) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15309) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                      " 0 6 (face org-indent) 6 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                      " 0 6 (face org-indent) 6 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15327) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15406) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15419) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15441) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15453) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15456) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15476) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15479) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15502) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15505) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15528) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15531) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15555) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 15574) (undo-tree-id579 . -2) (undo-tree-id580 . -2) (undo-tree-id581 . -2) (undo-tree-id582 . -2) (undo-tree-id583 . -2) (undo-tree-id584 . -2) (undo-tree-id585 . -2) (undo-tree-id586 . -2) (undo-tree-id587 . -2) (undo-tree-id588 . -2) (undo-tree-id589 . -2) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 15619) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15651) 15112) nil (25737 14898 926694 828000) 0 nil])
([nil nil ((15635 . 15637) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15634) (undo-tree-id568 . -2) (undo-tree-id569 . -2) (undo-tree-id570 . -2) (undo-tree-id571 . -2) (undo-tree-id572 . -2) (undo-tree-id573 . -2) (undo-tree-id574 . -2) (undo-tree-id575 . -2) (undo-tree-id576 . -2) (undo-tree-id577 . -2) (undo-tree-id578 . -2) (15636 . 15637) (15633 . 15636) 15632) nil (25737 14898 926651 469000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15829 . 15830) (nil fontified nil 15807 . 15830) (nil fontified nil 15780 . 15807) (nil fontified nil 15759 . 15780) (nil fontified nil 15732 . 15759) (nil fontified nil 15718 . 15732) (nil fontified nil 15678 . 15718) (nil fontified nil 15657 . 15678) (nil fontified nil 15636 . 15657) (15636 . 15830) 15635 (t 25737 14898 955206 495000)) nil (25737 14939 755731 561000) 0 nil])
([nil nil ((15718 . 15719) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15718) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1)) nil (25737 14952 785420 753000) 0 nil] [nil nil ((nil rear-nonsticky nil 15912 . 15913) (nil fontified nil 15890 . 15913) (nil fontified nil 15863 . 15890) (nil fontified nil 15842 . 15863) (nil fontified nil 15815 . 15842) (nil fontified nil 15801 . 15815) (nil fontified nil 15761 . 15801) (nil fontified nil 15740 . 15761) (nil fontified nil 15719 . 15740) (15719 . 15913) 15718) ((#("(setf *friends* nil)
(defun meet (person)
(cond ((equal person (first *friends*))
’we-just-met)
((member person *friends*)
’we-know-each-other)
(t (push person *friends*)
’pleased-to-meet-you)))" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-4-face org-block) help-echo nil src-block t) 1 6 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6 7 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-multiline t org-emphasis t font-lock-fontified t face (org-block) help-echo nil src-block t) 7 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-multiline t org-emphasis t font-lock-fontified t face (org-block) help-echo nil src-block t) 14 15 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-multiline t org-emphasis t font-lock-fontified t face (org-block) help-echo nil src-block t) 15 19 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 19 20 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-4-face org-block) help-echo nil src-block t) 20 21 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 21 22 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-4-face org-block) help-echo nil src-block t) 22 27 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 27 28 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 28 32 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 32 33 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 33 34 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-5-face org-block) help-echo nil src-block t) 34 40 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 40 41 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-5-face org-block) help-echo nil src-block t) 41 42 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 42 43 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-5-face org-block) help-echo nil src-block t) 43 47 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 47 48 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 48 49 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-6-face org-block) help-echo nil src-block t) 49 50 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-7-face org-block) help-echo nil src-block t) 50 63 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 63 64 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-8-face org-block) help-echo nil src-block t) 64 70 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 70 71 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-multiline t org-emphasis t font-lock-fontified t face (org-block) help-echo nil src-block t) 71 78 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-multiline t org-emphasis t font-lock-fontified t face (org-block) help-echo nil src-block t) 78 79 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-multiline t org-emphasis t font-lock-fontified t face (org-block) help-echo nil src-block t) 79 80 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-8-face org-block) help-echo nil src-block t) 80 81 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-7-face org-block) help-echo nil src-block t) 81 82 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 82 94 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 94 95 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-6-face org-block) help-echo nil src-block t) 95 96 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 96 97 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-6-face org-block) help-echo nil src-block t) 97 98 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-7-face org-block) help-echo nil src-block t) 98 112 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 112 113 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-multiline t org-emphasis t font-lock-fontified t face (org-block) help-echo nil src-block t) 113 120 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-multiline t org-emphasis t font-lock-fontified t face (org-block) help-echo nil src-block t) 120 121 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-multiline t org-emphasis t font-lock-fontified t face (org-block) help-echo nil src-block t) 121 122 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-7-face org-block) help-echo nil src-block t) 122 123 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 123 142 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 142 143 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-6-face org-block) help-echo nil src-block t) 143 144 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 144 145 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-6-face org-block) help-echo nil src-block t) 145 147 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 147 148 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-7-face org-block) help-echo nil src-block t) 148 160 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 160 161 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-multiline t org-emphasis t font-lock-fontified t face (org-block) help-echo nil src-block t) 161 168 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-multiline t org-emphasis t font-lock-fontified t face (org-block) help-echo nil src-block t) 168 169 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-multiline t org-emphasis t font-lock-fontified t face (org-block) help-echo nil src-block t) 169 170 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-7-face org-block) help-echo nil src-block t) 170 171 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 171 191 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 191 192 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-6-face org-block) help-echo nil src-block t) 192 193 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-5-face org-block) help-echo nil src-block t) 193 194 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-depth-4-face org-block) help-echo nil src-block t)) . 15719) (undo-tree-id652 . -193) (undo-tree-id653 . -193) (undo-tree-id654 . 1) (undo-tree-id655 . -194) (undo-tree-id656 . 173) (undo-tree-id657 . -22) (undo-tree-id658 . -193) (undo-tree-id659 . -193) (nil rear-nonsticky t 15912 . 15913)) (25737 14939 755232 932000) 0 nil])
([nil nil ((15759 . 15760) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15759)) nil (25737 14952 785408 346000) 0 nil])
nil
([nil nil ((15807 . 15808) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15807)) nil (25737 14952 785407 305000) 0 nil])
([nil nil ((15759 . 15760) (#("'" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15759)) nil (25737 14952 785405 650000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15115) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15142) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15145) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15162) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15218) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15265) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15270) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15299) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15304) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                    " 0 6 (face org-indent) 6 20 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15315) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15388) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15405) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15419) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 15422) (15635 . 15636) (15657 . 15659) (15678 . 15682) (15718 . 15729) (15732 . 15742) (15759 . 15770) (15780 . 15790) (15807 . 15820) 15112) nil (25737 14952 785398 722000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -15875) (undo-tree-id729 . -2) (undo-tree-id730 . -2) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id733 . -2) (undo-tree-id734 . -2) (undo-tree-id735 . -2) (undo-tree-id736 . -2) (undo-tree-id737 . -2) (undo-tree-id738 . -2) (undo-tree-id739 . -2) (undo-tree-id740 . -2) (undo-tree-id741 . -2) (undo-tree-id742 . -2) (undo-tree-id743 . -2) (undo-tree-id744 . -2) (undo-tree-id745 . -2) (undo-tree-id746 . -2) (undo-tree-id747 . -2) (undo-tree-id748 . -2) (undo-tree-id749 . -2) (undo-tree-id750 . -2) (undo-tree-id751 . -2) (undo-tree-id752 . -2) 15877 (15874 . 15877) (t 25737 14952 858997 520000) 15874) nil (25737 15018 159468 31000) 0 nil])
([nil nil ((15879 . 15881) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15878) (15878 . 15881) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15877) (15877 . 15880) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15876) (15875 . 15879) (#("i" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15875) (15875 . 15876)) ((#("i" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15875) (15875 . 15876) (#("
  
" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 1 3 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 3 4 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15875) (15876 . 15878) (#("  
" 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 2 3 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15877) (15877 . 15879) (#("  
" 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 2 3 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15878) (15878 . 15880) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15879) (t 25737 14971 242935 947000)) (25737 15019 346397 445000) 0 nil])
([nil nil ((nil fontified t 15898 . 15899) (t 25737 14971 242935 947000) (nil line-prefix #("**" 0 2 (face org-indent)) 15898 . 15899) (t 25737 14971 242935 947000) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15898 . 15899) (t 25737 14971 242935 947000) (nil keymap (keymap) 15898 . 15899) (t 25737 14971 242935 947000) (nil face org-level-3 15898 . 15899) (t 25737 14971 242935 947000) (nil fontified t 15897 . 15898) (t 25737 14971 242935 947000) (nil line-prefix #("**" 0 2 (face org-indent)) 15897 . 15898) (t 25737 14971 242935 947000) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15897 . 15898) (t 25737 14971 242935 947000) (nil composition (2 1 [9675]) 15897 . 15898) (t 25737 14971 242935 947000) (nil keymap (keymap) 15897 . 15898) (t 25737 14971 242935 947000) (nil face org-level-3 15897 . 15898) (t 25737 14971 242935 947000) (nil fontified t 15896 . 15897) (t 25737 14971 242935 947000) (nil line-prefix #("**" 0 2 (face org-indent)) 15896 . 15897) (t 25737 14971 242935 947000) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15896 . 15897) (t 25737 14971 242935 947000) (nil face org-hide 15896 . 15897) (t 25737 14971 242935 947000) (nil keymap (keymap) 15896 . 15897) (t 25737 14971 242935 947000) (nil fontified t 15895 . 15896) (t 25737 14971 242935 947000) (nil line-prefix #("**" 0 2 (face org-indent)) 15895 . 15896) (t 25737 14971 242935 947000) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15895 . 15896) (t 25737 14971 242935 947000) (nil face org-hide 15895 . 15896) (t 25737 14971 242935 947000) (nil keymap (keymap) 15895 . 15896) (t 25737 14971 242935 947000) (#("*** " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 15894) (t 25737 14971 242935 947000) (15898 . 15903) (t 25737 14971 242935 947000)) nil (25737 15067 527192 467000) 0 nil] [nil nil ((nil fontified t 15898 . 15899) (t 25737 14971 242935 947000) (nil line-prefix #("**" 0 2 (face org-indent)) 15898 . 15899) (t 25737 14971 242935 947000) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15898 . 15899) (t 25737 14971 242935 947000) (nil keymap (keymap) 15898 . 15899) (t 25737 14971 242935 947000) (nil face org-level-3 15898 . 15899) (t 25737 14971 242935 947000) (nil fontified t 15897 . 15898) (t 25737 14971 242935 947000) (nil line-prefix #("**" 0 2 (face org-indent)) 15897 . 15898) (t 25737 14971 242935 947000) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15897 . 15898) (t 25737 14971 242935 947000) (nil composition (2 1 [9675]) 15897 . 15898) (t 25737 14971 242935 947000) (nil keymap (keymap) 15897 . 15898) (t 25737 14971 242935 947000) (nil face org-level-3 15897 . 15898) (t 25737 14971 242935 947000) (nil fontified t 15896 . 15897) (t 25737 14971 242935 947000) (nil line-prefix #("**" 0 2 (face org-indent)) 15896 . 15897) (t 25737 14971 242935 947000) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15896 . 15897) (t 25737 14971 242935 947000) (nil face org-hide 15896 . 15897) (t 25737 14971 242935 947000) (nil keymap (keymap) 15896 . 15897) (t 25737 14971 242935 947000) (nil fontified t 15895 . 15896) (t 25737 14971 242935 947000) (nil line-prefix #("**" 0 2 (face org-indent)) 15895 . 15896) (t 25737 14971 242935 947000) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15895 . 15896) (t 25737 14971 242935 947000) (nil face org-hide 15895 . 15896) (t 25737 14971 242935 947000) (nil keymap (keymap) 15895 . 15896) (t 25737 14971 242935 947000) (#("*** " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 15894) (t 25737 14971 242935 947000) (15898 . 15903) (t 25737 14971 242935 947000)) ((#("**** " 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 3 4 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 4 5 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 15898) (undo-tree-id885 . -5) (undo-tree-id886 . -5) (undo-tree-id887 . -5) (undo-tree-id888 . -5) (undo-tree-id889 . -5) (undo-tree-id890 . -5) (undo-tree-id891 . -5) (undo-tree-id892 . -5) (undo-tree-id893 . -5) (undo-tree-id894 . -5) (undo-tree-id895 . -5) (undo-tree-id896 . -5) (undo-tree-id897 . -5) (undo-tree-id898 . -5) (undo-tree-id899 . -5) (undo-tree-id900 . -5) (undo-tree-id901 . -5) (undo-tree-id902 . -5) (undo-tree-id903 . -5) (undo-tree-id904 . -5) (undo-tree-id905 . -5) (undo-tree-id906 . -5) (undo-tree-id907 . -5) (undo-tree-id908 . -5) (undo-tree-id909 . -5) (undo-tree-id910 . -5) (undo-tree-id911 . -5) (undo-tree-id912 . -5) (undo-tree-id913 . -5) (undo-tree-id914 . -5) (undo-tree-id915 . -5) (undo-tree-id916 . -5) (undo-tree-id917 . -5) (undo-tree-id918 . -5) (undo-tree-id919 . -5) (undo-tree-id920 . -5) (undo-tree-id921 . -5) (undo-tree-id922 . -5) (t 25737 14971 242935 947000) (15894 . 15898) (t 25737 14971 242935 947000) (nil keymap (keymap) 15895 . 15896) (t 25737 14971 242935 947000) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15895 . 15896) (t 25737 14971 242935 947000) (nil line-prefix #("***" 0 3 (face org-indent)) 15895 . 15896) (t 25737 14971 242935 947000) (nil fontified nil 15895 . 15896) (t 25737 14971 242935 947000) (nil keymap (keymap) 15896 . 15897) (t 25737 14971 242935 947000) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15896 . 15897) (t 25737 14971 242935 947000) (nil line-prefix #("***" 0 3 (face org-indent)) 15896 . 15897) (t 25737 14971 242935 947000) (nil fontified nil 15896 . 15897) (t 25737 14971 242935 947000) (nil face org-level-4 15897 . 15898) (t 25737 14971 242935 947000) (nil keymap (keymap) 15897 . 15898) (t 25737 14971 242935 947000) (nil composition (0 1 [9679]) 15897 . 15898) (t 25737 14971 242935 947000) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15897 . 15898) (t 25737 14971 242935 947000) (nil line-prefix #("***" 0 3 (face org-indent)) 15897 . 15898) (t 25737 14971 242935 947000) (nil fontified nil 15897 . 15898) (t 25737 14971 242935 947000) (nil face org-level-4 15898 . 15899) (t 25737 14971 242935 947000) (nil keymap (keymap) 15898 . 15899) (t 25737 14971 242935 947000) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15898 . 15899) (t 25737 14971 242935 947000) (nil line-prefix #("***" 0 3 (face org-indent)) 15898 . 15899) (t 25737 14971 242935 947000)) (25737 15017 535159 326000) 0 nil])
([nil nil ((nil fontified nil 15894 . 15897) (nil line-prefix #("**" 0 2 (face org-indent)) 15894 . 15897) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15894 . 15897) (#("*** " 0 4 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 15894) (15898 . 15901) (nil fontified t 15897 . 15898) (nil line-prefix #("***" 0 3 (face org-indent)) 15897 . 15898) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15897 . 15898) (nil keymap (keymap) 15897 . 15898) (nil face org-level-4 15897 . 15898) (nil fontified t 15896 . 15897) (nil line-prefix #("***" 0 3 (face org-indent)) 15896 . 15897) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15896 . 15897) (nil composition (0 1 [9679]) 15896 . 15897) (nil keymap (keymap) 15896 . 15897) (nil face org-level-4 15896 . 15897) (nil fontified t 15894 . 15896) (nil line-prefix #("***" 0 3 (face org-indent)) 15894 . 15896) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15894 . 15896) (nil face org-hide 15894 . 15896) (nil keymap (keymap) 15894 . 15896) (#("**** " 0 3 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide keymap (keymap)) 3 4 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-4) 4 5 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) keymap (keymap) face org-level-4)) . 15894) (15899 . 15903)) nil (25737 15067 527184 684000) 0 nil])
([nil nil ((nil fontified nil 15894 . 15897) (nil line-prefix #("**" 0 2 (face org-indent)) 15894 . 15897) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15894 . 15897) (#("*** " 0 4 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 15894) (15898 . 15901) (nil fontified t 15897 . 15898) (nil line-prefix #("***" 0 3 (face org-indent)) 15897 . 15898) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15897 . 15898) (nil keymap (keymap) 15897 . 15898) (nil face org-level-4 15897 . 15898) (nil fontified t 15896 . 15897) (nil line-prefix #("***" 0 3 (face org-indent)) 15896 . 15897) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15896 . 15897) (nil composition (0 1 [9679]) 15896 . 15897) (nil keymap (keymap) 15896 . 15897) (nil face org-level-4 15896 . 15897) (nil fontified t 15894 . 15896) (nil line-prefix #("***" 0 3 (face org-indent)) 15894 . 15896) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15894 . 15896) (nil face org-hide 15894 . 15896) (nil keymap (keymap) 15894 . 15896) (#("**** " 0 3 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide keymap (keymap)) 3 4 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-4) 4 5 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) keymap (keymap) face org-level-4)) . 15894) (15899 . 15903)) ((#("*** " 0 2 (fontified nil line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified nil line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-4) 3 4 (fontified nil line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) keymap (keymap) face org-level-4)) . 15899) (undo-tree-id823 . -4) (undo-tree-id824 . -4) (undo-tree-id825 . -4) (undo-tree-id826 . -4) (undo-tree-id827 . -4) (undo-tree-id828 . -4) (undo-tree-id829 . -4) (undo-tree-id830 . -4) (undo-tree-id831 . -4) (undo-tree-id832 . -4) (undo-tree-id833 . -4) (undo-tree-id834 . -4) (undo-tree-id835 . -4) (undo-tree-id836 . -4) (undo-tree-id837 . -4) (undo-tree-id838 . -4) (undo-tree-id839 . -4) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (undo-tree-id842 . -4) (undo-tree-id843 . -4) (undo-tree-id844 . -4) (undo-tree-id845 . -4) (undo-tree-id846 . -4) (undo-tree-id847 . -4) (undo-tree-id848 . -4) (undo-tree-id849 . -4) (undo-tree-id850 . -4) (undo-tree-id851 . -4) (undo-tree-id852 . -4) (undo-tree-id853 . -4) (15894 . 15899) (nil keymap nil 15894 . 15896) (nil face nil 15894 . 15896) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15894 . 15896) (nil line-prefix #("**" 0 2 (face org-indent)) 15894 . 15896) (nil fontified nil 15894 . 15896) (nil face nil 15896 . 15897) (nil keymap nil 15896 . 15897) (nil composition nil 15896 . 15897) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15896 . 15897) (nil line-prefix #("**" 0 2 (face org-indent)) 15896 . 15897) (nil fontified nil 15896 . 15897) (nil face nil 15897 . 15898) (nil keymap nil 15897 . 15898) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15897 . 15898) (nil line-prefix #("**" 0 2 (face org-indent)) 15897 . 15898) (nil fontified nil 15897 . 15898) (#("** " 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-2)) . 15898) (undo-tree-id854 . -3) (undo-tree-id855 . -3) (undo-tree-id856 . -3) (undo-tree-id857 . -3) (undo-tree-id858 . -3) (undo-tree-id859 . -3) (undo-tree-id860 . -3) (undo-tree-id861 . -3) (undo-tree-id862 . -3) (undo-tree-id863 . -3) (undo-tree-id864 . -3) (undo-tree-id865 . -3) (undo-tree-id866 . -3) (undo-tree-id867 . -3) (undo-tree-id868 . -3) (undo-tree-id869 . -3) (undo-tree-id870 . -3) (undo-tree-id871 . -3) (undo-tree-id872 . -3) (undo-tree-id873 . -3) (undo-tree-id874 . -3) (undo-tree-id875 . -3) (undo-tree-id876 . -3) (undo-tree-id877 . -3) (undo-tree-id878 . -3) (undo-tree-id879 . -3) (undo-tree-id880 . -3) (undo-tree-id881 . -3) (undo-tree-id882 . -3) (undo-tree-id883 . -3) (undo-tree-id884 . -3) (15894 . 15898) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15896 . 15897) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15895 . 15896) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15894 . 15895) (nil line-prefix #("*" 0 1 (face org-indent)) 15896 . 15897) (nil line-prefix #("*" 0 1 (face org-indent)) 15895 . 15896) (nil line-prefix #("*" 0 1 (face org-indent)) 15894 . 15895) (nil fontified t 15896 . 15897) (nil fontified t 15895 . 15896) (nil fontified t 15894 . 15895)) (25737 15017 223071 267000) 0 nil])
([nil nil ((nil fontified t 15895 . 15896) (nil line-prefix #("*" 0 1 (face org-indent)) 15895 . 15896) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15895 . 15896) (nil keymap (keymap) 15895 . 15896) (nil face org-level-2 15895 . 15896) (nil fontified t 15894 . 15895) (nil line-prefix #("*" 0 1 (face org-indent)) 15894 . 15895) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15894 . 15895) (nil composition (0 1 [9679]) 15894 . 15895) (nil keymap (keymap) 15894 . 15895) (nil face org-level-2 15894 . 15895) (#("** " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 15894) (15897 . 15899)) nil (25737 15067 527179 631000) 0 nil])
([nil nil ((nil fontified t 15895 . 15896) (nil line-prefix #("*" 0 1 (face org-indent)) 15895 . 15896) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15895 . 15896) (nil keymap (keymap) 15895 . 15896) (nil face org-level-2 15895 . 15896) (nil fontified t 15894 . 15895) (nil line-prefix #("*" 0 1 (face org-indent)) 15894 . 15895) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15894 . 15895) (nil composition (0 1 [9679]) 15894 . 15895) (nil keymap (keymap) 15894 . 15895) (nil face org-level-2 15894 . 15895) (#("** " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 15894) (15897 . 15899)) ((#("* " 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-2) 1 2 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 15897) (undo-tree-id799 . -2) (undo-tree-id800 . -2) (undo-tree-id801 . -2) (undo-tree-id802 . -2) (undo-tree-id803 . -2) (undo-tree-id804 . -2) (undo-tree-id805 . -2) (undo-tree-id806 . -2) (undo-tree-id807 . -2) (undo-tree-id808 . -2) (undo-tree-id809 . -2) (undo-tree-id810 . -2) (undo-tree-id811 . -2) (undo-tree-id812 . -2) (undo-tree-id813 . -2) (undo-tree-id814 . -2) (undo-tree-id815 . -2) (undo-tree-id816 . -2) (undo-tree-id817 . -2) (undo-tree-id818 . -2) (undo-tree-id819 . -2) (undo-tree-id820 . -2) (undo-tree-id821 . -2) (undo-tree-id822 . -2) (15894 . 15897) (nil face org-level-1 15894 . 15895) (nil keymap (keymap) 15894 . 15895) (nil composition (1 1 [9673]) 15894 . 15895) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15894 . 15895) (nil line-prefix "" 15894 . 15895) (nil fontified nil 15894 . 15895) (nil face org-level-1 15895 . 15896) (nil keymap (keymap) 15895 . 15896) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15895 . 15896) (nil line-prefix "" 15895 . 15896)) (25737 15016 860840 105000) 0 nil])
([nil nil ((nil fontified nil 15895 . 15898) (nil line-prefix #("*" 0 1 (face org-indent)) 15895 . 15898) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15895 . 15898) (#("** " 0 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 15894) (15897 . 15901) (nil fontified t 15896 . 15897) (nil line-prefix "" 15896 . 15897) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15896 . 15897) (nil keymap (keymap) 15896 . 15897) (nil face org-level-1 15896 . 15897) (nil fontified t 15895 . 15896) (nil line-prefix "" 15895 . 15896) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15895 . 15896) (nil composition (1 1 [9673]) 15895 . 15896) (nil keymap (keymap) 15895 . 15896) (nil face org-level-1 15895 . 15896) (#("* " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) composition (1 1 [9673]) keymap (keymap) face org-level-1) 1 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 15894) (15896 . 15899)) nil (25737 15067 527176 76000) 0 nil])
([nil nil ((nil fontified nil 15895 . 15898) (nil line-prefix #("*" 0 1 (face org-indent)) 15895 . 15898) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15895 . 15898) (#("** " 0 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 15894) (15897 . 15901) (nil fontified t 15896 . 15897) (nil line-prefix "" 15896 . 15897) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15896 . 15897) (nil keymap (keymap) 15896 . 15897) (nil face org-level-1 15896 . 15897) (nil fontified t 15895 . 15896) (nil line-prefix "" 15895 . 15896) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15895 . 15896) (nil composition (1 1 [9673]) 15895 . 15896) (nil keymap (keymap) 15895 . 15896) (nil face org-level-1 15895 . 15896) (#("* " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) composition (1 1 [9673]) keymap (keymap) face org-level-1) 1 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 15894) (15896 . 15899)) ((#("** " 0 1 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 1 2 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) composition (1 1 [9673]) keymap (keymap) face org-level-1) 2 3 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 15896) (undo-tree-id765 . -3) (undo-tree-id766 . -3) (undo-tree-id767 . -3) (undo-tree-id768 . -3) (undo-tree-id769 . -3) (undo-tree-id770 . -3) (undo-tree-id771 . -3) (undo-tree-id772 . -3) (undo-tree-id773 . -3) (undo-tree-id774 . -3) (undo-tree-id775 . -3) (undo-tree-id776 . -3) (undo-tree-id777 . -3) (undo-tree-id778 . -3) (undo-tree-id779 . -3) (undo-tree-id780 . -3) (undo-tree-id781 . -3) (15894 . 15896) (nil face nil 15895 . 15896) (nil keymap nil 15895 . 15896) (nil composition nil 15895 . 15896) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15895 . 15896) (nil line-prefix #("*" 0 1 (face org-indent)) 15895 . 15896) (nil fontified nil 15895 . 15896) (nil face nil 15896 . 15897) (nil keymap nil 15896 . 15897) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15896 . 15897) (nil line-prefix #("*" 0 1 (face org-indent)) 15896 . 15897) (nil fontified nil 15896 . 15897) (#("*** " 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-3)) . 15897) (undo-tree-id782 . -4) (undo-tree-id783 . -4) (undo-tree-id784 . -4) (undo-tree-id785 . -4) (undo-tree-id786 . -4) (undo-tree-id787 . -4) (undo-tree-id788 . -4) (undo-tree-id789 . -4) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (undo-tree-id794 . -4) (undo-tree-id795 . -4) (undo-tree-id796 . -4) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (15894 . 15897) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15897 . 15898) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15896 . 15897) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15895 . 15896) (nil line-prefix #("**" 0 2 (face org-indent)) 15897 . 15898) (nil line-prefix #("**" 0 2 (face org-indent)) 15896 . 15897) (nil line-prefix #("**" 0 2 (face org-indent)) 15895 . 15896) (nil fontified t 15897 . 15898) (nil fontified t 15896 . 15897) (nil fontified t 15895 . 15896)) (25737 15016 533802 900000) 0 nil])
([nil nil ((nil fontified t 15898 . 15899) (nil line-prefix #("**" 0 2 (face org-indent)) 15898 . 15899) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15898 . 15899) (nil keymap (keymap) 15898 . 15899) (nil face org-level-3 15898 . 15899) (nil fontified t 15897 . 15898) (nil line-prefix #("**" 0 2 (face org-indent)) 15897 . 15898) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15897 . 15898) (nil composition (2 1 [9675]) 15897 . 15898) (nil keymap (keymap) 15897 . 15898) (nil face org-level-3 15897 . 15898) (nil fontified t 15895 . 15897) (nil line-prefix #("**" 0 2 (face org-indent)) 15895 . 15897) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15895 . 15897) (nil face org-hide 15895 . 15897) (nil keymap (keymap) 15895 . 15897) (#("*** " 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 15894) (15898 . 15903)) nil (25737 15067 527171 661000) 0 nil])
([nil nil ((nil fontified t 15898 . 15899) (nil line-prefix #("**" 0 2 (face org-indent)) 15898 . 15899) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15898 . 15899) (nil keymap (keymap) 15898 . 15899) (nil face org-level-3 15898 . 15899) (nil fontified t 15897 . 15898) (nil line-prefix #("**" 0 2 (face org-indent)) 15897 . 15898) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15897 . 15898) (nil composition (2 1 [9675]) 15897 . 15898) (nil keymap (keymap) 15897 . 15898) (nil face org-level-3 15897 . 15898) (nil fontified t 15895 . 15897) (nil line-prefix #("**" 0 2 (face org-indent)) 15895 . 15897) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15895 . 15897) (nil face org-hide 15895 . 15897) (nil keymap (keymap) 15895 . 15897) (#("*** " 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 15894) (15898 . 15903)) ((#("**** " 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 3 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 3 4 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 4 5 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 15898) (undo-tree-id755 . -5) (undo-tree-id756 . -5) (undo-tree-id757 . -5) (undo-tree-id758 . -5) (undo-tree-id759 . -5) (undo-tree-id760 . -5) (undo-tree-id761 . -5) (undo-tree-id762 . -5) (undo-tree-id763 . -5) (undo-tree-id764 . -5) (15894 . 15898) (nil keymap (keymap) 15895 . 15897) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15895 . 15897) (nil line-prefix #("***" 0 3 (face org-indent)) 15895 . 15897) (nil fontified nil 15895 . 15897) (nil face org-level-4 15897 . 15898) (nil keymap (keymap) 15897 . 15898) (nil composition (0 1 [9679]) 15897 . 15898) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15897 . 15898) (nil line-prefix #("***" 0 3 (face org-indent)) 15897 . 15898) (nil fontified nil 15897 . 15898) (nil face org-level-4 15898 . 15899) (nil keymap (keymap) 15898 . 15899) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15898 . 15899) (nil line-prefix #("***" 0 3 (face org-indent)) 15898 . 15899)) (25737 15016 24801 41000) 0 nil])
([nil nil ((nil fontified nil 15894 . 15897) (nil line-prefix #("**" 0 2 (face org-indent)) 15894 . 15897) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15894 . 15897) (#("*** " 0 4 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 15894) (15898 . 15901) (nil fontified t 15897 . 15898) (nil line-prefix #("***" 0 3 (face org-indent)) 15897 . 15898) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15897 . 15898) (nil keymap (keymap) 15897 . 15898) (nil face org-level-4 15897 . 15898) (nil fontified t 15896 . 15897) (nil line-prefix #("***" 0 3 (face org-indent)) 15896 . 15897) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15896 . 15897) (nil composition (0 1 [9679]) 15896 . 15897) (nil keymap (keymap) 15896 . 15897) (nil face org-level-4 15896 . 15897) (nil fontified t 15894 . 15896) (nil line-prefix #("***" 0 3 (face org-indent)) 15894 . 15896) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15894 . 15896) (nil face org-hide 15894 . 15896) (nil keymap (keymap) 15894 . 15896) (#("**** " 0 3 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide keymap (keymap)) 3 4 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-4) 4 5 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) keymap (keymap) face org-level-4)) . 15894) (15899 . 15903)) nil (25737 15067 527166 703000) 0 nil])
([nil nil ((nil fontified nil 15894 . 15897) (nil line-prefix #("**" 0 2 (face org-indent)) 15894 . 15897) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15894 . 15897) (#("*** " 0 4 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 15894) (15898 . 15901) (nil fontified t 15897 . 15898) (nil line-prefix #("***" 0 3 (face org-indent)) 15897 . 15898) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15897 . 15898) (nil keymap (keymap) 15897 . 15898) (nil face org-level-4 15897 . 15898) (nil fontified t 15896 . 15897) (nil line-prefix #("***" 0 3 (face org-indent)) 15896 . 15897) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15896 . 15897) (nil composition (0 1 [9679]) 15896 . 15897) (nil keymap (keymap) 15896 . 15897) (nil face org-level-4 15896 . 15897) (nil fontified t 15894 . 15896) (nil line-prefix #("***" 0 3 (face org-indent)) 15894 . 15896) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15894 . 15896) (nil face org-hide 15894 . 15896) (nil keymap (keymap) 15894 . 15896) (#("**** " 0 3 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide keymap (keymap)) 3 4 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-4) 4 5 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) keymap (keymap) face org-level-4)) . 15894) (15899 . 15903)) ((#("*** " 0 2 (fontified nil line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified nil line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-4) 3 4 (fontified nil line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) keymap (keymap) face org-level-4)) . 15899) (undo-tree-id753 . -4) (15894 . 15899) (nil keymap nil 15894 . 15896) (nil face nil 15894 . 15896) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15894 . 15896) (nil line-prefix #("**" 0 2 (face org-indent)) 15894 . 15896) (nil fontified nil 15894 . 15896) (nil face nil 15896 . 15897) (nil keymap nil 15896 . 15897) (nil composition nil 15896 . 15897) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15896 . 15897) (nil line-prefix #("**" 0 2 (face org-indent)) 15896 . 15897) (nil fontified nil 15896 . 15897) (nil face nil 15897 . 15898) (nil keymap nil 15897 . 15898) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15897 . 15898) (nil line-prefix #("**" 0 2 (face org-indent)) 15897 . 15898) (nil fontified nil 15897 . 15898) (#("** " 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-2)) . 15898) (undo-tree-id754 . -3) (15894 . 15898) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15896 . 15897) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15895 . 15896) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15894 . 15895) (nil line-prefix #("*" 0 1 (face org-indent)) 15896 . 15897) (nil line-prefix #("*" 0 1 (face org-indent)) 15895 . 15896) (nil line-prefix #("*" 0 1 (face org-indent)) 15894 . 15895) (nil fontified t 15896 . 15897) (nil fontified t 15895 . 15896) (nil fontified t 15894 . 15895)) (25737 15016 22630 962000) 0 nil])
([nil nil ((nil fontified t 15895 . 15896) (nil line-prefix #("*" 0 1 (face org-indent)) 15895 . 15896) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15895 . 15896) (nil keymap (keymap) 15895 . 15896) (nil face org-level-2 15895 . 15896) (nil fontified t 15894 . 15895) (nil line-prefix #("*" 0 1 (face org-indent)) 15894 . 15895) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15894 . 15895) (nil composition (0 1 [9679]) 15894 . 15895) (nil keymap (keymap) 15894 . 15895) (nil face org-level-2 15894 . 15895) (#("** " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 15894) (15897 . 15899)) nil (25737 15067 527161 182000) 0 nil])
nil
([nil nil ((nil fontified nil 15895 . 15898) (nil line-prefix #("*" 0 1 (face org-indent)) 15895 . 15898) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15895 . 15898) (#("** " 0 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 15894) (15897 . 15901) (nil fontified t 15896 . 15897) (nil line-prefix "" 15896 . 15897) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15896 . 15897) (nil keymap (keymap) 15896 . 15897) (nil face org-level-1 15896 . 15897) (nil fontified t 15895 . 15896) (nil line-prefix "" 15895 . 15896) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15895 . 15896) (nil composition (1 1 [9673]) 15895 . 15896) (nil keymap (keymap) 15895 . 15896) (nil face org-level-1 15895 . 15896) (#("* " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) composition (1 1 [9673]) keymap (keymap) face org-level-1) 1 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 15894) (15896 . 15899)) nil (25737 15067 527157 491000) 0 nil])
([nil nil ((nil fontified t 15898 . 15899) (nil line-prefix #("**" 0 2 (face org-indent)) 15898 . 15899) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15898 . 15899) (nil keymap (keymap) 15898 . 15899) (nil face org-level-3 15898 . 15899) (nil fontified t 15897 . 15898) (nil line-prefix #("**" 0 2 (face org-indent)) 15897 . 15898) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15897 . 15898) (nil composition (2 1 [9675]) 15897 . 15898) (nil keymap (keymap) 15897 . 15898) (nil face org-level-3 15897 . 15898) (nil fontified t 15895 . 15897) (nil line-prefix #("**" 0 2 (face org-indent)) 15895 . 15897) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15895 . 15897) (nil face org-hide 15895 . 15897) (nil keymap (keymap) 15895 . 15897) (#("*** " 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 15894) (15898 . 15903)) nil (25737 15067 527125 835000) 0 nil])
([nil nil ((nil fontified nil 15894 . 15897) (nil line-prefix #("**" 0 2 (face org-indent)) 15894 . 15897) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15894 . 15897) (#("*** " 0 4 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 15894) (15898 . 15901) (nil fontified t 15897 . 15898) (nil line-prefix #("***" 0 3 (face org-indent)) 15897 . 15898) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15897 . 15898) (nil keymap (keymap) 15897 . 15898) (nil face org-level-4 15897 . 15898) (nil fontified t 15896 . 15897) (nil line-prefix #("***" 0 3 (face org-indent)) 15896 . 15897) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15896 . 15897) (nil composition (0 1 [9679]) 15896 . 15897) (nil keymap (keymap) 15896 . 15897) (nil face org-level-4 15896 . 15897) (nil fontified t 15894 . 15896) (nil line-prefix #("***" 0 3 (face org-indent)) 15894 . 15896) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15894 . 15896) (nil face org-hide 15894 . 15896) (nil keymap (keymap) 15894 . 15896) (#("**** " 0 3 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide keymap (keymap)) 3 4 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-4) 4 5 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) keymap (keymap) face org-level-4)) . 15894) (15899 . 15903)) nil (25737 15067 527120 300000) 0 nil])
([nil nil ((nil fontified t 15895 . 15896) (nil line-prefix #("*" 0 1 (face org-indent)) 15895 . 15896) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15895 . 15896) (nil keymap (keymap) 15895 . 15896) (nil face org-level-2 15895 . 15896) (nil fontified t 15894 . 15895) (nil line-prefix #("*" 0 1 (face org-indent)) 15894 . 15895) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15894 . 15895) (nil composition (0 1 [9679]) 15894 . 15895) (nil keymap (keymap) 15894 . 15895) (nil face org-level-2 15894 . 15895) (#("** " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 15894) (15897 . 15899)) nil (25737 15067 527113 442000) 0 nil])
([nil nil ((nil fontified nil 15895 . 15898) (nil line-prefix #("*" 0 1 (face org-indent)) 15895 . 15898) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15895 . 15898) (#("** " 0 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 15894) (15897 . 15901) (nil fontified t 15896 . 15897) (nil line-prefix "" 15896 . 15897) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15896 . 15897) (nil keymap (keymap) 15896 . 15897) (nil face org-level-1 15896 . 15897) (nil fontified t 15895 . 15896) (nil line-prefix "" 15895 . 15896) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15895 . 15896) (nil composition (1 1 [9673]) 15895 . 15896) (nil keymap (keymap) 15895 . 15896) (nil face org-level-1 15895 . 15896) (#("* " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) composition (1 1 [9673]) keymap (keymap) face org-level-1) 1 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 15894) (15896 . 15899)) nil (25737 15067 527109 189000) 0 nil])
([nil nil ((nil fontified t 15898 . 15899) (nil line-prefix #("**" 0 2 (face org-indent)) 15898 . 15899) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15898 . 15899) (nil keymap (keymap) 15898 . 15899) (nil face org-level-3 15898 . 15899) (nil fontified t 15897 . 15898) (nil line-prefix #("**" 0 2 (face org-indent)) 15897 . 15898) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15897 . 15898) (nil composition (2 1 [9675]) 15897 . 15898) (nil keymap (keymap) 15897 . 15898) (nil face org-level-3 15897 . 15898) (nil fontified t 15895 . 15897) (nil line-prefix #("**" 0 2 (face org-indent)) 15895 . 15897) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15895 . 15897) (nil face org-hide 15895 . 15897) (nil keymap (keymap) 15895 . 15897) (#("*** " 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 15894) (15898 . 15903)) nil (25737 15067 527104 236000) 0 nil])
([nil nil ((nil fontified nil 15894 . 15897) (nil line-prefix #("**" 0 2 (face org-indent)) 15894 . 15897) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 15894 . 15897) (#("*** " 0 4 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 15894) (15898 . 15901) (nil fontified t 15897 . 15898) (nil line-prefix #("***" 0 3 (face org-indent)) 15897 . 15898) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15897 . 15898) (nil keymap (keymap) 15897 . 15898) (nil face org-level-4 15897 . 15898) (nil fontified t 15896 . 15897) (nil line-prefix #("***" 0 3 (face org-indent)) 15896 . 15897) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15896 . 15897) (nil composition (0 1 [9679]) 15896 . 15897) (nil keymap (keymap) 15896 . 15897) (nil face org-level-4 15896 . 15897) (nil fontified t 15894 . 15896) (nil line-prefix #("***" 0 3 (face org-indent)) 15894 . 15896) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 15894 . 15896) (nil face org-hide 15894 . 15896) (nil keymap (keymap) 15894 . 15896) (#("**** " 0 3 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide keymap (keymap)) 3 4 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-4) 4 5 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) keymap (keymap) face org-level-4)) . 15894) (15899 . 15903)) nil (25737 15067 527098 461000) 0 nil])
([nil nil ((nil fontified t 15895 . 15896) (nil line-prefix #("*" 0 1 (face org-indent)) 15895 . 15896) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15895 . 15896) (nil keymap (keymap) 15895 . 15896) (nil face org-level-2 15895 . 15896) (nil fontified t 15894 . 15895) (nil line-prefix #("*" 0 1 (face org-indent)) 15894 . 15895) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15894 . 15895) (nil composition (0 1 [9679]) 15894 . 15895) (nil keymap (keymap) 15894 . 15895) (nil face org-level-2 15894 . 15895) (#("** " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 15894) (15897 . 15899)) nil (25737 15067 527093 95000) 0 nil])
([nil nil ((nil fontified nil 15895 . 15898) (nil line-prefix #("*" 0 1 (face org-indent)) 15895 . 15898) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 15895 . 15898) (#("** " 0 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 15894) (15897 . 15901) (nil fontified t 15896 . 15897) (nil line-prefix "" 15896 . 15897) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15896 . 15897) (nil keymap (keymap) 15896 . 15897) (nil face org-level-1 15896 . 15897) (nil fontified t 15895 . 15896) (nil line-prefix "" 15895 . 15896) (nil wrap-prefix #("* " 0 2 (face org-indent)) 15895 . 15896) (nil composition (1 1 [9673]) 15895 . 15896) (nil keymap (keymap) 15895 . 15896) (nil face org-level-1 15895 . 15896) (#("* " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) composition (1 1 [9673]) keymap (keymap) face org-level-1) 1 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 15894) (15896 . 15899)) nil (25737 15067 527089 217000) 0 nil])
([nil nil ((16210 . 16211) (16210 . 16254) (#("src" 0 3 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . 16210) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -3) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -2) (undo-tree-id1405 . -2) (undo-tree-id1406 . -2) (undo-tree-id1407 . -2) (undo-tree-id1408 . -2) (undo-tree-id1409 . -2) (undo-tree-id1410 . -2) (undo-tree-id1411 . -2) (undo-tree-id1412 . -3) (undo-tree-id1413 . -3) (undo-tree-id1414 . -3) (undo-tree-id1415 . -3) (undo-tree-id1416 . -3) (undo-tree-id1417 . -3) (undo-tree-id1418 . -3) (undo-tree-id1419 . -3) 16213 (16211 . 16213) (#("c" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -16211) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) 16212 (16210 . 16212) (#("c" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -16210) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (#("r" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -16211) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) 16212 (16210 . 16212) (16209 . 16210)) nil (25737 15067 527078 878000) 0 nil])
([nil nil ((16245 . 16247) (#("  " 0 2 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("          " 0 8 (face org-indent) 8 10 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t)) . 16244) (undo-tree-id1334 . -2) (undo-tree-id1335 . -2) (undo-tree-id1336 . -2) (undo-tree-id1337 . -2) (undo-tree-id1338 . -2) (undo-tree-id1339 . -2) (undo-tree-id1340 . -2) (undo-tree-id1341 . -2) (undo-tree-id1342 . -2) (16244 . 16247) (#("  " 0 2 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("          " 0 8 (face org-indent) 8 10 (face org-indent)) font-lock-fontified t font-lock-multiline t src-block t)) . 16243) (undo-tree-id1343 . -2) (undo-tree-id1344 . -2) (undo-tree-id1345 . -2) (undo-tree-id1346 . -2) (undo-tree-id1347 . -2) (undo-tree-id1348 . -2) (undo-tree-id1349 . -2) (undo-tree-id1350 . -2) (undo-tree-id1351 . -2) (undo-tree-id1352 . -2) (16245 . 16246) (16242 . 16245) 16211) nil (25737 15067 526951 103000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16261 . 16262) (nil fontified nil 16247 . 16262) (16247 . 16262) 16246) nil (25737 15067 526934 755000) 0 nil])
([nil nil ((#("  WHEN AND UNLESS
" 0 2 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("          " 0 8 (face org-indent) 8 10 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t) 2 16 (line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("          " 0 8 (face org-indent) 8 10 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t src-block t) 16 17 (line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("          " 0 8 (face org-indent) 8 10 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t font-lock-multiline t src-block t) 17 18 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("          " 0 8 (face org-indent) 8 10 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t)) . 16245) (undo-tree-id1295 . -2) (undo-tree-id1296 . 1) (undo-tree-id1297 . -2) (undo-tree-id1298 . -16) (undo-tree-id1299 . -2) (undo-tree-id1300 . -2) (undo-tree-id1301 . -2) (undo-tree-id1302 . -2) (undo-tree-id1303 . -2) (undo-tree-id1304 . -2) (undo-tree-id1305 . -2) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -17) (undo-tree-id1322 . -16) (undo-tree-id1323 . -16) (undo-tree-id1324 . -16) (undo-tree-id1325 . -16) (undo-tree-id1326 . -16) (undo-tree-id1327 . -16) (undo-tree-id1328 . -16) (undo-tree-id1329 . -16) (undo-tree-id1330 . -16) (undo-tree-id1331 . -16) (undo-tree-id1332 . -16) (undo-tree-id1333 . -16)) nil (25737 15067 526931 858000) 0 nil])
([nil nil ((16209 . 16210) (16209 . 16214)) nil (25737 15067 526900 291000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)) font-lock-multiline t org-emphasis t)) . -16213) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (#(" " 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) keymap (keymap) face org-level-4)) . -16214) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) 16215) nil (25737 15067 526896 865000) 0 nil])
([nil nil ((16213 . 16214)) nil (25737 15067 526855 486000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16216 . 16217) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -16232) (16214 . 16233) 16213) nil (25737 15067 526854 261000) 0 nil])
([nil nil ((#("*** 

#+BEGIN_SRC lisp    :results output 


  

#+END_SRC


*** 


#+BEGIN_SRC lisp    :results output 


  

#+END_SRC


*** 


#+BEGIN_SRC lisp    :results output 


  

#+END_SRC


*** 


#+BEGIN_SRC lisp    :results output 


  

#+END_SRC


*** 


#+BEGIN_SRC lisp    :results output 


  

#+END_SRC


**** 
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 5 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 5 6 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 6 42 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 42 43 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 43 44 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block)) 44 45 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block)) 45 47 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 47 48 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 48 49 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block)) 49 58 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 58 59 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 59 60 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 60 61 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 61 63 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 63 64 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 64 65 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 65 66 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 66 67 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 67 68 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 68 104 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 104 105 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 105 106 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block)) 106 107 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block)) 107 109 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 109 110 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 110 111 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block)) 111 120 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 120 121 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 121 122 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 122 123 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 123 125 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 125 126 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 126 127 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 127 128 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 128 129 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 129 130 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 130 166 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 166 167 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 167 168 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block)) 168 169 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block)) 169 171 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 171 172 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 172 173 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block)) 173 182 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 182 183 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 183 184 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 184 185 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 185 187 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 187 188 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 188 189 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 189 190 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 190 191 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 191 192 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 192 228 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 228 229 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 229 230 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block)) 230 231 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block)) 231 233 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 233 234 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 234 235 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block)) 235 244 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 244 245 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 245 246 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 246 247 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 247 249 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 249 250 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 250 251 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 251 252 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 252 253 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 253 254 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 254 290 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 290 291 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 291 292 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block)) 292 293 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block)) 293 295 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 295 296 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 296 297 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block)) 297 306 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 306 307 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 307 308 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 308 309 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent))) 309 312 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide keymap (keymap)) 312 313 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) composition (0 1 [9679]) keymap (keymap) face org-level-4) 313 314 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) keymap (keymap) face org-level-4) 314 315 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)))) . 15894) (undo-tree-id946 . -59) (undo-tree-id947 . 255) (undo-tree-id948 . 273) (undo-tree-id949 . -58) (undo-tree-id950 . -314) (undo-tree-id951 . 311) (undo-tree-id952 . -314) (undo-tree-id953 . -4) (undo-tree-id954 . -4) (undo-tree-id955 . -4) (undo-tree-id956 . -4) (undo-tree-id957 . -4) (undo-tree-id958 . -4) (undo-tree-id959 . -4) (undo-tree-id960 . -4) (undo-tree-id961 . -4) (undo-tree-id962 . -4) (undo-tree-id963 . -4) (undo-tree-id964 . -4) (undo-tree-id965 . -4) (undo-tree-id966 . -4) (undo-tree-id967 . -4) (undo-tree-id968 . -4) (undo-tree-id969 . -4) (undo-tree-id970 . -4) (undo-tree-id971 . -4) (undo-tree-id972 . -4) (undo-tree-id973 . -4) (undo-tree-id974 . -4) (undo-tree-id975 . -4) (undo-tree-id976 . -4) (undo-tree-id977 . -4) (undo-tree-id978 . -4) (undo-tree-id979 . -4) (undo-tree-id980 . -4) (undo-tree-id981 . -4) (undo-tree-id982 . -4) (undo-tree-id983 . -4) (undo-tree-id984 . -4) (undo-tree-id985 . -4) (undo-tree-id986 . -4) (undo-tree-id987 . -4) (undo-tree-id988 . -4) (undo-tree-id989 . -4) (undo-tree-id990 . -4) (undo-tree-id991 . -4) (undo-tree-id992 . -4) (undo-tree-id993 . -4) (undo-tree-id994 . -4) (undo-tree-id995 . -4) (undo-tree-id996 . -4) (undo-tree-id997 . -4) (undo-tree-id998 . -4) (undo-tree-id999 . -4) (undo-tree-id1000 . -4) (undo-tree-id1001 . -4) (undo-tree-id1002 . -4) (undo-tree-id1003 . -4) (undo-tree-id1004 . -4) (undo-tree-id1005 . -4) (undo-tree-id1006 . -4) (undo-tree-id1007 . -4) (undo-tree-id1008 . -59) (undo-tree-id1009 . -315) (undo-tree-id1010 . -315) (undo-tree-id1011 . -315) (undo-tree-id1012 . -315) (undo-tree-id1013 . -315) (undo-tree-id1014 . -315) (undo-tree-id1015 . -315) (undo-tree-id1016 . -315) (undo-tree-id1017 . -4) (undo-tree-id1018 . -4) (undo-tree-id1019 . -4) (undo-tree-id1020 . -4) (undo-tree-id1021 . -4) (undo-tree-id1022 . -4) (undo-tree-id1023 . -4) (undo-tree-id1024 . -4) (undo-tree-id1025 . -4) (undo-tree-id1026 . -4) (undo-tree-id1027 . -4) (undo-tree-id1028 . -4) (undo-tree-id1029 . -4) (undo-tree-id1030 . -4) (undo-tree-id1031 . -4) (undo-tree-id1032 . -4) (undo-tree-id1033 . -4) (undo-tree-id1034 . -4) (undo-tree-id1035 . -4) (undo-tree-id1036 . -4) (undo-tree-id1037 . -4) (undo-tree-id1038 . -4) (undo-tree-id1039 . -4) (undo-tree-id1040 . -4) (undo-tree-id1041 . -4) (undo-tree-id1042 . -4) (undo-tree-id1043 . -4) (undo-tree-id1044 . -4) (undo-tree-id1045 . -4) (undo-tree-id1046 . -4) (undo-tree-id1047 . -4) (undo-tree-id1048 . -4) (undo-tree-id1049 . -4) (undo-tree-id1050 . -4) (undo-tree-id1051 . -4) (undo-tree-id1052 . -4) (undo-tree-id1053 . -4) (undo-tree-id1054 . -4) (undo-tree-id1055 . -4) (undo-tree-id1056 . -4) (undo-tree-id1057 . -4) (undo-tree-id1058 . -4) (undo-tree-id1059 . -4) (undo-tree-id1060 . -4) (undo-tree-id1061 . -4) (undo-tree-id1062 . -4) (undo-tree-id1063 . -4) (undo-tree-id1064 . -4) (undo-tree-id1065 . -4) (undo-tree-id1066 . -4) (undo-tree-id1067 . -4) (undo-tree-id1068 . -4) (undo-tree-id1069 . -4) (undo-tree-id1070 . -4) (undo-tree-id1071 . -4) (undo-tree-id1072 . -4) (undo-tree-id1073 . -4) (undo-tree-id1074 . -4) (undo-tree-id1075 . -4) (undo-tree-id1076 . -4) (undo-tree-id1077 . -4) (undo-tree-id1078 . -4) (undo-tree-id1079 . -4) (undo-tree-id1080 . -4) (undo-tree-id1081 . -4) (undo-tree-id1082 . -4) (undo-tree-id1083 . -4) (undo-tree-id1084 . -4) (undo-tree-id1085 . -4) (undo-tree-id1086 . -4) (undo-tree-id1087 . -4) (undo-tree-id1088 . -4) (undo-tree-id1089 . -4) (undo-tree-id1090 . -4) (undo-tree-id1091 . -4) (undo-tree-id1092 . -4) (undo-tree-id1093 . -4) (undo-tree-id1094 . -4) (undo-tree-id1095 . -4) (undo-tree-id1096 . -4) (undo-tree-id1097 . -4) (undo-tree-id1098 . -315) (undo-tree-id1099 . -315) (undo-tree-id1100 . -315) (undo-tree-id1101 . -315) (undo-tree-id1102 . -315) (undo-tree-id1103 . -315) (undo-tree-id1104 . -315) (undo-tree-id1105 . -314) (undo-tree-id1106 . -314) (undo-tree-id1107 . -314) (undo-tree-id1108 . -314) (undo-tree-id1109 . -314) (undo-tree-id1110 . -314) (undo-tree-id1111 . -314) (undo-tree-id1112 . -315) (undo-tree-id1113 . -315) (undo-tree-id1114 . -315) (undo-tree-id1115 . -315) (undo-tree-id1116 . -315) (undo-tree-id1117 . -315) (undo-tree-id1118 . -315) (undo-tree-id1119 . -315) (undo-tree-id1120 . -315) (undo-tree-id1121 . -315) (undo-tree-id1122 . -315) (undo-tree-id1123 . -315) (undo-tree-id1124 . -4) (undo-tree-id1125 . -4) (undo-tree-id1126 . -4) (undo-tree-id1127 . -4) (undo-tree-id1128 . -4) (undo-tree-id1129 . -4) (undo-tree-id1130 . -4) (undo-tree-id1131 . -4) (undo-tree-id1132 . -4) (undo-tree-id1133 . -4) (undo-tree-id1134 . -4) (undo-tree-id1135 . -4) (undo-tree-id1136 . -4) (undo-tree-id1137 . -4) (undo-tree-id1138 . -4) (undo-tree-id1139 . -4) (undo-tree-id1140 . -4) (undo-tree-id1141 . -4) (undo-tree-id1142 . -4) (undo-tree-id1143 . -4) (undo-tree-id1144 . -4) (undo-tree-id1145 . -4) (undo-tree-id1146 . -4) (undo-tree-id1147 . -4) (undo-tree-id1148 . -4) (undo-tree-id1149 . -4) (undo-tree-id1150 . -4) (undo-tree-id1151 . -4) (undo-tree-id1152 . -4) (undo-tree-id1153 . -4) (undo-tree-id1154 . -4) (undo-tree-id1155 . -4) (undo-tree-id1156 . -4) (undo-tree-id1157 . -4) (undo-tree-id1158 . -4) (undo-tree-id1159 . -4) (undo-tree-id1160 . -4) (undo-tree-id1161 . -4) (undo-tree-id1162 . -4) (undo-tree-id1163 . -4) (undo-tree-id1164 . -4) (undo-tree-id1165 . -4) (undo-tree-id1166 . -4) (undo-tree-id1167 . -4) (undo-tree-id1168 . -4) (undo-tree-id1169 . -4) (undo-tree-id1170 . -4) (undo-tree-id1171 . -4) (undo-tree-id1172 . -4) (undo-tree-id1173 . -4) (undo-tree-id1174 . -4) (undo-tree-id1175 . -4) (undo-tree-id1176 . -4) (undo-tree-id1177 . -4) (undo-tree-id1178 . -4) (undo-tree-id1179 . -4) (undo-tree-id1180 . -4) (undo-tree-id1181 . -4) (undo-tree-id1182 . -4) (undo-tree-id1183 . -4) (undo-tree-id1184 . -4) (undo-tree-id1185 . -4) (undo-tree-id1186 . -4) (undo-tree-id1187 . -4) (undo-tree-id1188 . -4) (undo-tree-id1189 . -4) (undo-tree-id1190 . -4) (undo-tree-id1191 . -4) (undo-tree-id1192 . -315) (undo-tree-id1193 . -315) (undo-tree-id1194 . -315) (undo-tree-id1195 . -315) (undo-tree-id1196 . -315) (undo-tree-id1197 . -315) (undo-tree-id1198 . -315) (undo-tree-id1199 . -315) (undo-tree-id1200 . -315) (undo-tree-id1201 . -315) (undo-tree-id1202 . -315) (undo-tree-id1203 . -315) (undo-tree-id1204 . -315) (undo-tree-id1205 . -315) (undo-tree-id1206 . -315) (undo-tree-id1207 . -315) (undo-tree-id1208 . -315) (undo-tree-id1209 . -315) (undo-tree-id1210 . -315) (undo-tree-id1211 . -315) (undo-tree-id1212 . -315) (undo-tree-id1213 . -315) (undo-tree-id1214 . -315) (undo-tree-id1215 . -315) (undo-tree-id1216 . -315) (undo-tree-id1217 . -315) (undo-tree-id1218 . -315) (undo-tree-id1219 . -315) (undo-tree-id1220 . -315) (undo-tree-id1221 . -315) (undo-tree-id1222 . -315) (undo-tree-id1223 . -315) (undo-tree-id1224 . -314) (undo-tree-id1225 . -314) (undo-tree-id1226 . -314) (undo-tree-id1227 . -314) (undo-tree-id1228 . -314) (undo-tree-id1229 . -314) (undo-tree-id1230 . -314) (undo-tree-id1231 . -314) (undo-tree-id1232 . -314) (undo-tree-id1233 . -314) (undo-tree-id1234 . -314) (undo-tree-id1235 . -314) (undo-tree-id1236 . -314) (undo-tree-id1237 . -314) (undo-tree-id1238 . -314) 16208) nil (25737 15067 526838 820000) 0 nil])
([nil nil ((nil keymap (keymap) 15897 . 15898) (nil face org-level-3 15897 . 15898) (nil fontified nil 15897 . 15898) (nil line-prefix #("      " 0 6 (face org-indent)) 15897 . 15898) (nil wrap-prefix #("      " 0 6 (face org-indent)) 15897 . 15898) (15897 . 15898) (#("   " 0 1 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 1 2 (font-lock-fontified t src-block t fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 2 3 (font-lock-fontified t src-block t fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) rear-nonsticky t)) . 15897) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -3) (undo-tree-id932 . -3) (undo-tree-id933 . -3) (undo-tree-id934 . -3) (undo-tree-id935 . -3) (undo-tree-id936 . -3) (undo-tree-id937 . -3) (undo-tree-id938 . -3) (undo-tree-id939 . -3) (undo-tree-id940 . -3) (undo-tree-id941 . -3) (undo-tree-id942 . -3) (undo-tree-id943 . -1) (#("
" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . -15898) (undo-tree-id944 . -1) (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -15894) (undo-tree-id945 . 1)) nil (25737 15067 523230 338000) 0 nil])
([nil nil ((15961 . 15962)) nil (25737 15067 523201 692000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 15073) (undo-tree-id1553 . -1) (t 25737 15067 558685 667000)) nil (25737 15084 613493 51000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 15891) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1)) nil (25737 15084 613489 662000) 0 nil])
([nil nil ((15924 . 15929)) nil (25737 15084 613752 411000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 15926) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1)) nil (25737 15087 837415 645000) 0 nil] [nil nil ((#("i" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 15927) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1)) ((15927 . 15928)) (25737 15084 613318 865000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15927 . 15928) (nil fontified nil 15927 . 15928) (15927 . 15928) 15926) nil (25737 15087 837394 999000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 16198 . 16199) (nil fontified nil 16191 . 16199) (nil fontified nil 16149 . 16191) (nil fontified nil 16139 . 16149) (nil fontified nil 16130 . 16139) (nil fontified nil 16115 . 16130) (nil fontified nil 16074 . 16115) (nil fontified nil 16064 . 16074) (nil fontified nil 16055 . 16064) (nil fontified nil 16038 . 16055) (nil fontified nil 16000 . 16038) (nil fontified nil 15979 . 16000) (nil fontified nil 15951 . 15979) (15951 . 16199) (t 25737 15087 862647 96000)) nil (25737 15132 819974 426000) 0 nil])
([nil nil ((15951 . 15953) (15979 . 15983) (16000 . 16002) (16038 . 16042) (16055 . 16061) (16064 . 16070) (16074 . 16088) (16115 . 16119) (16130 . 16136) (16139 . 16145) (16149 . 16163) (16191 . 16195) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 16200) (undo-tree-id1562 . 2) (undo-tree-id1563 . -2) 15950) nil (25737 15132 819967 939000) 0 nil])
([nil nil ((16284 . 16288) (16283 . 16284) (t 25737 15132 850577 462000) 16283) nil (25737 15179 110152 928000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16319 . 16320) (nil fontified nil 16288 . 16320) (16288 . 16320) 16287) nil (25737 15179 110151 296000) 0 nil])
([nil nil ((16321 . 16322) (16320 . 16321) 16319) nil (25737 15179 110145 996000) 0 nil])
([nil nil ((16322 . 16323) (t 25737 15179 138526 996000)) nil (25737 15184 931694 690000) 0 nil])
([nil nil ((16323 . 16324)) nil (25737 15184 931689 280000) 0 nil])
([nil nil ((#(" 
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent))) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . 16322) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (t 25737 15184 962522 75000)) nil (25737 15247 53710 719000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -16321) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) 16322) nil (25737 15247 53703 27000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . -16320) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) 16321) nil (25737 15247 53556 313000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap))) . 16284)) nil (25737 15247 53477 236000) 0 nil])
([nil nil ((#("CASE STUDY: A TIC-TAC-TOE PLAYER" 0 31 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 31 32 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t rear-nonsticky t face org-level-2)) . 16287) (undo-tree-id1565 . -32) (undo-tree-id1566 . -31) (undo-tree-id1567 . -32) (undo-tree-id1568 . -32) (undo-tree-id1569 . -32) (undo-tree-id1570 . -32) (undo-tree-id1571 . -32) (undo-tree-id1572 . -32) (undo-tree-id1573 . -32) (undo-tree-id1574 . -32) (undo-tree-id1575 . -32) (undo-tree-id1576 . -32) (undo-tree-id1577 . -32) (undo-tree-id1578 . -32) (undo-tree-id1579 . -32) (undo-tree-id1580 . -32) (undo-tree-id1581 . -32) (undo-tree-id1582 . -32) (undo-tree-id1583 . -32) (undo-tree-id1584 . -32) (undo-tree-id1585 . -32) (undo-tree-id1586 . -32) (undo-tree-id1587 . -32) (undo-tree-id1588 . -32) (undo-tree-id1589 . -32) (undo-tree-id1590 . -32) (undo-tree-id1591 . -32) (undo-tree-id1592 . -32) (undo-tree-id1593 . -32) (undo-tree-id1594 . -32) (undo-tree-id1595 . -32) (undo-tree-id1596 . -32) (undo-tree-id1597 . -32) (undo-tree-id1598 . -32) (undo-tree-id1599 . -32) (undo-tree-id1600 . -32) (undo-tree-id1601 . -32) (undo-tree-id1602 . -32) (undo-tree-id1603 . -32) (undo-tree-id1604 . -32) (undo-tree-id1605 . -32) (undo-tree-id1606 . -32) (undo-tree-id1607 . -32) (undo-tree-id1608 . -32) (undo-tree-id1609 . -32) (undo-tree-id1610 . -32) (undo-tree-id1611 . -32) (undo-tree-id1612 . -32) (undo-tree-id1613 . -32) (undo-tree-id1614 . -32) (undo-tree-id1615 . -32) (undo-tree-id1616 . -32) (undo-tree-id1617 . -32) (undo-tree-id1618 . -32) (undo-tree-id1619 . -32) (undo-tree-id1620 . -32) (undo-tree-id1621 . -32) (undo-tree-id1622 . -32) (undo-tree-id1623 . -32) (undo-tree-id1624 . -32) (undo-tree-id1625 . -32) (undo-tree-id1626 . -32) (undo-tree-id1627 . -32) (undo-tree-id1628 . -32) (undo-tree-id1629 . -32) (undo-tree-id1630 . -32) (undo-tree-id1631 . -32) (undo-tree-id1632 . -32) (undo-tree-id1633 . -32) (undo-tree-id1634 . -32) (undo-tree-id1635 . -32) (undo-tree-id1636 . -32) (undo-tree-id1637 . -32) (undo-tree-id1638 . -32) (undo-tree-id1639 . -32) (undo-tree-id1640 . -32) (undo-tree-id1641 . -32) (undo-tree-id1642 . -32) (undo-tree-id1643 . -32) (undo-tree-id1644 . -32) (undo-tree-id1645 . -32) (undo-tree-id1646 . -32) (undo-tree-id1647 . -32) (undo-tree-id1648 . -32) (undo-tree-id1649 . -32) (undo-tree-id1650 . -32) (undo-tree-id1651 . -32) (undo-tree-id1652 . -32) (undo-tree-id1653 . -32) (undo-tree-id1654 . -32) (undo-tree-id1655 . -32) (undo-tree-id1656 . -32) (undo-tree-id1657 . -32) (undo-tree-id1658 . -32) (undo-tree-id1659 . -32) (undo-tree-id1660 . -32) (undo-tree-id1661 . -32) (undo-tree-id1662 . -32) (undo-tree-id1663 . -32) (undo-tree-id1664 . -32) (undo-tree-id1665 . -32) (undo-tree-id1666 . -32) (undo-tree-id1667 . -32) (undo-tree-id1668 . -32)) nil (25737 15247 53472 771000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . 15045) (undo-tree-id1564 . -1)) nil (25737 15247 53203 995000) 0 nil])
([nil nil ((16286 . 16287)) nil (25737 15247 53191 562000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 15040) (t 25737 15247 78488 5000)) nil (25737 15255 278739 371000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16313 . 16314) (nil fontified nil 16285 . 16314) (16285 . 16314) 16284) nil (25737 15294 575799 851000) 0 nil] [nil nil ((#(" " 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 16284) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (16285 . 16286)) ((#("
" 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 16285) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (16284 . 16285)) (25737 15255 278288 788000) 0 nil])
([nil nil ((16314 . 16319)) nil (25737 15294 575798 801000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 16318) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1)) nil (25737 15294 575797 704000) 0 nil])
([nil nil ((16318 . 16320) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . -16318) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) 16319 (16318 . 16319)) nil (25737 15294 575789 924000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16337 . 16338) (nil fontified nil 16320 . 16338) (16320 . 16338) 16319) nil (25737 15294 575773 919000) 0 nil])
([nil nil ((16374 . 16380) (16368 . 16374) (16362 . 16368) (16356 . 16362) (16350 . 16356) (16344 . 16350) (16338 . 16344)) nil (25737 15294 575768 719000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16369 . 16370) (nil fontified nil 16344 . 16370) (16344 . 16370) 16343 (t 25737 15294 646483 56000)) nil (25737 15387 836631 493000) 0 nil])
([nil nil ((16340 . 16384) (#("src" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 16340) (undo-tree-id2008 . -1) (undo-tree-id2009 . -3) 16343 (16340 . 16343) (16338 . 16340)) nil (25737 15387 836630 14000) 0 nil])
([nil nil ((16351 . 16356)) nil (25737 15387 836627 507000) 0 nil])
([nil nil ((16379 . 16381) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 16378) (undo-tree-id2005 . -2) (16378 . 16381) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 16377) (undo-tree-id2006 . -2) (16379 . 16380) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 16380) (undo-tree-id2007 . -2) 16377 (16376 . 16379) 16355) nil (25737 15387 836625 915000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16417 . 16418) (nil fontified nil 16393 . 16418) (nil fontified nil 16378 . 16393) (16378 . 16418)) nil (25737 15387 836621 887000) 0 nil])
([nil nil ((16378 . 16380) (16393 . 16397) 16377) nil (25737 15387 836620 252000) 0 nil])
([nil nil ((16429 . 16431) 16377 (16427 . 16429) (#("    " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 2 4 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 16426) (undo-tree-id2003 . -4) (16428 . 16431) 16377 (16426 . 16428) (#("    " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 2 4 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 16425) (undo-tree-id2004 . -4) (16429 . 16430) (#("
" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 16427) (16430 . 16431) 16377 (16424 . 16427) 16423) nil (25737 15387 836615 330000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16500 . 16501) (nil fontified nil 16470 . 16501) (nil fontified nil 16431 . 16470) (16431 . 16501) 16430 (t 25737 15387 866519 986000)) nil (25737 15424 916744 300000) 0 nil])
([nil nil ((16442 . 16443) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16442)) nil (25737 15424 916742 992000) 0 nil])
([nil nil ((16470 . 16476) 16377) nil (25737 15424 916742 89000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 16425) (undo-tree-id2127 . 1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1)) nil (25737 15424 916739 742000) 0 nil])
([nil nil ((16424 . 16425) (#("}" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -16424) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . 1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (#("." 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -16425) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) 16426 (16425 . 16426) (16424 . 16425)) nil (25737 15424 916716 176000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 16429) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -2) (undo-tree-id2046 . -2) (undo-tree-id2047 . -2) (undo-tree-id2048 . -2) (undo-tree-id2049 . -2) (undo-tree-id2050 . -2) (undo-tree-id2051 . -2) (undo-tree-id2052 . -2) (undo-tree-id2053 . -2) (undo-tree-id2054 . -2) (undo-tree-id2055 . -2) (undo-tree-id2056 . -2) (undo-tree-id2057 . -2) (undo-tree-id2058 . -2) (undo-tree-id2059 . -1) (undo-tree-id2060 . -2) (undo-tree-id2061 . -2) (undo-tree-id2062 . -2) (undo-tree-id2063 . -2) (undo-tree-id2064 . -2) (undo-tree-id2065 . -2) (undo-tree-id2066 . -2) (undo-tree-id2067 . -2) (undo-tree-id2068 . -2) (undo-tree-id2069 . -2) (undo-tree-id2070 . -2) (undo-tree-id2071 . -2) (undo-tree-id2072 . -2) (undo-tree-id2073 . -2) (undo-tree-id2074 . -2) (undo-tree-id2075 . -2) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -2) (undo-tree-id2085 . -1) (undo-tree-id2086 . -2) (undo-tree-id2087 . -2) (undo-tree-id2088 . -2) (undo-tree-id2089 . -2) (undo-tree-id2090 . -2) (undo-tree-id2091 . -2) (undo-tree-id2092 . -2) 16377) nil (25737 15424 916692 934000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 16472) 16377) nil (25737 15424 916618 768000) 0 nil])
([nil nil ((16505 . 16507) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 16504) (undo-tree-id2166 . -2) (undo-tree-id2167 . -2) (undo-tree-id2168 . -2) (undo-tree-id2169 . -2) (undo-tree-id2170 . -2) (undo-tree-id2171 . -2) (undo-tree-id2172 . -2) (undo-tree-id2173 . -2) (undo-tree-id2174 . -2) (undo-tree-id2175 . -2) (undo-tree-id2176 . -2) (undo-tree-id2177 . -2) (undo-tree-id2178 . -2) (undo-tree-id2179 . -2) (undo-tree-id2180 . -2) (undo-tree-id2181 . -2) (undo-tree-id2182 . -2) (undo-tree-id2183 . -2) (undo-tree-id2184 . -2) (undo-tree-id2185 . -2) (undo-tree-id2186 . -2) (undo-tree-id2187 . -2) (undo-tree-id2188 . -2) (undo-tree-id2189 . -2) (16506 . 16507) (16503 . 16506) (t 25737 15424 946549 962000) 16479) nil (25737 15427 791949 933000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16667 . 16668) (nil fontified nil 16655 . 16668) (nil fontified nil 16621 . 16655) (nil fontified nil 16606 . 16621) (nil fontified nil 16575 . 16606) (nil fontified nil 16547 . 16575) (nil fontified nil 16507 . 16547) (16507 . 16668) 16506 (t 25737 15427 814552 612000)) nil (25737 15450 789601 784000) 0 nil])
([nil nil ((16547 . 16551) (16575 . 16581) (16606 . 16612) (16621 . 16629) (16655 . 16663) 16377) nil (25737 15450 789595 525000) 0 nil])
([nil nil ((16702 . 16704) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 16701) (undo-tree-id2190 . -2) (undo-tree-id2191 . -2) (undo-tree-id2192 . -2) (undo-tree-id2193 . -2) (undo-tree-id2194 . -2) (undo-tree-id2195 . -2) (undo-tree-id2196 . -2) (undo-tree-id2197 . -2) (undo-tree-id2198 . -2) (undo-tree-id2199 . -2) (undo-tree-id2200 . -2) (undo-tree-id2201 . -2) (undo-tree-id2202 . -2) (undo-tree-id2203 . -2) (undo-tree-id2204 . -2) (undo-tree-id2205 . -2) (undo-tree-id2206 . -2) (undo-tree-id2207 . -2) (undo-tree-id2208 . -2) (undo-tree-id2209 . -2) (undo-tree-id2210 . -2) (undo-tree-id2211 . -2) (undo-tree-id2212 . -2) (undo-tree-id2213 . -2) (16700 . 16704) (t 25737 15450 818575 526000)) nil (25737 15455 638171 445000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16837 . 16838) (nil fontified nil 16805 . 16838) (nil fontified nil 16773 . 16805) (nil fontified nil 16743 . 16773) (nil fontified nil 16704 . 16743) (16704 . 16838) 16703 (t 25737 15455 670580 728000)) nil (25737 15475 103546 287000) 0 nil])
([nil nil ((16743 . 16747) (16773 . 16779) (16805 . 16811) 16377) nil (25737 15475 103540 668000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16983 . 16984) (nil fontified nil 16942 . 16984) (nil fontified nil 16927 . 16942) (nil fontified nil 16892 . 16927) (nil fontified nil 16856 . 16892) (16856 . 16984) (t 25737 15475 126602 831000)) nil (25737 15553 958736 477000) 0 nil])
([nil nil ((16380 . 16382) (16395 . 16396) (16399 . 16400) (16427 . 16428) (16429 . 16430) (16468 . 16470) (16505 . 16507) (16551 . 16553) (16579 . 16580) (16585 . 16586) (16616 . 16617) (16622 . 16623) (16637 . 16638) (16645 . 16646) (16679 . 16680) (16687 . 16688) (16702 . 16704) (16743 . 16745) (16783 . 16785) (16815 . 16816) (16821 . 16822) (16856 . 16858) (16892 . 16894) (16927 . 16929) (16942 . 16946) 16377) nil (25737 15553 958733 784000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16380) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16397) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16402) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16431) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16434) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16474) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16513) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16561) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16591) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16598) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16630) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16637) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 16653) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 16697) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 16724) (undo-tree-id2214 . -2) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16765) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 16770) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 16801) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16808) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 16841) (16884 . 16886) (16924 . 16926) (16959 . 16962) (16961 . 16964) (16976 . 16978) 16377) nil (25737 15553 958725 548000) 0 nil])
([nil nil ((16860 . 16861) (t 25737 15553 982711 595000)) nil (25737 15569 889552 115000) 0 nil])
([nil nil ((16901 . 16903) 16377) nil (25737 15569 889551 45000) 0 nil])
([nil nil ((16946 . 16948) 16377) nil (25737 15569 889549 493000) 0 nil])
([nil nil ((16969 . 16971) 16377) nil (25737 15569 889544 325000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -17014) (undo-tree-id2224 . -4) (undo-tree-id2225 . -4) (undo-tree-id2226 . -2) (undo-tree-id2227 . -4) (undo-tree-id2228 . -4) (undo-tree-id2229 . -4) (undo-tree-id2230 . -4) (undo-tree-id2231 . -4) (undo-tree-id2232 . -4) (undo-tree-id2233 . -4) (undo-tree-id2234 . -4) (undo-tree-id2235 . -4) (undo-tree-id2236 . -4) (undo-tree-id2237 . -4) (undo-tree-id2238 . -4) (undo-tree-id2239 . -4) (undo-tree-id2240 . -4) (undo-tree-id2241 . -4) (undo-tree-id2242 . -4) (undo-tree-id2243 . -4) (undo-tree-id2244 . -4) (undo-tree-id2245 . -4) (undo-tree-id2246 . -4) (undo-tree-id2247 . -4) 17018 (17016 . 17018) 16377 (17013 . 17016) (t 25737 15569 922737 52000) 16975) nil (25737 15578 539104 830000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 16858) (t 25737 15585 462762 910000)) nil (25737 15598 275588 279000) 0 nil] [nil nil ((#(")" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block))) . 17012) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . 1) (undo-tree-id2223 . -1)) ((17012 . 17013)) (25737 15578 538794 444000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 16898)) nil (25737 15598 275587 385000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 16938)) nil (25737 15598 275586 524000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 16962)) nil (25737 15598 275585 796000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 16858)) nil (25737 15598 275584 786000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 16897)) nil (25737 15598 275583 739000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 16936)) nil (25737 15598 275581 972000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("             " 0 6 (face org-indent) 6 13 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 16959)) nil (25737 15598 275576 562000) 0 nil])
([nil nil ((16858 . 16860) (16895 . 16897) (16942 . 16944) (16957 . 16959) 16377 (t 25737 15598 354785 122000)) nil (25737 15614 781550 955000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -17014) (undo-tree-id2248 . -4) (undo-tree-id2249 . -4) (undo-tree-id2250 . -2) (undo-tree-id2251 . -4) (undo-tree-id2252 . -4) (undo-tree-id2253 . -4) (undo-tree-id2254 . -4) (undo-tree-id2255 . -4) (undo-tree-id2256 . -4) (undo-tree-id2257 . -4) (undo-tree-id2258 . -4) (undo-tree-id2259 . -4) (undo-tree-id2260 . -4) (undo-tree-id2261 . -4) (undo-tree-id2262 . -4) (undo-tree-id2263 . -4) (undo-tree-id2264 . -4) (undo-tree-id2265 . -4) (undo-tree-id2266 . -4) (undo-tree-id2267 . -4) (undo-tree-id2268 . -4) (undo-tree-id2269 . -4) (undo-tree-id2270 . -4) (undo-tree-id2271 . -4) 17018 (17016 . 17018) 16377 (17013 . 17016) (t 25737 15614 810814 446000) 16963) nil (25737 15674 609068 388000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17152 . 17153) (nil fontified nil 17127 . 17153) (nil fontified nil 17112 . 17127) (nil fontified nil 17087 . 17112) (nil fontified nil 17052 . 17087) (nil fontified nil 17014 . 17052) (17014 . 17153)) nil (25737 15674 609041 954000) 0 nil])
([nil nil ((17014 . 17018) (17052 . 17058) (17087 . 17099) (17112 . 17123) (17127 . 17135) 16377) nil (25737 15674 609036 513000) 0 nil])
([nil nil ((17201 . 17203) 16377 (17199 . 17201) (#("    " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 2 4 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 17198) (undo-tree-id2272 . -4) (undo-tree-id2273 . -2) (undo-tree-id2274 . -4) (undo-tree-id2275 . -4) (undo-tree-id2276 . -4) (undo-tree-id2277 . -4) (undo-tree-id2278 . -4) (undo-tree-id2279 . -4) (undo-tree-id2280 . -4) (undo-tree-id2281 . -4) (undo-tree-id2282 . -4) (17200 . 17203) 16377 (17198 . 17200) (#("    " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 2 4 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 17197) (undo-tree-id2283 . -4) (undo-tree-id2284 . -2) (undo-tree-id2285 . -4) (undo-tree-id2286 . -4) (undo-tree-id2287 . -4) (undo-tree-id2288 . -4) (undo-tree-id2289 . -4) (undo-tree-id2290 . -4) (undo-tree-id2291 . -4) (undo-tree-id2292 . -4) (undo-tree-id2293 . -4) (17199 . 17202) 16377 (17197 . 17199) (#("    " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 2 4 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 17196) (undo-tree-id2294 . -4) (undo-tree-id2295 . -2) (undo-tree-id2296 . -4) (undo-tree-id2297 . -4) (undo-tree-id2298 . -4) (undo-tree-id2299 . -4) (undo-tree-id2300 . -4) (undo-tree-id2301 . -4) (undo-tree-id2302 . -4) (undo-tree-id2303 . -4) (undo-tree-id2304 . -4) (undo-tree-id2305 . -4) (17198 . 17201) 16377 (17196 . 17198) (#("    " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 2 4 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 17195) (undo-tree-id2306 . -4) (undo-tree-id2307 . -4) (undo-tree-id2308 . -2) (undo-tree-id2309 . -4) (undo-tree-id2310 . -4) (undo-tree-id2311 . -4) (undo-tree-id2312 . -4) (undo-tree-id2313 . -4) (undo-tree-id2314 . -4) (undo-tree-id2315 . -4) (undo-tree-id2316 . -4) (undo-tree-id2317 . -4) (undo-tree-id2318 . -4) (undo-tree-id2319 . -4) (undo-tree-id2320 . -4) (undo-tree-id2321 . -4) (undo-tree-id2322 . -4) (undo-tree-id2323 . -4) (undo-tree-id2324 . -4) (undo-tree-id2325 . -4) (undo-tree-id2326 . -4) (undo-tree-id2327 . -4) (undo-tree-id2328 . -4) (undo-tree-id2329 . -4) (17199 . 17200) (17197 . 17199) 16377 (17194 . 17197) (t 25737 15674 686929 835000) 17193) nil (25737 15679 753804 648000) 0 nil])
([nil nil ((#("E" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 17220) (undo-tree-id2453 . -1) (t 25737 15679 782940 251000)) nil (25737 15731 720823 334000) 0 nil])
([nil nil ((#("*** XITING THE BODY OF A LOOP
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9675]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 28 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 28 29 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t rear-nonsticky t face org-level-3) 29 30 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 17216) (undo-tree-id2400 . -4) (undo-tree-id2401 . -4) (undo-tree-id2402 . 26) (undo-tree-id2403 . -4) (undo-tree-id2404 . -4) (undo-tree-id2405 . -4) (undo-tree-id2406 . -4) (undo-tree-id2407 . -4) (undo-tree-id2408 . -4) (undo-tree-id2409 . -4) (undo-tree-id2410 . -4) (undo-tree-id2411 . -4) (undo-tree-id2412 . -4) (undo-tree-id2413 . -4) (undo-tree-id2414 . -4) (undo-tree-id2415 . -4) (undo-tree-id2416 . -4) (undo-tree-id2417 . -4) (undo-tree-id2418 . -4) (undo-tree-id2419 . -4) (undo-tree-id2420 . -4) (undo-tree-id2421 . -4) (undo-tree-id2422 . -4) (undo-tree-id2423 . 26) (undo-tree-id2424 . -10) (undo-tree-id2425 . -4) (undo-tree-id2426 . -4) (undo-tree-id2427 . -4) (undo-tree-id2428 . -4) (undo-tree-id2429 . -4) (undo-tree-id2430 . -4) (undo-tree-id2431 . -4) (undo-tree-id2432 . -4) (undo-tree-id2433 . -4) (undo-tree-id2434 . -4) (undo-tree-id2435 . -4) (undo-tree-id2436 . -4) (undo-tree-id2437 . -4) (undo-tree-id2438 . -4) (undo-tree-id2439 . -4) (undo-tree-id2440 . -4) (undo-tree-id2441 . -4) (undo-tree-id2442 . -4) (undo-tree-id2443 . -4) (undo-tree-id2444 . -4) (undo-tree-id2445 . -4) (undo-tree-id2446 . -4) (undo-tree-id2447 . -4) (undo-tree-id2448 . -4) (undo-tree-id2449 . -4) (undo-tree-id2450 . -4) (undo-tree-id2451 . -4) (undo-tree-id2452 . -4) 17220) nil (25737 15731 720819 334000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 17220)) nil (25737 15731 720788 91000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t org-emphasis t)) . 17219) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1)) nil (25737 15731 720786 839000) 0 nil])
([nil nil ((17219 . 17220)) nil (25737 15731 720781 752000) 0 nil])
([nil nil ((17220 . 17222)) nil (25737 15731 720780 937000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17251 . 17252) (nil fontified nil 17222 . 17252) (17222 . 17252) 17221) nil (25737 15731 720779 978000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 17220) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1)) nil (25737 15731 720776 874000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 17220) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1)) nil (25737 15731 720745 872000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 16339) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (t 25737 15731 751051 432000)) nil (25737 15742 467578 459000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 16315)) nil (25737 15742 467563 892000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 17214) (undo-tree-id2454 . 1)) nil (25737 15742 467559 798000) 0 nil])
([nil nil ((17254 . 17298) (#("src" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 17254) (undo-tree-id2486 . -1) (undo-tree-id2487 . -3) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -2) (undo-tree-id2511 . -2) (undo-tree-id2512 . -2) (undo-tree-id2513 . -2) (undo-tree-id2514 . -2) (undo-tree-id2515 . -2) (undo-tree-id2516 . -2) (undo-tree-id2517 . -2) (undo-tree-id2518 . -3) (undo-tree-id2519 . -3) (undo-tree-id2520 . -3) (undo-tree-id2521 . -3) (undo-tree-id2522 . -3) (undo-tree-id2523 . -3) (undo-tree-id2524 . -3) (undo-tree-id2525 . -3) 17257 (17254 . 17257) (#("c" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -17254) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (#("r" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -17255) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) 17256 (17254 . 17256) (t 25737 15742 547075 613000)) nil (25738 32174 311913 5000) 0 nil])
([nil nil ((17265 . 17270)) nil (25738 32174 310726 228000) 0 nil])
([nil nil ((17292 . 17294) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 17291) (undo-tree-id2474 . -2) (undo-tree-id2475 . -2) (undo-tree-id2476 . -2) (undo-tree-id2477 . -2) (undo-tree-id2478 . -2) (undo-tree-id2479 . -2) (undo-tree-id2480 . -2) (undo-tree-id2481 . -2) (undo-tree-id2482 . -2) (undo-tree-id2483 . -2) (undo-tree-id2484 . -2) (17293 . 17294) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 17294) (undo-tree-id2485 . -2) 17291 (17290 . 17293) 17269) nil (25738 32174 310722 349000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17306 . 17307) (nil fontified nil 17291 . 17307) (17291 . 17307) (t 25738 32174 339332 593000)) nil (25738 32212 422456 935000) 0 nil])
([nil nil ((17299 . 17300) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 17299)) nil (25738 32212 422454 855000) 0 nil])
([nil nil ((17291 . 17292)) nil (25738 32212 422450 403000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17323 . 17324) (nil fontified nil 17311 . 17324) (17311 . 17324) 17310 (t 25738 32212 447659 884000)) nil (25738 32229 203342 667000) 0 nil])
([nil nil ((17291 . 17293)) nil (25738 32229 203340 864000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -17327) (undo-tree-id2589 . -2) (undo-tree-id2590 . -2) (undo-tree-id2591 . -2) (undo-tree-id2592 . -2) (undo-tree-id2593 . -2) (undo-tree-id2594 . -2) (undo-tree-id2595 . -2) (undo-tree-id2596 . -2) (undo-tree-id2597 . -2) (undo-tree-id2598 . -2) (undo-tree-id2599 . -2) 17329 (17326 . 17329) 17325) nil (25738 32229 203336 906000) 0 nil])
([nil nil ((17327 . 17329) (t 25738 32229 223780 774000)) nil (25738 32296 277537 628000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17404 . 17405) (nil fontified nil 17389 . 17405) (nil fontified nil 17370 . 17389) (nil fontified nil 17360 . 17370) (nil fontified nil 17349 . 17360) (nil fontified nil 17329 . 17349) (17329 . 17405) 17328) nil (25738 32296 277536 395000) 0 nil])
([nil nil ((17381 . 17382) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 17381)) nil (25738 32296 277534 147000) 0 nil])
([nil nil ((17398 . 17399) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 17398)) nil (25738 32296 277528 852000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -17291) (undo-tree-id2600 . -2) (undo-tree-id2601 . -2) (undo-tree-id2602 . -2) (undo-tree-id2603 . -2) (undo-tree-id2604 . -2) (undo-tree-id2605 . -2) (undo-tree-id2606 . -2) (undo-tree-id2607 . -2) (undo-tree-id2608 . -2) (undo-tree-id2609 . -2) (undo-tree-id2610 . -2) (undo-tree-id2611 . -2) (undo-tree-id2612 . -2) (undo-tree-id2613 . -2) (undo-tree-id2614 . -2) (undo-tree-id2615 . -2) (undo-tree-id2616 . -2) (undo-tree-id2617 . -2) (undo-tree-id2618 . -2) (undo-tree-id2619 . -2) (undo-tree-id2620 . -2) (undo-tree-id2621 . -2) (undo-tree-id2622 . -2) (undo-tree-id2623 . -2) 17293 (17296 . 17298) (17314 . 17316) (17332 . 17334) (17352 . 17354) (17363 . 17365) (17373 . 17375) (17392 . 17394) 17291 (17290 . 17293) (t 25738 32296 352277 85000) 17263) nil (25738 32302 895634 242000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 17294) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 17314) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 17334) (17356 . 17357) (17358 . 17359) (17369 . 17370) (17371 . 17372) (17381 . 17382) (17383 . 17384) (17402 . 17404) 17291) nil (25738 32302 895600 330000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -17423) (undo-tree-id2624 . -2) (undo-tree-id2625 . -2) (undo-tree-id2626 . -2) (undo-tree-id2627 . -2) (undo-tree-id2628 . -2) (undo-tree-id2629 . -2) (undo-tree-id2630 . -2) (undo-tree-id2631 . -2) (undo-tree-id2632 . -2) (undo-tree-id2633 . -2) (undo-tree-id2634 . -2) (undo-tree-id2635 . -2) (undo-tree-id2636 . -2) (undo-tree-id2637 . -2) (undo-tree-id2638 . -2) (undo-tree-id2639 . -2) (undo-tree-id2640 . -2) (undo-tree-id2641 . -2) (undo-tree-id2642 . -2) (undo-tree-id2643 . -2) (undo-tree-id2644 . -2) (undo-tree-id2645 . -2) (undo-tree-id2646 . -2) (undo-tree-id2647 . -2) 17425 (17422 . 17425) (t 25738 32302 920326 659000) 17421) nil (25738 32305 292463 482000) 0 nil])
([nil nil ((17423 . 17425) (t 25738 32305 320344 819000)) nil (25738 32419 856756 213000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17449 . 17450) (nil fontified nil 17425 . 17450) (17425 . 17450) 17424) nil (25738 32419 856754 900000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -17452) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (#("#" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -17453) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (#("(" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block) help-echo nil)) . -17454) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) 17455 (17453 . 17455) (17450 . 17453)) nil (25738 32419 856748 798000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -17423) (undo-tree-id2730 . -2) (undo-tree-id2731 . -2) (undo-tree-id2732 . -2) (undo-tree-id2733 . -2) (undo-tree-id2734 . -2) (undo-tree-id2735 . -2) (undo-tree-id2736 . -2) (undo-tree-id2737 . -2) (undo-tree-id2738 . -2) (undo-tree-id2739 . -2) (undo-tree-id2740 . -2) (undo-tree-id2741 . -2) (undo-tree-id2742 . -2) (undo-tree-id2743 . -2) (undo-tree-id2744 . -2) (undo-tree-id2745 . -2) (undo-tree-id2746 . -2) (undo-tree-id2747 . -2) (undo-tree-id2748 . -2) (undo-tree-id2749 . -2) (undo-tree-id2750 . -2) (undo-tree-id2751 . -2) (undo-tree-id2752 . -2) (undo-tree-id2753 . -2) 17425 (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 17454) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) 17291 (17422 . 17425) (t 25738 32419 885236 426000) 17421) nil (25738 32437 174792 28000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -17328) (undo-tree-id2719 . -2) (undo-tree-id2720 . -2) (undo-tree-id2721 . -2) (undo-tree-id2722 . -2) (undo-tree-id2723 . -2) (undo-tree-id2724 . -2) (undo-tree-id2725 . -2) (undo-tree-id2726 . -2) (undo-tree-id2727 . -2) (undo-tree-id2728 . -2) (undo-tree-id2729 . -2) 17330 (17327 . 17330) 17312) nil (25738 32437 174744 251000) 0 nil])
([nil nil ((17455 . 17457) (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 17454) (undo-tree-id2791 . -2) (undo-tree-id2792 . -2) (undo-tree-id2793 . -2) (undo-tree-id2794 . -2) (undo-tree-id2795 . -2) (undo-tree-id2796 . -2) (undo-tree-id2797 . -2) (undo-tree-id2798 . -2) (undo-tree-id2799 . -2) (undo-tree-id2800 . -2) (undo-tree-id2801 . -2) (undo-tree-id2802 . -2) (undo-tree-id2803 . -2) (undo-tree-id2804 . -2) (undo-tree-id2805 . -2) (undo-tree-id2806 . -2) (undo-tree-id2807 . -2) (undo-tree-id2808 . -2) (undo-tree-id2809 . -2) (undo-tree-id2810 . -2) (undo-tree-id2811 . -2) (undo-tree-id2812 . -2) (undo-tree-id2813 . -2) (undo-tree-id2814 . -2) (17456 . 17457) (17453 . 17456) (t 25738 32437 261375 542000) 17453) nil (25738 32442 890361 962000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 17424) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (t 25738 32442 957421 348000)) nil (25738 32561 195846 253000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -17452) (undo-tree-id2858 . -2) (undo-tree-id2859 . -2) (undo-tree-id2860 . -2) (undo-tree-id2861 . -2) (undo-tree-id2862 . -2) (undo-tree-id2863 . -2) (undo-tree-id2864 . -2) (undo-tree-id2865 . -2) (undo-tree-id2866 . -2) (undo-tree-id2867 . -2) (undo-tree-id2868 . -2) 17454 (#("  " 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 17457) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) 17291 (17451 . 17454) 17424) nil (25738 32561 194997 835000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17514 . 17515) (nil fontified nil 17503 . 17515) (nil fontified nil 17489 . 17503) (nil fontified nil 17452 . 17489) (17452 . 17515)) nil (25738 32561 194968 595000) 0 nil])
([nil nil ((17461 . 17462) (#("’" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 17461)) nil (25738 32561 194967 274000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                              " 0 6 (face org-indent) 6 30 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -17522) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) 17523 (17522 . 17523) (17294 . 17296) (17312 . 17313) (17314 . 17315) (17329 . 17331) (17355 . 17357) (17366 . 17367) (17370 . 17371) (17380 . 17382) (17407 . 17409) (17424 . 17425) (17426 . 17427) (17452 . 17454) (17480 . 17504) (17489 . 17491) (17503 . 17505) 17291 (#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 17479) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (17480 . 17481)) nil (25738 32561 194963 925000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 17294) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 17314) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 17335) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 17357) (#("  " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 17378) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 17390) (#("  " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 17419) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 17438) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 17441) (17531 . 17545) (17533 . 17541) (17547 . 17569) 17291) nil (25738 32582 842704 986000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -17593) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (#("w" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -17594) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) 17595 (17594 . 17595) (17593 . 17594) (17590 . 17593) (t 25738 32561 222393 116000) 17590) nil (25738 32592 459899 267000) 0 nil] [nil nil ((17539 . 17540) (t 25738 32561 222393 116000)) ((#("(" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                              " 0 6 (face org-indent) 6 30 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block))) . 17539)) (25738 32582 406907 845000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 17291) (undo-tree-id3343 . -1) (t 25738 32592 482655 948000)) nil (25738 32612 50939 285000) 0 nil])
([nil nil ((17553 . 17554)) ((#(")" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                              " 0 6 (face org-indent) 6 30 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block))) . 17553)) (25738 32582 406655 755000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 17327) (undo-tree-id3342 . -1)) nil (25738 32612 50933 308000) 0 nil])
nil
([nil nil ((17629 . 17633) (17628 . 17629) (t 25738 32612 74821 811000) 17628) nil (25738 32722 173465 362000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 17632) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1)) nil (25738 32722 173463 897000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t org-emphasis t)) . 17631) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1)) nil (25738 32722 173458 931000) 0 nil])
([nil nil ((17631 . 17632) (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -17631) (undo-tree-id3362 . -1) (undo-tree-id3363 . 1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) 17632 (#(" " 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 17631) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (17632 . 17633) (17631 . 17632)) nil (25738 32722 173443 589000) 0 nil])
([nil nil ((17702 . 17708) (17696 . 17702) (17690 . 17696) (17684 . 17690) (17678 . 17684) (17674 . 17678) (17672 . 17674) (#(" " 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 17671) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (17672 . 17673) (17653 . 17672) (17644 . 17653) (#("," 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -17644) (undo-tree-id3361 . -1) 17645 (17633 . 17645) (17632 . 17633)) nil (25738 32722 173427 779000) 0 nil])
([nil current ((17708 . 17709)) nil (25738 32722 173399 411000) 0 nil])
nil
